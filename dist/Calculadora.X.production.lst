

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 16:44:22 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4520 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	smallconst
    84  000600                     __psmallconst:
    85                           	callstack 0
    86  000600  00                 	db	0
    87  000601                     _valor:
    88                           	callstack 0
    89  000601  3F                 	db	63
    90  000602  06                 	db	6
    91  000603  5B                 	db	91
    92  000604  4F                 	db	79
    93  000605  66                 	db	102
    94  000606  6D                 	db	109
    95  000607  7D                 	db	125
    96  000608  07                 	db	7
    97  000609  7F                 	db	127
    98  00060A  6F                 	db	111
    99  00060B  77                 	db	119
   100  00060C  7C                 	db	124
   101  00060D  39                 	db	57
   102  00060E  5E                 	db	94
   103  00060F  79                 	db	121
   104  000610  71                 	db	113
   105  000611                     __end_of_valor:
   106                           	callstack 0
   107  000611                     _charKey:
   108                           	callstack 0
   109  000611  55                 	db	85
   110  000612  4C                 	db	76
   111  000613  44                 	db	68
   112  000614  52                 	db	82
   113  000615  53                 	db	83
   114  000616  58                 	db	88
   115  000617  41                 	db	65
   116  000618  42                 	db	66
   117  000619  59                 	db	89
   118  00061A  73                 	db	115
   119  00061B                     __end_of_charKey:
   120                           	callstack 0
   121  0000                     _T2CON	set	4042
   122  0000                     _CCP2CON	set	4026
   123  0000                     _CCPR2L	set	4027
   124  0000                     _PR2	set	4043
   125  0000                     _TRISE	set	3990
   126  0000                     _TRISD	set	3989
   127  0000                     _TRISC	set	3988
   128  0000                     _TRISB	set	3987
   129  0000                     _TRISA	set	3986
   130  0000                     _PORTE	set	3972
   131  0000                     _PORTD	set	3971
   132  0000                     _PORTC	set	3970
   133  0000                     _PORTB	set	3969
   134  0000                     _PORTA	set	3968
   135  0000                     _ADRESL	set	4035
   136  0000                     _ADRESH	set	4036
   137  0000                     _ADCON2	set	4032
   138  0000                     _ADCON1	set	4033
   139  0000                     _ADCON0	set	4034
   140  00061B                     STR_2:
   141  00061B  44                 	db	68	;'D'
   142  00061C  3D                 	db	61	;'='
   143  00061D  2B                 	db	43
   144  00061E  31                 	db	49	;'1'
   145  00061F  30                 	db	48	;'0'
   146  000620  30                 	db	48	;'0'
   147  000621  20                 	db	32
   148  000622  20                 	db	32
   149  000623  52                 	db	82	;'R'
   150  000624  3D                 	db	61	;'='
   151  000625  2D                 	db	45
   152  000626  31                 	db	49	;'1'
   153  000627  30                 	db	48	;'0'
   154  000628  30                 	db	48	;'0'
   155  000629  00                 	db	0
   156  00062A                     STR_1:
   157  00062A  55                 	db	85	;'U'
   158  00062B  3D                 	db	61	;'='
   159  00062C  2B                 	db	43
   160  00062D  31                 	db	49	;'1'
   161  00062E  30                 	db	48	;'0'
   162  00062F  20                 	db	32
   163  000630  20                 	db	32
   164  000631  20                 	db	32
   165  000632  4C                 	db	76	;'L'
   166  000633  3D                 	db	61	;'='
   167  000634  2D                 	db	45
   168  000635  31                 	db	49	;'1'
   169  000636  30                 	db	48	;'0'
   170  000637  00                 	db	0
   171  000638                     STR_3:
   172  000638  55                 	db	85	;'U'
   173  000639  20                 	db	32
   174  00063A  3D                 	db	61	;'='
   175  00063B  20                 	db	32
   176  00063C  2B                 	db	43
   177  00063D  20                 	db	32
   178  00063E  4C                 	db	76	;'L'
   179  00063F  20                 	db	32
   180  000640  3D                 	db	61	;'='
   181  000641  20                 	db	32
   182  000642  2D                 	db	45
   183  000643  00                 	db	0
   184  000644                     STR_4:
   185  000644  44                 	db	68	;'D'
   186  000645  20                 	db	32
   187  000646  3D                 	db	61	;'='
   188  000647  20                 	db	32
   189  000648  2A                 	db	42
   190  000649  20                 	db	32
   191  00064A  52                 	db	82	;'R'
   192  00064B  20                 	db	32
   193  00064C  3D                 	db	61	;'='
   194  00064D  20                 	db	32
   195  00064E  2F                 	db	47
   196  00064F  00                 	db	0
   197  000650                     STR_11:
   198  000650  52                 	db	82	;'R'
   199  000651  65                 	db	101	;'e'
   200  000652  73                 	db	115	;'s'
   201  000653  75                 	db	117	;'u'
   202  000654  6C                 	db	108	;'l'
   203  000655  74                 	db	116	;'t'
   204  000656  61                 	db	97	;'a'
   205  000657  64                 	db	100	;'d'
   206  000658  6F                 	db	111	;'o'
   207  000659  3D                 	db	61	;'='
   208  00065A  00                 	db	0
   209  00065B                     STR_9:
   210  00065B  2A                 	db	42
   211  00065C  00                 	db	0
   212  00065D                     STR_7:
   213  00065D  2B                 	db	43
   214  00065E  00                 	db	0
   215  00065F  00                 	db	0	; dummy byte at the end
   216  0000                     
   217                           ; #config settings
   218                           
   219                           	psect	cinit
   220  001F4C                     __pcinit:
   221                           	callstack 0
   222  001F4C                     start_initialization:
   223                           	callstack 0
   224  001F4C                     __initialization:
   225                           	callstack 0
   226                           
   227                           ; Clear objects allocated to COMRAM (12 bytes)
   228  001F4C  EE00  F027         	lfsr	0,__pbssCOMRAM
   229  001F50  0E0C               	movlw	12
   230  001F52                     clear_0:
   231  001F52  6AEE               	clrf	postinc0,c
   232  001F54  06E8               	decf	wreg,f,c
   233  001F56  E1FD               	bnz	clear_0
   234  001F58                     end_of_initialization:
   235                           	callstack 0
   236  001F58                     __end_of__initialization:
   237                           	callstack 0
   238  001F58  0E00               	movlw	low (__Lmediumconst shr (0+16))
   239  001F5A  6EF8               	movwf	tblptru,c
   240  001F5C  0100               	movlb	0
   241  001F5E  EF30  F003         	goto	_main	;jump to C main() function
   242                           
   243                           	psect	bssCOMRAM
   244  000027                     __pbssCOMRAM:
   245                           	callstack 0
   246  000027                     kpDebounce@oldRead:
   247                           	callstack 0
   248  000027                     	ds	2
   249  000029                     kpDebounce@newRead:
   250                           	callstack 0
   251  000029                     	ds	2
   252  00002B                     _keys:
   253                           	callstack 0
   254  00002B                     	ds	2
   255  00002D                     _v3:
   256                           	callstack 0
   257  00002D                     	ds	1
   258  00002E                     _v2:
   259                           	callstack 0
   260  00002E                     	ds	1
   261  00002F                     _v1:
   262                           	callstack 0
   263  00002F                     	ds	1
   264  000030                     _v0:
   265                           	callstack 0
   266  000030                     	ds	1
   267  000031                     _display:
   268                           	callstack 0
   269  000031                     	ds	1
   270  000032                     kpDebounce@tempo:
   271                           	callstack 0
   272  000032                     	ds	1
   273                           
   274                           	psect	cstackCOMRAM
   275  000001                     __pcstackCOMRAM:
   276                           	callstack 0
   277  000001                     ??_kpReadKey:
   278  000001                     ?_digitalRead:
   279                           	callstack 0
   280  000001                     ?___wmul:
   281                           	callstack 0
   282  000001                     ?___awdiv:
   283                           	callstack 0
   284  000001                     ?___lwdiv:
   285                           	callstack 0
   286  000001                     ?___aldiv:
   287                           	callstack 0
   288  000001                     atraso_ms@num:
   289                           	callstack 0
   290  000001                     digitalWrite@pin:
   291                           	callstack 0
   292  000001                     digitalRead@pin:
   293                           	callstack 0
   294  000001                     pinMode@pin:
   295                           	callstack 0
   296  000001                     delayMicro@a:
   297                           	callstack 0
   298  000001                     delayMili@a:
   299                           	callstack 0
   300  000001                     ___wmul@multiplier:
   301                           	callstack 0
   302  000001                     ___awdiv@dividend:
   303                           	callstack 0
   304  000001                     ___lwdiv@dividend:
   305                           	callstack 0
   306  000001                     ___aldiv@dividend:
   307                           	callstack 0
   308                           
   309                           ; 4 bytes @ 0x0
   310  000001                     	ds	2
   311  000003                     ??_digitalRead:
   312  000003                     ??_delayMili:
   313  000003                     atraso_ms@i:
   314                           	callstack 0
   315  000003                     digitalWrite@value:
   316                           	callstack 0
   317  000003                     pinMode@type:
   318                           	callstack 0
   319  000003                     ___wmul@multiplicand:
   320                           	callstack 0
   321  000003                     ___awdiv@divisor:
   322                           	callstack 0
   323  000003                     ___lwdiv@divisor:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x2
   327  000003                     	ds	1
   328  000004                     kpReadKey@i:
   329                           	callstack 0
   330  000004                     delayMili@i:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x3
   334  000004                     	ds	1
   335  000005                     ??_pinMode:
   336  000005                     ??_digitalWrite:
   337  000005                     atraso_ms@j:
   338                           	callstack 0
   339  000005                     ___awdiv@counter:
   340                           	callstack 0
   341  000005                     ___wmul@product:
   342                           	callstack 0
   343  000005                     ___lwdiv@quotient:
   344                           	callstack 0
   345  000005                     ___aldiv@divisor:
   346                           	callstack 0
   347                           
   348                           ; 4 bytes @ 0x4
   349  000005                     	ds	1
   350  000006                     atraso_ms@k:
   351                           	callstack 0
   352  000006                     ___awdiv@sign:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x5
   356  000006                     	ds	1
   357  000007                     ___lwdiv@counter:
   358                           	callstack 0
   359  000007                     soWrite@value:
   360                           	callstack 0
   361  000007                     ___awdiv@quotient:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x6
   365  000007                     	ds	1
   366  000008                     ??_pwmSet:
   367                           
   368                           ; 1 bytes @ 0x7
   369  000008                     	ds	1
   370  000009                     ?___awmod:
   371                           	callstack 0
   372  000009                     soWrite@i:
   373                           	callstack 0
   374  000009                     ___aldiv@counter:
   375                           	callstack 0
   376  000009                     ___awmod@dividend:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x8
   380  000009                     	ds	1
   381  00000A                     ??_ssdUpdate:
   382  00000A                     ??_kpDebounce:
   383  00000A                     pwmSet@porcento:
   384                           	callstack 0
   385  00000A                     ___aldiv@sign:
   386                           	callstack 0
   387  00000A                     pushNibble@rs:
   388                           	callstack 0
   389  00000A                     pushByte@rs:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x9
   393  00000A                     	ds	1
   394  00000B                     pwmSet@val:
   395                           	callstack 0
   396  00000B                     ___awmod@divisor:
   397                           	callstack 0
   398  00000B                     ___aldiv@quotient:
   399                           	callstack 0
   400                           
   401                           ; 4 bytes @ 0xA
   402  00000B                     	ds	1
   403  00000C                     ??_pushByte:
   404  00000C                     pushNibble@value:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0xB
   408  00000C                     	ds	1
   409  00000D                     pushByte@value:
   410                           	callstack 0
   411  00000D                     ___awmod@counter:
   412                           	callstack 0
   413  00000D                     kpDebounce@i:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0xC
   417  00000D                     	ds	1
   418  00000E                     lcdCommand@value:
   419                           	callstack 0
   420  00000E                     lcdChar@value:
   421                           	callstack 0
   422  00000E                     ___awmod@sign:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0xD
   426  00000E                     	ds	1
   427  00000F                     ssdDigit@pos:
   428                           	callstack 0
   429  00000F                     lcdPosition@line:
   430                           	callstack 0
   431  00000F                     lcdString@msg:
   432                           	callstack 0
   433  00000F                     lcdNumber@value:
   434                           	callstack 0
   435  00000F                     pwmFrequency@freq:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0xE
   439  00000F                     	ds	1
   440  000010                     ssdDigit@val:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0xF
   444  000010                     	ds	1
   445  000011                     ??_lcdString:
   446  000011                     lcdPosition@col:
   447                           	callstack 0
   448  000011                     lcdNumber@i:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x10
   452  000011                     	ds	2
   453  000013                     lcdString@i:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x12
   457  000013                     	ds	2
   458  000015                     ??_main:
   459                           
   460                           ; 1 bytes @ 0x14
   461  000015                     	ds	2
   462  000017                     main@x:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x16
   466  000017                     	ds	2
   467  000019                     main@y:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x18
   471  000019                     	ds	2
   472  00001B                     main@operacao:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x1A
   476  00001B                     	ds	2
   477  00001D                     main@t:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x1C
   481  00001D                     	ds	2
   482  00001F                     main@temp:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x1E
   486  00001F                     	ds	2
   487  000021                     main@num1:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x20
   491  000021                     	ds	2
   492  000023                     main@num2:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x22
   496  000023                     	ds	2
   497  000025                     main@tecla:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x24
   501  000025                     	ds	2
   502                           
   503 ;;
   504 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   505 ;;
   506 ;; *************** function _main *****************
   507 ;; Defined at:
   508 ;;		line 13 in file "main.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;  tecla           2   36[COMRAM] int 
   513 ;;  num2            2   34[COMRAM] int 
   514 ;;  num1            2   32[COMRAM] int 
   515 ;;  temp            2   30[COMRAM] int 
   516 ;;  t               2   28[COMRAM] int 
   517 ;;  operacao        2   26[COMRAM] int 
   518 ;;  y               2   24[COMRAM] int 
   519 ;;  x               2   22[COMRAM] int 
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   529 ;;      Params:         0       0       0       0       0       0       0
   530 ;;      Locals:        16       0       0       0       0       0       0
   531 ;;      Temps:          2       0       0       0       0       0       0
   532 ;;      Totals:        18       0       0       0       0       0       0
   533 ;;Total ram usage:       18 bytes
   534 ;; Hardware stack levels required when called: 6
   535 ;; This function calls:
   536 ;;		___awdiv
   537 ;;		___awmod
   538 ;;		___wmul
   539 ;;		_atraso_ms
   540 ;;		_kpDebounce
   541 ;;		_kpInit
   542 ;;		_kpReadKey
   543 ;;		_lcdCommand
   544 ;;		_lcdInit
   545 ;;		_lcdNumber
   546 ;;		_lcdPosition
   547 ;;		_lcdString
   548 ;;		_pwmInit
   549 ;;		_pwmSet
   550 ;;		_ssdDigit
   551 ;;		_ssdInit
   552 ;;		_ssdUpdate
   553 ;; This function is called by:
   554 ;;		Startup code after reset
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           	psect	text0
   559  000660                     __ptext0:
   560                           	callstack 0
   561  000660                     _main:
   562                           	callstack 25
   563  000660                     
   564                           ;main.c: 14:     ssdInit();
   565  000660  EC38  F00E         	call	_ssdInit	;wreg free
   566                           
   567                           ;main.c: 15:     lcdInit();
   568  000664  ECD6  F00B         	call	_lcdInit	;wreg free
   569                           
   570                           ;main.c: 16:     kpInit();
   571  000668  ECE7  F00E         	call	_kpInit	;wreg free
   572                           
   573                           ;main.c: 17:     pwmInit();
   574  00066C  EC99  F00F         	call	_pwmInit	;wreg free
   575  000670                     l2237:
   576                           
   577                           ;main.c: 23:         lcdString("U=+10   L=-10");
   578  000670  0E2A               	movlw	low STR_1
   579  000672  6E0F               	movwf	lcdString@msg^0,c
   580  000674  0E06               	movlw	high STR_1
   581  000676  6E10               	movwf	(lcdString@msg+1)^0,c
   582  000678  EC88  F00C         	call	_lcdString	;wreg free
   583  00067C                     
   584                           ;main.c: 24:         lcdPosition(1, 0);
   585  00067C  0E00               	movlw	0
   586  00067E  6E10               	movwf	(lcdPosition@line+1)^0,c
   587  000680  0E01               	movlw	1
   588  000682  6E0F               	movwf	lcdPosition@line^0,c
   589  000684  0E00               	movlw	0
   590  000686  6E12               	movwf	(lcdPosition@col+1)^0,c
   591  000688  0E00               	movlw	0
   592  00068A  6E11               	movwf	lcdPosition@col^0,c
   593  00068C  ECCA  F00E         	call	_lcdPosition	;wreg free
   594                           
   595                           ;main.c: 25:         lcdString("D=+100  R=-100");
   596  000690  0E1B               	movlw	low STR_2
   597  000692  6E0F               	movwf	lcdString@msg^0,c
   598  000694  0E06               	movlw	high STR_2
   599  000696  6E10               	movwf	(lcdString@msg+1)^0,c
   600  000698  EC88  F00C         	call	_lcdString	;wreg free
   601  00069C                     l2241:
   602                           
   603                           ;main.c: 27:             if (kpReadKey() != temp) {
   604  00069C  ECC7  F00C         	call	_kpReadKey	;wreg free
   605  0006A0  6E15               	movwf	??_main^0,c
   606  0006A2  6A16               	clrf	(??_main+1)^0,c
   607  0006A4  501F               	movf	main@temp^0,w,c
   608  0006A6  1815               	xorwf	??_main^0,w,c
   609  0006A8  E109               	bnz	u2200
   610  0006AA  5020               	movf	(main@temp+1)^0,w,c
   611  0006AC  1816               	xorwf	(??_main+1)^0,w,c
   612  0006AE  B4D8               	btfsc	status,2,c
   613  0006B0  EF5C  F003         	goto	u2201
   614  0006B4  EF5E  F003         	goto	u2200
   615  0006B8                     u2201:
   616  0006B8  EFC4  F003         	goto	l2263
   617  0006BC                     u2200:
   618  0006BC                     
   619                           ;main.c: 28:                 temp = kpReadKey();
   620  0006BC  ECC7  F00C         	call	_kpReadKey	;wreg free
   621  0006C0  6E15               	movwf	??_main^0,c
   622  0006C2  5015               	movf	??_main^0,w,c
   623  0006C4  6E1F               	movwf	main@temp^0,c
   624  0006C6  6A20               	clrf	(main@temp+1)^0,c
   625                           
   626                           ;main.c: 29:                 if (kpReadKey() != 0) {
   627  0006C8  ECC7  F00C         	call	_kpReadKey	;wreg free
   628  0006CC  0900               	iorlw	0
   629  0006CE  B4D8               	btfsc	status,2,c
   630  0006D0  EF6C  F003         	goto	u2211
   631  0006D4  EF6E  F003         	goto	u2210
   632  0006D8                     u2211:
   633  0006D8  EFC4  F003         	goto	l2263
   634  0006DC                     u2210:
   635  0006DC                     
   636                           ;main.c: 30:                     tecla = kpReadKey();
   637  0006DC  ECC7  F00C         	call	_kpReadKey	;wreg free
   638  0006E0  6E15               	movwf	??_main^0,c
   639  0006E2  5015               	movf	??_main^0,w,c
   640  0006E4  6E25               	movwf	main@tecla^0,c
   641  0006E6  6A26               	clrf	(main@tecla+1)^0,c
   642  0006E8                     
   643                           ;main.c: 31:                     if (tecla == 'U') {
   644  0006E8  0E55               	movlw	85
   645  0006EA  1825               	xorwf	main@tecla^0,w,c
   646  0006EC  1026               	iorwf	(main@tecla+1)^0,w,c
   647  0006EE  A4D8               	btfss	status,2,c
   648  0006F0  EF7C  F003         	goto	u2221
   649  0006F4  EF7E  F003         	goto	u2220
   650  0006F8                     u2221:
   651  0006F8  EF82  F003         	goto	l37
   652  0006FC                     u2220:
   653  0006FC                     
   654                           ;main.c: 32:                         num1 += 10;
   655  0006FC  0E0A               	movlw	10
   656  0006FE  2621               	addwf	main@num1^0,f,c
   657  000700  0E00               	movlw	0
   658  000702  2222               	addwfc	(main@num1+1)^0,f,c
   659  000704                     l37:
   660                           
   661                           ;main.c: 34:                     if (tecla == 'L') {
   662  000704  0E4C               	movlw	76
   663  000706  1825               	xorwf	main@tecla^0,w,c
   664  000708  1026               	iorwf	(main@tecla+1)^0,w,c
   665  00070A  A4D8               	btfss	status,2,c
   666  00070C  EF8A  F003         	goto	u2231
   667  000710  EF8C  F003         	goto	u2230
   668  000714                     u2231:
   669  000714  EF90  F003         	goto	l38
   670  000718                     u2230:
   671  000718                     
   672                           ;main.c: 35:                         num1 += 100;
   673  000718  0E64               	movlw	100
   674  00071A  2621               	addwf	main@num1^0,f,c
   675  00071C  0E00               	movlw	0
   676  00071E  2222               	addwfc	(main@num1+1)^0,f,c
   677  000720                     l38:
   678                           
   679                           ;main.c: 37:                     if (tecla == 'D') {
   680  000720  0E44               	movlw	68
   681  000722  1825               	xorwf	main@tecla^0,w,c
   682  000724  1026               	iorwf	(main@tecla+1)^0,w,c
   683  000726  A4D8               	btfss	status,2,c
   684  000728  EF98  F003         	goto	u2241
   685  00072C  EF9A  F003         	goto	u2240
   686  000730                     u2241:
   687  000730  EF9E  F003         	goto	l39
   688  000734                     u2240:
   689  000734                     
   690                           ;main.c: 38:                         num1 -= 10;
   691  000734  0EF6               	movlw	246
   692  000736  2621               	addwf	main@num1^0,f,c
   693  000738  0EFF               	movlw	255
   694  00073A  2222               	addwfc	(main@num1+1)^0,f,c
   695  00073C                     l39:
   696                           
   697                           ;main.c: 40:                     if (tecla == 'R') {
   698  00073C  0E52               	movlw	82
   699  00073E  1825               	xorwf	main@tecla^0,w,c
   700  000740  1026               	iorwf	(main@tecla+1)^0,w,c
   701  000742  A4D8               	btfss	status,2,c
   702  000744  EFA6  F003         	goto	u2251
   703  000748  EFA8  F003         	goto	u2250
   704  00074C                     u2251:
   705  00074C  EFAC  F003         	goto	l40
   706  000750                     u2250:
   707  000750                     
   708                           ;main.c: 41:                         num1 -= 100;
   709  000750  0E9C               	movlw	156
   710  000752  2621               	addwf	main@num1^0,f,c
   711  000754  0EFF               	movlw	255
   712  000756  2222               	addwfc	(main@num1+1)^0,f,c
   713  000758                     l40:
   714                           
   715                           ;main.c: 43:                     if (tecla == 'S') {
   716  000758  0E53               	movlw	83
   717  00075A  1825               	xorwf	main@tecla^0,w,c
   718  00075C  1026               	iorwf	(main@tecla+1)^0,w,c
   719  00075E  A4D8               	btfss	status,2,c
   720  000760  EFB4  F003         	goto	u2261
   721  000764  EFB6  F003         	goto	u2260
   722  000768                     u2261:
   723  000768  EFC4  F003         	goto	l2263
   724  00076C                     u2260:
   725  00076C                     
   726                           ;main.c: 44:                         pwmSet(100);
   727  00076C  0E64               	movlw	100
   728  00076E  EC77  F00D         	call	_pwmSet
   729  000772                     
   730                           ;main.c: 45:                         atraso_ms(250);
   731  000772  0E00               	movlw	0
   732  000774  6E02               	movwf	(atraso_ms@num+1)^0,c
   733  000776  0EFA               	movlw	250
   734  000778  6E01               	movwf	atraso_ms@num^0,c
   735  00077A  ECAD  F00D         	call	_atraso_ms	;wreg free
   736  00077E                     
   737                           ;main.c: 46:                         pwmSet(0);
   738  00077E  0E00               	movlw	0
   739  000780  EC77  F00D         	call	_pwmSet
   740                           
   741                           ;main.c: 47:                         break;
   742  000784  EF38  F004         	goto	l2279
   743  000788                     l2263:
   744                           
   745                           ;main.c: 51:             ssdDigit((num1 / 1) % 10, 3);
   746  000788  0E03               	movlw	3
   747  00078A  6E0F               	movwf	ssdDigit@pos^0,c
   748  00078C  C021  F009         	movff	main@num1,___awmod@dividend
   749  000790  C022  F00A         	movff	main@num1+1,___awmod@dividend+1
   750  000794  0E00               	movlw	0
   751  000796  6E0C               	movwf	(___awmod@divisor+1)^0,c
   752  000798  0E0A               	movlw	10
   753  00079A  6E0B               	movwf	___awmod@divisor^0,c
   754  00079C  EC30  F00C         	call	___awmod	;wreg free
   755  0007A0  5009               	movf	?___awmod^0,w,c
   756  0007A2  EC0C  F00E         	call	_ssdDigit
   757                           
   758                           ;main.c: 52:             ssdDigit((num1 / 10) % 10, 2);
   759  0007A6  0E02               	movlw	2
   760  0007A8  6E0F               	movwf	ssdDigit@pos^0,c
   761  0007AA  0E00               	movlw	0
   762  0007AC  6E04               	movwf	(___awdiv@divisor+1)^0,c
   763  0007AE  0E0A               	movlw	10
   764  0007B0  6E03               	movwf	___awdiv@divisor^0,c
   765  0007B2  C021  F001         	movff	main@num1,___awdiv@dividend
   766  0007B6  C022  F002         	movff	main@num1+1,___awdiv@dividend+1
   767  0007BA  EC74  F00B         	call	___awdiv	;wreg free
   768  0007BE  C001  F009         	movff	?___awdiv,___awmod@dividend
   769  0007C2  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   770  0007C6  0E00               	movlw	0
   771  0007C8  6E0C               	movwf	(___awmod@divisor+1)^0,c
   772  0007CA  0E0A               	movlw	10
   773  0007CC  6E0B               	movwf	___awmod@divisor^0,c
   774  0007CE  EC30  F00C         	call	___awmod	;wreg free
   775  0007D2  5009               	movf	?___awmod^0,w,c
   776  0007D4  EC0C  F00E         	call	_ssdDigit
   777                           
   778                           ;main.c: 53:             ssdDigit((num1 / 100) % 10, 1);
   779  0007D8  0E01               	movlw	1
   780  0007DA  6E0F               	movwf	ssdDigit@pos^0,c
   781  0007DC  0E00               	movlw	0
   782  0007DE  6E04               	movwf	(___awdiv@divisor+1)^0,c
   783  0007E0  0E64               	movlw	100
   784  0007E2  6E03               	movwf	___awdiv@divisor^0,c
   785  0007E4  C021  F001         	movff	main@num1,___awdiv@dividend
   786  0007E8  C022  F002         	movff	main@num1+1,___awdiv@dividend+1
   787  0007EC  EC74  F00B         	call	___awdiv	;wreg free
   788  0007F0  C001  F009         	movff	?___awdiv,___awmod@dividend
   789  0007F4  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   790  0007F8  0E00               	movlw	0
   791  0007FA  6E0C               	movwf	(___awmod@divisor+1)^0,c
   792  0007FC  0E0A               	movlw	10
   793  0007FE  6E0B               	movwf	___awmod@divisor^0,c
   794  000800  EC30  F00C         	call	___awmod	;wreg free
   795  000804  5009               	movf	?___awmod^0,w,c
   796  000806  EC0C  F00E         	call	_ssdDigit
   797                           
   798                           ;main.c: 54:             ssdDigit((num1 / 1000) % 10, 0);
   799  00080A  0E00               	movlw	0
   800  00080C  6E0F               	movwf	ssdDigit@pos^0,c
   801  00080E  0E03               	movlw	3
   802  000810  6E04               	movwf	(___awdiv@divisor+1)^0,c
   803  000812  0EE8               	movlw	232
   804  000814  6E03               	movwf	___awdiv@divisor^0,c
   805  000816  C021  F001         	movff	main@num1,___awdiv@dividend
   806  00081A  C022  F002         	movff	main@num1+1,___awdiv@dividend+1
   807  00081E  EC74  F00B         	call	___awdiv	;wreg free
   808  000822  C001  F009         	movff	?___awdiv,___awmod@dividend
   809  000826  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   810  00082A  0E00               	movlw	0
   811  00082C  6E0C               	movwf	(___awmod@divisor+1)^0,c
   812  00082E  0E0A               	movlw	10
   813  000830  6E0B               	movwf	___awmod@divisor^0,c
   814  000832  EC30  F00C         	call	___awmod	;wreg free
   815  000836  5009               	movf	?___awmod^0,w,c
   816  000838  EC0C  F00E         	call	_ssdDigit
   817  00083C                     
   818                           ;main.c: 55:             ssdUpdate();
   819  00083C  ECE8  F008         	call	_ssdUpdate	;wreg free
   820  000840                     
   821                           ;main.c: 56:             for (t = 0; t < 1000; t++);
   822  000840  0E00               	movlw	0
   823  000842  6E1E               	movwf	(main@t+1)^0,c
   824  000844  0E00               	movlw	0
   825  000846  6E1D               	movwf	main@t^0,c
   826  000848                     l2273:
   827  000848  4A1D               	infsnz	main@t^0,f,c
   828  00084A  2A1E               	incf	(main@t+1)^0,f,c
   829  00084C  BE1E               	btfsc	(main@t+1)^0,7,c
   830  00084E  EF32  F004         	goto	u2271
   831  000852  0EE8               	movlw	232
   832  000854  5C1D               	subwf	main@t^0,w,c
   833  000856  0E03               	movlw	3
   834  000858  581E               	subwfb	(main@t+1)^0,w,c
   835  00085A  A0D8               	btfss	status,0,c
   836  00085C  EF32  F004         	goto	u2271
   837  000860  EF34  F004         	goto	u2270
   838  000864                     u2271:
   839  000864  EF24  F004         	goto	l2273
   840  000868                     u2270:
   841  000868                     
   842                           ;main.c: 57:             kpDebounce();
   843  000868  EC53  F00A         	call	_kpDebounce	;wreg free
   844                           
   845                           ;main.c: 58:         }
   846  00086C  EF4E  F003         	goto	l2241
   847  000870                     l2279:
   848                           
   849                           ;main.c: 59:         lcdCommand(0x01);
   850  000870  0E01               	movlw	1
   851  000872  EC8A  F00F         	call	_lcdCommand
   852  000876                     
   853                           ;main.c: 60:         lcdString("U = + L = -");
   854  000876  0E38               	movlw	low STR_3
   855  000878  6E0F               	movwf	lcdString@msg^0,c
   856  00087A  0E06               	movlw	high STR_3
   857  00087C  6E10               	movwf	(lcdString@msg+1)^0,c
   858  00087E  EC88  F00C         	call	_lcdString	;wreg free
   859  000882                     
   860                           ;main.c: 61:         lcdPosition(1, 0);
   861  000882  0E00               	movlw	0
   862  000884  6E10               	movwf	(lcdPosition@line+1)^0,c
   863  000886  0E01               	movlw	1
   864  000888  6E0F               	movwf	lcdPosition@line^0,c
   865  00088A  0E00               	movlw	0
   866  00088C  6E12               	movwf	(lcdPosition@col+1)^0,c
   867  00088E  0E00               	movlw	0
   868  000890  6E11               	movwf	lcdPosition@col^0,c
   869  000892  ECCA  F00E         	call	_lcdPosition	;wreg free
   870                           
   871                           ;main.c: 62:         lcdString("D = * R = /");
   872  000896  0E44               	movlw	low STR_4
   873  000898  6E0F               	movwf	lcdString@msg^0,c
   874  00089A  0E06               	movlw	high STR_4
   875  00089C  6E10               	movwf	(lcdString@msg+1)^0,c
   876  00089E  EC88  F00C         	call	_lcdString	;wreg free
   877  0008A2                     l2285:
   878                           
   879                           ;main.c: 65:             if (kpReadKey() != temp) {
   880  0008A2  ECC7  F00C         	call	_kpReadKey	;wreg free
   881  0008A6  6E15               	movwf	??_main^0,c
   882  0008A8  6A16               	clrf	(??_main+1)^0,c
   883  0008AA  501F               	movf	main@temp^0,w,c
   884  0008AC  1815               	xorwf	??_main^0,w,c
   885  0008AE  E109               	bnz	u2280
   886  0008B0  5020               	movf	(main@temp+1)^0,w,c
   887  0008B2  1816               	xorwf	(??_main+1)^0,w,c
   888  0008B4  B4D8               	btfsc	status,2,c
   889  0008B6  EF5F  F004         	goto	u2281
   890  0008BA  EF61  F004         	goto	u2280
   891  0008BE                     u2281:
   892  0008BE  EFC7  F004         	goto	l2315
   893  0008C2                     u2280:
   894  0008C2                     
   895                           ;main.c: 66:                 temp = kpReadKey();
   896  0008C2  ECC7  F00C         	call	_kpReadKey	;wreg free
   897  0008C6  6E15               	movwf	??_main^0,c
   898  0008C8  5015               	movf	??_main^0,w,c
   899  0008CA  6E1F               	movwf	main@temp^0,c
   900  0008CC  6A20               	clrf	(main@temp+1)^0,c
   901                           
   902                           ;main.c: 67:                 if (kpReadKey() != 0) {
   903  0008CE  ECC7  F00C         	call	_kpReadKey	;wreg free
   904  0008D2  0900               	iorlw	0
   905  0008D4  B4D8               	btfsc	status,2,c
   906  0008D6  EF6F  F004         	goto	u2291
   907  0008DA  EF71  F004         	goto	u2290
   908  0008DE                     u2291:
   909  0008DE  EFC7  F004         	goto	l2315
   910  0008E2                     u2290:
   911  0008E2                     
   912                           ;main.c: 68:                     tecla = kpReadKey();
   913  0008E2  ECC7  F00C         	call	_kpReadKey	;wreg free
   914  0008E6  6E15               	movwf	??_main^0,c
   915  0008E8  5015               	movf	??_main^0,w,c
   916  0008EA  6E25               	movwf	main@tecla^0,c
   917  0008EC  6A26               	clrf	(main@tecla+1)^0,c
   918  0008EE                     
   919                           ;main.c: 69:                     if (tecla == 'U') {
   920  0008EE  0E55               	movlw	85
   921  0008F0  1825               	xorwf	main@tecla^0,w,c
   922  0008F2  1026               	iorwf	(main@tecla+1)^0,w,c
   923  0008F4  A4D8               	btfss	status,2,c
   924  0008F6  EF7F  F004         	goto	u2301
   925  0008FA  EF81  F004         	goto	u2300
   926  0008FE                     u2301:
   927  0008FE  EF85  F004         	goto	l2295
   928  000902                     u2300:
   929  000902                     
   930                           ;main.c: 70:                         operacao = 0;
   931  000902  0E00               	movlw	0
   932  000904  6E1C               	movwf	(main@operacao+1)^0,c
   933  000906  0E00               	movlw	0
   934  000908  6E1B               	movwf	main@operacao^0,c
   935  00090A                     l2295:
   936                           
   937                           ;main.c: 72:                     if (tecla == 'L') {
   938  00090A  0E4C               	movlw	76
   939  00090C  1825               	xorwf	main@tecla^0,w,c
   940  00090E  1026               	iorwf	(main@tecla+1)^0,w,c
   941  000910  A4D8               	btfss	status,2,c
   942  000912  EF8D  F004         	goto	u2311
   943  000916  EF8F  F004         	goto	u2310
   944  00091A                     u2311:
   945  00091A  EF93  F004         	goto	l2299
   946  00091E                     u2310:
   947  00091E                     
   948                           ;main.c: 73:                         operacao = 1;
   949  00091E  0E00               	movlw	0
   950  000920  6E1C               	movwf	(main@operacao+1)^0,c
   951  000922  0E01               	movlw	1
   952  000924  6E1B               	movwf	main@operacao^0,c
   953  000926                     l2299:
   954                           
   955                           ;main.c: 75:                     if (tecla == 'D') {
   956  000926  0E44               	movlw	68
   957  000928  1825               	xorwf	main@tecla^0,w,c
   958  00092A  1026               	iorwf	(main@tecla+1)^0,w,c
   959  00092C  A4D8               	btfss	status,2,c
   960  00092E  EF9B  F004         	goto	u2321
   961  000932  EF9D  F004         	goto	u2320
   962  000936                     u2321:
   963  000936  EFA1  F004         	goto	l2303
   964  00093A                     u2320:
   965  00093A                     
   966                           ;main.c: 76:                         operacao = 2;
   967  00093A  0E00               	movlw	0
   968  00093C  6E1C               	movwf	(main@operacao+1)^0,c
   969  00093E  0E02               	movlw	2
   970  000940  6E1B               	movwf	main@operacao^0,c
   971  000942                     l2303:
   972                           
   973                           ;main.c: 78:                     if (tecla == 'R') {
   974  000942  0E52               	movlw	82
   975  000944  1825               	xorwf	main@tecla^0,w,c
   976  000946  1026               	iorwf	(main@tecla+1)^0,w,c
   977  000948  A4D8               	btfss	status,2,c
   978  00094A  EFA9  F004         	goto	u2331
   979  00094E  EFAB  F004         	goto	u2330
   980  000952                     u2331:
   981  000952  EFAF  F004         	goto	l2307
   982  000956                     u2330:
   983  000956                     
   984                           ;main.c: 79:                         operacao = 3;
   985  000956  0E00               	movlw	0
   986  000958  6E1C               	movwf	(main@operacao+1)^0,c
   987  00095A  0E03               	movlw	3
   988  00095C  6E1B               	movwf	main@operacao^0,c
   989  00095E                     l2307:
   990                           
   991                           ;main.c: 81:                     if (tecla == 'S') {
   992  00095E  0E53               	movlw	83
   993  000960  1825               	xorwf	main@tecla^0,w,c
   994  000962  1026               	iorwf	(main@tecla+1)^0,w,c
   995  000964  A4D8               	btfss	status,2,c
   996  000966  EFB7  F004         	goto	u2341
   997  00096A  EFB9  F004         	goto	u2340
   998  00096E                     u2341:
   999  00096E  EFC7  F004         	goto	l2315
  1000  000972                     u2340:
  1001  000972                     
  1002                           ;main.c: 82:                         pwmSet(100);
  1003  000972  0E64               	movlw	100
  1004  000974  EC77  F00D         	call	_pwmSet
  1005  000978                     
  1006                           ;main.c: 83:                         atraso_ms(250);
  1007  000978  0E00               	movlw	0
  1008  00097A  6E02               	movwf	(atraso_ms@num+1)^0,c
  1009  00097C  0EFA               	movlw	250
  1010  00097E  6E01               	movwf	atraso_ms@num^0,c
  1011  000980  ECAD  F00D         	call	_atraso_ms	;wreg free
  1012  000984                     
  1013                           ;main.c: 84:                         pwmSet(0);
  1014  000984  0E00               	movlw	0
  1015  000986  EC77  F00D         	call	_pwmSet
  1016                           
  1017                           ;main.c: 85:                         break;
  1018  00098A  EFCB  F004         	goto	l2317
  1019  00098E                     l2315:
  1020                           
  1021                           ;main.c: 89:             kpDebounce();
  1022  00098E  EC53  F00A         	call	_kpDebounce	;wreg free
  1023                           
  1024                           ;main.c: 90:         }
  1025  000992  EF51  F004         	goto	l2285
  1026  000996                     l2317:
  1027                           
  1028                           ;main.c: 91:         lcdCommand(0x01);
  1029  000996  0E01               	movlw	1
  1030  000998  EC8A  F00F         	call	_lcdCommand
  1031  00099C                     
  1032                           ;main.c: 92:         lcdString("U=+10   L=-10");
  1033  00099C  0E2A               	movlw	low STR_1
  1034  00099E  6E0F               	movwf	lcdString@msg^0,c
  1035  0009A0  0E06               	movlw	high STR_1
  1036  0009A2  6E10               	movwf	(lcdString@msg+1)^0,c
  1037  0009A4  EC88  F00C         	call	_lcdString	;wreg free
  1038  0009A8                     
  1039                           ;main.c: 93:         lcdPosition(1, 0);
  1040  0009A8  0E00               	movlw	0
  1041  0009AA  6E10               	movwf	(lcdPosition@line+1)^0,c
  1042  0009AC  0E01               	movlw	1
  1043  0009AE  6E0F               	movwf	lcdPosition@line^0,c
  1044  0009B0  0E00               	movlw	0
  1045  0009B2  6E12               	movwf	(lcdPosition@col+1)^0,c
  1046  0009B4  0E00               	movlw	0
  1047  0009B6  6E11               	movwf	lcdPosition@col^0,c
  1048  0009B8  ECCA  F00E         	call	_lcdPosition	;wreg free
  1049                           
  1050                           ;main.c: 94:         lcdString("D=+100  R=-100");
  1051  0009BC  0E1B               	movlw	low STR_2
  1052  0009BE  6E0F               	movwf	lcdString@msg^0,c
  1053  0009C0  0E06               	movlw	high STR_2
  1054  0009C2  6E10               	movwf	(lcdString@msg+1)^0,c
  1055  0009C4  EC88  F00C         	call	_lcdString	;wreg free
  1056  0009C8                     l2323:
  1057                           
  1058                           ;main.c: 96:             if (kpReadKey() != temp) {
  1059  0009C8  ECC7  F00C         	call	_kpReadKey	;wreg free
  1060  0009CC  6E15               	movwf	??_main^0,c
  1061  0009CE  6A16               	clrf	(??_main+1)^0,c
  1062  0009D0  501F               	movf	main@temp^0,w,c
  1063  0009D2  1815               	xorwf	??_main^0,w,c
  1064  0009D4  E109               	bnz	u2350
  1065  0009D6  5020               	movf	(main@temp+1)^0,w,c
  1066  0009D8  1816               	xorwf	(??_main+1)^0,w,c
  1067  0009DA  B4D8               	btfsc	status,2,c
  1068  0009DC  EFF2  F004         	goto	u2351
  1069  0009E0  EFF4  F004         	goto	u2350
  1070  0009E4                     u2351:
  1071  0009E4  EF5A  F005         	goto	l2345
  1072  0009E8                     u2350:
  1073  0009E8                     
  1074                           ;main.c: 97:                 temp = kpReadKey();
  1075  0009E8  ECC7  F00C         	call	_kpReadKey	;wreg free
  1076  0009EC  6E15               	movwf	??_main^0,c
  1077  0009EE  5015               	movf	??_main^0,w,c
  1078  0009F0  6E1F               	movwf	main@temp^0,c
  1079  0009F2  6A20               	clrf	(main@temp+1)^0,c
  1080                           
  1081                           ;main.c: 98:                 if (kpReadKey() != 0) {
  1082  0009F4  ECC7  F00C         	call	_kpReadKey	;wreg free
  1083  0009F8  0900               	iorlw	0
  1084  0009FA  B4D8               	btfsc	status,2,c
  1085  0009FC  EF02  F005         	goto	u2361
  1086  000A00  EF04  F005         	goto	u2360
  1087  000A04                     u2361:
  1088  000A04  EF5A  F005         	goto	l2345
  1089  000A08                     u2360:
  1090  000A08                     
  1091                           ;main.c: 99:                     tecla = kpReadKey();
  1092  000A08  ECC7  F00C         	call	_kpReadKey	;wreg free
  1093  000A0C  6E15               	movwf	??_main^0,c
  1094  000A0E  5015               	movf	??_main^0,w,c
  1095  000A10  6E25               	movwf	main@tecla^0,c
  1096  000A12  6A26               	clrf	(main@tecla+1)^0,c
  1097  000A14                     
  1098                           ;main.c: 100:                     if (tecla == 'U') {
  1099  000A14  0E55               	movlw	85
  1100  000A16  1825               	xorwf	main@tecla^0,w,c
  1101  000A18  1026               	iorwf	(main@tecla+1)^0,w,c
  1102  000A1A  A4D8               	btfss	status,2,c
  1103  000A1C  EF12  F005         	goto	u2371
  1104  000A20  EF14  F005         	goto	u2370
  1105  000A24                     u2371:
  1106  000A24  EF18  F005         	goto	l57
  1107  000A28                     u2370:
  1108  000A28                     
  1109                           ;main.c: 101:                         num2 += 10;
  1110  000A28  0E0A               	movlw	10
  1111  000A2A  2623               	addwf	main@num2^0,f,c
  1112  000A2C  0E00               	movlw	0
  1113  000A2E  2224               	addwfc	(main@num2+1)^0,f,c
  1114  000A30                     l57:
  1115                           
  1116                           ;main.c: 103:                     if (tecla == 'L') {
  1117  000A30  0E4C               	movlw	76
  1118  000A32  1825               	xorwf	main@tecla^0,w,c
  1119  000A34  1026               	iorwf	(main@tecla+1)^0,w,c
  1120  000A36  A4D8               	btfss	status,2,c
  1121  000A38  EF20  F005         	goto	u2381
  1122  000A3C  EF22  F005         	goto	u2380
  1123  000A40                     u2381:
  1124  000A40  EF26  F005         	goto	l58
  1125  000A44                     u2380:
  1126  000A44                     
  1127                           ;main.c: 104:                         num2 += 100;
  1128  000A44  0E64               	movlw	100
  1129  000A46  2623               	addwf	main@num2^0,f,c
  1130  000A48  0E00               	movlw	0
  1131  000A4A  2224               	addwfc	(main@num2+1)^0,f,c
  1132  000A4C                     l58:
  1133                           
  1134                           ;main.c: 106:                     if (tecla == 'D') {
  1135  000A4C  0E44               	movlw	68
  1136  000A4E  1825               	xorwf	main@tecla^0,w,c
  1137  000A50  1026               	iorwf	(main@tecla+1)^0,w,c
  1138  000A52  A4D8               	btfss	status,2,c
  1139  000A54  EF2E  F005         	goto	u2391
  1140  000A58  EF30  F005         	goto	u2390
  1141  000A5C                     u2391:
  1142  000A5C  EF34  F005         	goto	l59
  1143  000A60                     u2390:
  1144  000A60                     
  1145                           ;main.c: 107:                         num2 -= 10;
  1146  000A60  0EF6               	movlw	246
  1147  000A62  2623               	addwf	main@num2^0,f,c
  1148  000A64  0EFF               	movlw	255
  1149  000A66  2224               	addwfc	(main@num2+1)^0,f,c
  1150  000A68                     l59:
  1151                           
  1152                           ;main.c: 109:                     if (tecla == 'R') {
  1153  000A68  0E52               	movlw	82
  1154  000A6A  1825               	xorwf	main@tecla^0,w,c
  1155  000A6C  1026               	iorwf	(main@tecla+1)^0,w,c
  1156  000A6E  A4D8               	btfss	status,2,c
  1157  000A70  EF3C  F005         	goto	u2401
  1158  000A74  EF3E  F005         	goto	u2400
  1159  000A78                     u2401:
  1160  000A78  EF42  F005         	goto	l60
  1161  000A7C                     u2400:
  1162  000A7C                     
  1163                           ;main.c: 110:                         num2 -= 100;
  1164  000A7C  0E9C               	movlw	156
  1165  000A7E  2623               	addwf	main@num2^0,f,c
  1166  000A80  0EFF               	movlw	255
  1167  000A82  2224               	addwfc	(main@num2+1)^0,f,c
  1168  000A84                     l60:
  1169                           
  1170                           ;main.c: 112:                     if (tecla == 'S') {
  1171  000A84  0E53               	movlw	83
  1172  000A86  1825               	xorwf	main@tecla^0,w,c
  1173  000A88  1026               	iorwf	(main@tecla+1)^0,w,c
  1174  000A8A  A4D8               	btfss	status,2,c
  1175  000A8C  EF4A  F005         	goto	u2411
  1176  000A90  EF4C  F005         	goto	u2410
  1177  000A94                     u2411:
  1178  000A94  EF5A  F005         	goto	l2345
  1179  000A98                     u2410:
  1180  000A98                     
  1181                           ;main.c: 113:                         pwmSet(100);
  1182  000A98  0E64               	movlw	100
  1183  000A9A  EC77  F00D         	call	_pwmSet
  1184  000A9E                     
  1185                           ;main.c: 114:                         atraso_ms(250);
  1186  000A9E  0E00               	movlw	0
  1187  000AA0  6E02               	movwf	(atraso_ms@num+1)^0,c
  1188  000AA2  0EFA               	movlw	250
  1189  000AA4  6E01               	movwf	atraso_ms@num^0,c
  1190  000AA6  ECAD  F00D         	call	_atraso_ms	;wreg free
  1191  000AAA                     
  1192                           ;main.c: 115:                         pwmSet(0);
  1193  000AAA  0E00               	movlw	0
  1194  000AAC  EC77  F00D         	call	_pwmSet
  1195                           
  1196                           ;main.c: 116:                         break;
  1197  000AB0  EF0E  F006         	goto	l2379
  1198  000AB4                     l2345:
  1199                           
  1200                           ;main.c: 121:             ssdDigit((num2 / 1) % 10, 3);
  1201  000AB4  0E03               	movlw	3
  1202  000AB6  6E0F               	movwf	ssdDigit@pos^0,c
  1203  000AB8  C023  F009         	movff	main@num2,___awmod@dividend
  1204  000ABC  C024  F00A         	movff	main@num2+1,___awmod@dividend+1
  1205  000AC0  0E00               	movlw	0
  1206  000AC2  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1207  000AC4  0E0A               	movlw	10
  1208  000AC6  6E0B               	movwf	___awmod@divisor^0,c
  1209  000AC8  EC30  F00C         	call	___awmod	;wreg free
  1210  000ACC  5009               	movf	?___awmod^0,w,c
  1211  000ACE  EC0C  F00E         	call	_ssdDigit
  1212                           
  1213                           ;main.c: 122:             ssdDigit((num2 / 10) % 10, 2);
  1214  000AD2  0E02               	movlw	2
  1215  000AD4  6E0F               	movwf	ssdDigit@pos^0,c
  1216  000AD6  0E00               	movlw	0
  1217  000AD8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1218  000ADA  0E0A               	movlw	10
  1219  000ADC  6E03               	movwf	___awdiv@divisor^0,c
  1220  000ADE  C023  F001         	movff	main@num2,___awdiv@dividend
  1221  000AE2  C024  F002         	movff	main@num2+1,___awdiv@dividend+1
  1222  000AE6  EC74  F00B         	call	___awdiv	;wreg free
  1223  000AEA  C001  F009         	movff	?___awdiv,___awmod@dividend
  1224  000AEE  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1225  000AF2  0E00               	movlw	0
  1226  000AF4  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1227  000AF6  0E0A               	movlw	10
  1228  000AF8  6E0B               	movwf	___awmod@divisor^0,c
  1229  000AFA  EC30  F00C         	call	___awmod	;wreg free
  1230  000AFE  5009               	movf	?___awmod^0,w,c
  1231  000B00  EC0C  F00E         	call	_ssdDigit
  1232                           
  1233                           ;main.c: 123:             ssdDigit((num2 / 100) % 10, 1);
  1234  000B04  0E01               	movlw	1
  1235  000B06  6E0F               	movwf	ssdDigit@pos^0,c
  1236  000B08  0E00               	movlw	0
  1237  000B0A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1238  000B0C  0E64               	movlw	100
  1239  000B0E  6E03               	movwf	___awdiv@divisor^0,c
  1240  000B10  C023  F001         	movff	main@num2,___awdiv@dividend
  1241  000B14  C024  F002         	movff	main@num2+1,___awdiv@dividend+1
  1242  000B18  EC74  F00B         	call	___awdiv	;wreg free
  1243  000B1C  C001  F009         	movff	?___awdiv,___awmod@dividend
  1244  000B20  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1245  000B24  0E00               	movlw	0
  1246  000B26  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1247  000B28  0E0A               	movlw	10
  1248  000B2A  6E0B               	movwf	___awmod@divisor^0,c
  1249  000B2C  EC30  F00C         	call	___awmod	;wreg free
  1250  000B30  5009               	movf	?___awmod^0,w,c
  1251  000B32  EC0C  F00E         	call	_ssdDigit
  1252                           
  1253                           ;main.c: 124:             ssdDigit((num2 / 1000) % 10, 0);
  1254  000B36  0E00               	movlw	0
  1255  000B38  6E0F               	movwf	ssdDigit@pos^0,c
  1256  000B3A  0E03               	movlw	3
  1257  000B3C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1258  000B3E  0EE8               	movlw	232
  1259  000B40  6E03               	movwf	___awdiv@divisor^0,c
  1260  000B42  C023  F001         	movff	main@num2,___awdiv@dividend
  1261  000B46  C024  F002         	movff	main@num2+1,___awdiv@dividend+1
  1262  000B4A  EC74  F00B         	call	___awdiv	;wreg free
  1263  000B4E  C001  F009         	movff	?___awdiv,___awmod@dividend
  1264  000B52  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1265  000B56  0E00               	movlw	0
  1266  000B58  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1267  000B5A  0E0A               	movlw	10
  1268  000B5C  6E0B               	movwf	___awmod@divisor^0,c
  1269  000B5E  EC30  F00C         	call	___awmod	;wreg free
  1270  000B62  5009               	movf	?___awmod^0,w,c
  1271  000B64  EC0C  F00E         	call	_ssdDigit
  1272  000B68                     
  1273                           ;main.c: 125:             ssdUpdate();
  1274  000B68  ECE8  F008         	call	_ssdUpdate	;wreg free
  1275  000B6C                     
  1276                           ;main.c: 126:             for (t = 0; t < 1000; t++);
  1277  000B6C  0E00               	movlw	0
  1278  000B6E  6E1E               	movwf	(main@t+1)^0,c
  1279  000B70  0E00               	movlw	0
  1280  000B72  6E1D               	movwf	main@t^0,c
  1281  000B74                     l2355:
  1282  000B74  4A1D               	infsnz	main@t^0,f,c
  1283  000B76  2A1E               	incf	(main@t+1)^0,f,c
  1284  000B78  BE1E               	btfsc	(main@t+1)^0,7,c
  1285  000B7A  EFC8  F005         	goto	u2421
  1286  000B7E  0EE8               	movlw	232
  1287  000B80  5C1D               	subwf	main@t^0,w,c
  1288  000B82  0E03               	movlw	3
  1289  000B84  581E               	subwfb	(main@t+1)^0,w,c
  1290  000B86  A0D8               	btfss	status,0,c
  1291  000B88  EFC8  F005         	goto	u2421
  1292  000B8C  EFCA  F005         	goto	u2420
  1293  000B90                     u2421:
  1294  000B90  EFBA  F005         	goto	l2355
  1295  000B94                     u2420:
  1296  000B94                     
  1297                           ;main.c: 127:             kpDebounce();
  1298  000B94  EC53  F00A         	call	_kpDebounce	;wreg free
  1299                           
  1300                           ;main.c: 128:         }
  1301  000B98  EFE4  F004         	goto	l2323
  1302  000B9C                     l2361:
  1303                           
  1304                           ;main.c: 131:                 y = "+";
  1305  000B9C  0E06               	movlw	high STR_7
  1306  000B9E  6E1A               	movwf	(main@y+1)^0,c
  1307  000BA0  0E5D               	movlw	low STR_7
  1308  000BA2  6E19               	movwf	main@y^0,c
  1309  000BA4                     
  1310                           ;main.c: 132:                 x = num1 + num2;
  1311  000BA4  5023               	movf	main@num2^0,w,c
  1312  000BA6  2421               	addwf	main@num1^0,w,c
  1313  000BA8  6E17               	movwf	main@x^0,c
  1314  000BAA  5024               	movf	(main@num2+1)^0,w,c
  1315  000BAC  2022               	addwfc	(main@num1+1)^0,w,c
  1316  000BAE  6E18               	movwf	(main@x+1)^0,c
  1317                           
  1318                           ;main.c: 133:                 break;
  1319  000BB0  EF2C  F006         	goto	l2381
  1320  000BB4                     l2365:
  1321                           
  1322                           ;main.c: 135:                 y = "-";
  1323  000BB4  0E06               	movlw	high (STR_3+10)
  1324  000BB6  6E1A               	movwf	(main@y+1)^0,c
  1325  000BB8  0E42               	movlw	low (STR_3+10)
  1326  000BBA  6E19               	movwf	main@y^0,c
  1327  000BBC                     
  1328                           ;main.c: 136:                 x = num1 - num2;
  1329  000BBC  5023               	movf	main@num2^0,w,c
  1330  000BBE  5C21               	subwf	main@num1^0,w,c
  1331  000BC0  6E17               	movwf	main@x^0,c
  1332  000BC2  5024               	movf	(main@num2+1)^0,w,c
  1333  000BC4  5822               	subwfb	(main@num1+1)^0,w,c
  1334  000BC6  6E18               	movwf	(main@x+1)^0,c
  1335                           
  1336                           ;main.c: 137:                 break;
  1337  000BC8  EF2C  F006         	goto	l2381
  1338  000BCC                     l2369:
  1339                           
  1340                           ;main.c: 139:                 y = "*";
  1341  000BCC  0E06               	movlw	high STR_9
  1342  000BCE  6E1A               	movwf	(main@y+1)^0,c
  1343  000BD0  0E5B               	movlw	low STR_9
  1344  000BD2  6E19               	movwf	main@y^0,c
  1345  000BD4                     
  1346                           ;main.c: 140:                 x = num1 * num2;
  1347  000BD4  C021  F001         	movff	main@num1,___wmul@multiplier
  1348  000BD8  C022  F002         	movff	main@num1+1,___wmul@multiplier+1
  1349  000BDC  C023  F003         	movff	main@num2,___wmul@multiplicand
  1350  000BE0  C024  F004         	movff	main@num2+1,___wmul@multiplicand+1
  1351  000BE4  EC42  F00F         	call	___wmul	;wreg free
  1352  000BE8  C001  F017         	movff	?___wmul,main@x
  1353  000BEC  C002  F018         	movff	?___wmul+1,main@x+1
  1354                           
  1355                           ;main.c: 141:                 break;
  1356  000BF0  EF2C  F006         	goto	l2381
  1357  000BF4                     l2373:
  1358                           
  1359                           ;main.c: 143:                 y = "/";
  1360  000BF4  0E06               	movlw	high (STR_4+10)
  1361  000BF6  6E1A               	movwf	(main@y+1)^0,c
  1362  000BF8  0E4E               	movlw	low (STR_4+10)
  1363  000BFA  6E19               	movwf	main@y^0,c
  1364  000BFC                     
  1365                           ;main.c: 144:                 x = num1 / num2;
  1366  000BFC  C021  F001         	movff	main@num1,___awdiv@dividend
  1367  000C00  C022  F002         	movff	main@num1+1,___awdiv@dividend+1
  1368  000C04  C023  F003         	movff	main@num2,___awdiv@divisor
  1369  000C08  C024  F004         	movff	main@num2+1,___awdiv@divisor+1
  1370  000C0C  EC74  F00B         	call	___awdiv	;wreg free
  1371  000C10  C001  F017         	movff	?___awdiv,main@x
  1372  000C14  C002  F018         	movff	?___awdiv+1,main@x+1
  1373                           
  1374                           ;main.c: 145:                 break;
  1375  000C18  EF2C  F006         	goto	l2381
  1376  000C1C                     l2379:
  1377  000C1C  C01B  F015         	movff	main@operacao,??_main
  1378  000C20  C01C  F016         	movff	main@operacao+1,??_main+1
  1379                           
  1380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1381                           ; Switch size 1, requested type "simple"
  1382                           ; Number of cases is 1, Range of values is 0 to 0
  1383                           ; switch strategies available:
  1384                           ; Name         Instructions Cycles
  1385                           ; simple_byte            4     3 (average)
  1386                           ;	Chosen strategy is simple_byte
  1387  000C24  5016               	movf	(??_main+1)^0,w,c
  1388  000C26  0A00               	xorlw	0	; case 0
  1389  000C28  B4D8               	btfsc	status,2,c
  1390  000C2A  EF19  F006         	goto	l2427
  1391  000C2E  EF2C  F006         	goto	l2381
  1392  000C32                     l2427:
  1393                           
  1394                           ; Switch size 1, requested type "simple"
  1395                           ; Number of cases is 4, Range of values is 0 to 3
  1396                           ; switch strategies available:
  1397                           ; Name         Instructions Cycles
  1398                           ; simple_byte           13     7 (average)
  1399                           ;	Chosen strategy is simple_byte
  1400  000C32  5015               	movf	??_main^0,w,c
  1401  000C34  0A00               	xorlw	0	; case 0
  1402  000C36  B4D8               	btfsc	status,2,c
  1403  000C38  EFCE  F005         	goto	l2361
  1404  000C3C  0A01               	xorlw	1	; case 1
  1405  000C3E  B4D8               	btfsc	status,2,c
  1406  000C40  EFDA  F005         	goto	l2365
  1407  000C44  0A03               	xorlw	3	; case 2
  1408  000C46  B4D8               	btfsc	status,2,c
  1409  000C48  EFE6  F005         	goto	l2369
  1410  000C4C  0A01               	xorlw	1	; case 3
  1411  000C4E  B4D8               	btfsc	status,2,c
  1412  000C50  EFFA  F005         	goto	l2373
  1413  000C54  EF2C  F006         	goto	l2381
  1414  000C58                     l2381:
  1415                           
  1416                           ;main.c: 149:         lcdCommand(0x01);
  1417  000C58  0E01               	movlw	1
  1418  000C5A  EC8A  F00F         	call	_lcdCommand
  1419                           
  1420                           ;main.c: 150:         lcdNumber(num1);
  1421  000C5E  C021  F00F         	movff	main@num1,lcdNumber@value
  1422  000C62  C022  F010         	movff	main@num1+1,lcdNumber@value+1
  1423  000C66  EC3D  F00D         	call	_lcdNumber	;wreg free
  1424  000C6A                     
  1425                           ;main.c: 151:         lcdString(y);
  1426  000C6A  C019  F00F         	movff	main@y,lcdString@msg
  1427  000C6E  C01A  F010         	movff	main@y+1,lcdString@msg+1
  1428  000C72  EC88  F00C         	call	_lcdString	;wreg free
  1429  000C76                     
  1430                           ;main.c: 152:         lcdNumber(num2);
  1431  000C76  C023  F00F         	movff	main@num2,lcdNumber@value
  1432  000C7A  C024  F010         	movff	main@num2+1,lcdNumber@value+1
  1433  000C7E  EC3D  F00D         	call	_lcdNumber	;wreg free
  1434  000C82                     
  1435                           ;main.c: 153:         lcdPosition(1, 0);
  1436  000C82  0E00               	movlw	0
  1437  000C84  6E10               	movwf	(lcdPosition@line+1)^0,c
  1438  000C86  0E01               	movlw	1
  1439  000C88  6E0F               	movwf	lcdPosition@line^0,c
  1440  000C8A  0E00               	movlw	0
  1441  000C8C  6E12               	movwf	(lcdPosition@col+1)^0,c
  1442  000C8E  0E00               	movlw	0
  1443  000C90  6E11               	movwf	lcdPosition@col^0,c
  1444  000C92  ECCA  F00E         	call	_lcdPosition	;wreg free
  1445  000C96                     
  1446                           ;main.c: 154:         lcdString("Resultado=");
  1447  000C96  0E50               	movlw	low STR_11
  1448  000C98  6E0F               	movwf	lcdString@msg^0,c
  1449  000C9A  0E06               	movlw	high STR_11
  1450  000C9C  6E10               	movwf	(lcdString@msg+1)^0,c
  1451  000C9E  EC88  F00C         	call	_lcdString	;wreg free
  1452                           
  1453                           ;main.c: 155:         lcdNumber(x);
  1454  000CA2  C017  F00F         	movff	main@x,lcdNumber@value
  1455  000CA6  C018  F010         	movff	main@x+1,lcdNumber@value+1
  1456  000CAA  EC3D  F00D         	call	_lcdNumber	;wreg free
  1457  000CAE                     l72:
  1458                           
  1459                           ;main.c: 157:             kpDebounce();
  1460  000CAE  EC53  F00A         	call	_kpDebounce	;wreg free
  1461  000CB2                     
  1462                           ;main.c: 158:             if (kpReadKey() != temp) {
  1463  000CB2  ECC7  F00C         	call	_kpReadKey	;wreg free
  1464  000CB6  6E15               	movwf	??_main^0,c
  1465  000CB8  6A16               	clrf	(??_main+1)^0,c
  1466  000CBA  501F               	movf	main@temp^0,w,c
  1467  000CBC  1815               	xorwf	??_main^0,w,c
  1468  000CBE  E109               	bnz	u2430
  1469  000CC0  5020               	movf	(main@temp+1)^0,w,c
  1470  000CC2  1816               	xorwf	(??_main+1)^0,w,c
  1471  000CC4  B4D8               	btfsc	status,2,c
  1472  000CC6  EF67  F006         	goto	u2431
  1473  000CCA  EF69  F006         	goto	u2430
  1474  000CCE                     u2431:
  1475  000CCE  EF57  F006         	goto	l72
  1476  000CD2                     u2430:
  1477  000CD2                     
  1478                           ;main.c: 159:                 temp = kpReadKey();
  1479  000CD2  ECC7  F00C         	call	_kpReadKey	;wreg free
  1480  000CD6  6E15               	movwf	??_main^0,c
  1481  000CD8  5015               	movf	??_main^0,w,c
  1482  000CDA  6E1F               	movwf	main@temp^0,c
  1483  000CDC  6A20               	clrf	(main@temp+1)^0,c
  1484                           
  1485                           ;main.c: 160:                 if (kpReadKey() != 0) {
  1486  000CDE  ECC7  F00C         	call	_kpReadKey	;wreg free
  1487  000CE2  0900               	iorlw	0
  1488  000CE4  B4D8               	btfsc	status,2,c
  1489  000CE6  EF77  F006         	goto	u2441
  1490  000CEA  EF79  F006         	goto	u2440
  1491  000CEE                     u2441:
  1492  000CEE  EF57  F006         	goto	l72
  1493  000CF2                     u2440:
  1494  000CF2                     
  1495                           ;main.c: 161:                     tecla = kpReadKey();
  1496  000CF2  ECC7  F00C         	call	_kpReadKey	;wreg free
  1497  000CF6  6E15               	movwf	??_main^0,c
  1498  000CF8  5015               	movf	??_main^0,w,c
  1499  000CFA  6E25               	movwf	main@tecla^0,c
  1500  000CFC  6A26               	clrf	(main@tecla+1)^0,c
  1501  000CFE                     
  1502                           ;main.c: 162:                     if (tecla == 's') {
  1503  000CFE  0E73               	movlw	115
  1504  000D00  1825               	xorwf	main@tecla^0,w,c
  1505  000D02  1026               	iorwf	(main@tecla+1)^0,w,c
  1506  000D04  A4D8               	btfss	status,2,c
  1507  000D06  EF87  F006         	goto	u2451
  1508  000D0A  EF89  F006         	goto	u2450
  1509  000D0E                     u2451:
  1510  000D0E  EF57  F006         	goto	l72
  1511  000D12                     u2450:
  1512  000D12                     
  1513                           ;main.c: 163:                         lcdCommand(0x01);
  1514  000D12  0E01               	movlw	1
  1515  000D14  EC8A  F00F         	call	_lcdCommand
  1516  000D18                     
  1517                           ;main.c: 164:                         num1 = 0;
  1518  000D18  0E00               	movlw	0
  1519  000D1A  6E22               	movwf	(main@num1+1)^0,c
  1520  000D1C  0E00               	movlw	0
  1521  000D1E  6E21               	movwf	main@num1^0,c
  1522  000D20                     
  1523                           ;main.c: 165:                         num2 = 0;
  1524  000D20  0E00               	movlw	0
  1525  000D22  6E24               	movwf	(main@num2+1)^0,c
  1526  000D24  0E00               	movlw	0
  1527  000D26  6E23               	movwf	main@num2^0,c
  1528  000D28                     
  1529                           ;main.c: 166:                         operacao = -1;
  1530  000D28  681B               	setf	main@operacao^0,c
  1531  000D2A  681C               	setf	(main@operacao+1)^0,c
  1532                           
  1533                           ;main.c: 167:                         break;
  1534  000D2C  EF38  F003         	goto	l2237
  1535  000D30  EF00  F000         	goto	start
  1536  000D34                     __end_of_main:
  1537                           	callstack 0
  1538                           
  1539 ;; *************** function _ssdUpdate *****************
  1540 ;; Defined at:
  1541 ;;		line 50 in file "ssd.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1555 ;;      Params:         0       0       0       0       0       0       0
  1556 ;;      Locals:         0       0       0       0       0       0       0
  1557 ;;      Temps:          2       0       0       0       0       0       0
  1558 ;;      Totals:         2       0       0       0       0       0       0
  1559 ;;Total ram usage:        2 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 3
  1562 ;; This function calls:
  1563 ;;		_digitalWrite
  1564 ;;		_soWrite
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text1
  1571  0011D0                     __ptext1:
  1572                           	callstack 0
  1573  0011D0                     _ssdUpdate:
  1574                           	callstack 27
  1575  0011D0                     
  1576                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  1577  0011D0  0E00               	movlw	0
  1578  0011D2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1579  0011D4  0E18               	movlw	24
  1580  0011D6  6E01               	movwf	digitalWrite@pin^0,c
  1581  0011D8  0E00               	movlw	0
  1582  0011DA  6E04               	movwf	(digitalWrite@value+1)^0,c
  1583  0011DC  0E00               	movlw	0
  1584  0011DE  6E03               	movwf	digitalWrite@value^0,c
  1585  0011E0  ECC1  F007         	call	_digitalWrite	;wreg free
  1586                           
  1587                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  1588  0011E4  0E00               	movlw	0
  1589  0011E6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1590  0011E8  0E19               	movlw	25
  1591  0011EA  6E01               	movwf	digitalWrite@pin^0,c
  1592  0011EC  0E00               	movlw	0
  1593  0011EE  6E04               	movwf	(digitalWrite@value+1)^0,c
  1594  0011F0  0E00               	movlw	0
  1595  0011F2  6E03               	movwf	digitalWrite@value^0,c
  1596  0011F4  ECC1  F007         	call	_digitalWrite	;wreg free
  1597                           
  1598                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  1599  0011F8  0E00               	movlw	0
  1600  0011FA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1601  0011FC  0E1A               	movlw	26
  1602  0011FE  6E01               	movwf	digitalWrite@pin^0,c
  1603  001200  0E00               	movlw	0
  1604  001202  6E04               	movwf	(digitalWrite@value+1)^0,c
  1605  001204  0E00               	movlw	0
  1606  001206  6E03               	movwf	digitalWrite@value^0,c
  1607  001208  ECC1  F007         	call	_digitalWrite	;wreg free
  1608                           
  1609                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  1610  00120C  0E00               	movlw	0
  1611  00120E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1612  001210  0E1B               	movlw	27
  1613  001212  6E01               	movwf	digitalWrite@pin^0,c
  1614  001214  0E00               	movlw	0
  1615  001216  6E04               	movwf	(digitalWrite@value+1)^0,c
  1616  001218  0E00               	movlw	0
  1617  00121A  6E03               	movwf	digitalWrite@value^0,c
  1618  00121C  ECC1  F007         	call	_digitalWrite	;wreg free
  1619                           
  1620                           ;ssd.c: 60:     soWrite(0x00);
  1621  001220  0E00               	movlw	0
  1622  001222  6E08               	movwf	(soWrite@value+1)^0,c
  1623  001224  0E00               	movlw	0
  1624  001226  6E07               	movwf	soWrite@value^0,c
  1625  001228  EC63  F00E         	call	_soWrite	;wreg free
  1626                           
  1627                           ;ssd.c: 62:     switch (display)
  1628  00122C  EF80  F009         	goto	l2195
  1629  001230                     l2167:
  1630                           
  1631                           ;ssd.c: 65:             soWrite(valor[v0]);
  1632  001230  0E01               	movlw	low _valor
  1633  001232  2430               	addwf	_v0^0,w,c
  1634  001234  6EF6               	movwf	tblptrl,c
  1635  001236  6AF7               	clrf	tblptrh,c
  1636  001238  0E06               	movlw	high _valor
  1637  00123A  22F7               	addwfc	tblptrh,f,c
  1638  00123C                     	if	0	;There are less than 3 active tblptr bytes
  1639  00123C                     	endif
  1640  00123C  0008               	tblrd		*
  1641  00123E  50F5               	movf	tablat,w,c
  1642  001240  6E07               	movwf	soWrite@value^0,c
  1643  001242  6A08               	clrf	(soWrite@value+1)^0,c
  1644  001244  EC63  F00E         	call	_soWrite	;wreg free
  1645  001248                     
  1646                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  1647  001248  0E00               	movlw	0
  1648  00124A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1649  00124C  0E18               	movlw	24
  1650  00124E  6E01               	movwf	digitalWrite@pin^0,c
  1651  001250  0E00               	movlw	0
  1652  001252  6E04               	movwf	(digitalWrite@value+1)^0,c
  1653  001254  0E01               	movlw	1
  1654  001256  6E03               	movwf	digitalWrite@value^0,c
  1655  001258  ECC1  F007         	call	_digitalWrite	;wreg free
  1656  00125C                     
  1657                           ;ssd.c: 67:             display = 1;
  1658  00125C  0E01               	movlw	1
  1659  00125E  6E31               	movwf	_display^0,c
  1660                           
  1661                           ;ssd.c: 68:             break;
  1662  001260  EF9D  F009         	goto	l354
  1663  001264                     l2173:
  1664                           
  1665                           ;ssd.c: 71:             soWrite(valor[v1]);
  1666  001264  0E01               	movlw	low _valor
  1667  001266  242F               	addwf	_v1^0,w,c
  1668  001268  6EF6               	movwf	tblptrl,c
  1669  00126A  6AF7               	clrf	tblptrh,c
  1670  00126C  0E06               	movlw	high _valor
  1671  00126E  22F7               	addwfc	tblptrh,f,c
  1672  001270                     	if	0	;There are less than 3 active tblptr bytes
  1673  001270                     	endif
  1674  001270  0008               	tblrd		*
  1675  001272  50F5               	movf	tablat,w,c
  1676  001274  6E07               	movwf	soWrite@value^0,c
  1677  001276  6A08               	clrf	(soWrite@value+1)^0,c
  1678  001278  EC63  F00E         	call	_soWrite	;wreg free
  1679  00127C                     
  1680                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  1681  00127C  0E00               	movlw	0
  1682  00127E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1683  001280  0E19               	movlw	25
  1684  001282  6E01               	movwf	digitalWrite@pin^0,c
  1685  001284  0E00               	movlw	0
  1686  001286  6E04               	movwf	(digitalWrite@value+1)^0,c
  1687  001288  0E01               	movlw	1
  1688  00128A  6E03               	movwf	digitalWrite@value^0,c
  1689  00128C  ECC1  F007         	call	_digitalWrite	;wreg free
  1690  001290                     
  1691                           ;ssd.c: 73:             display = 2;
  1692  001290  0E02               	movlw	2
  1693  001292  6E31               	movwf	_display^0,c
  1694                           
  1695                           ;ssd.c: 74:             break;
  1696  001294  EF9D  F009         	goto	l354
  1697  001298                     l2179:
  1698                           
  1699                           ;ssd.c: 77:             soWrite(valor[v2]);
  1700  001298  0E01               	movlw	low _valor
  1701  00129A  242E               	addwf	_v2^0,w,c
  1702  00129C  6EF6               	movwf	tblptrl,c
  1703  00129E  6AF7               	clrf	tblptrh,c
  1704  0012A0  0E06               	movlw	high _valor
  1705  0012A2  22F7               	addwfc	tblptrh,f,c
  1706  0012A4                     	if	0	;There are less than 3 active tblptr bytes
  1707  0012A4                     	endif
  1708  0012A4  0008               	tblrd		*
  1709  0012A6  50F5               	movf	tablat,w,c
  1710  0012A8  6E07               	movwf	soWrite@value^0,c
  1711  0012AA  6A08               	clrf	(soWrite@value+1)^0,c
  1712  0012AC  EC63  F00E         	call	_soWrite	;wreg free
  1713  0012B0                     
  1714                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  1715  0012B0  0E00               	movlw	0
  1716  0012B2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1717  0012B4  0E1A               	movlw	26
  1718  0012B6  6E01               	movwf	digitalWrite@pin^0,c
  1719  0012B8  0E00               	movlw	0
  1720  0012BA  6E04               	movwf	(digitalWrite@value+1)^0,c
  1721  0012BC  0E01               	movlw	1
  1722  0012BE  6E03               	movwf	digitalWrite@value^0,c
  1723  0012C0  ECC1  F007         	call	_digitalWrite	;wreg free
  1724  0012C4                     
  1725                           ;ssd.c: 79:             display = 3;
  1726  0012C4  0E03               	movlw	3
  1727  0012C6  6E31               	movwf	_display^0,c
  1728                           
  1729                           ;ssd.c: 80:             break;
  1730  0012C8  EF9D  F009         	goto	l354
  1731  0012CC                     l2185:
  1732                           
  1733                           ;ssd.c: 83:             soWrite(valor[v3]);
  1734  0012CC  0E01               	movlw	low _valor
  1735  0012CE  242D               	addwf	_v3^0,w,c
  1736  0012D0  6EF6               	movwf	tblptrl,c
  1737  0012D2  6AF7               	clrf	tblptrh,c
  1738  0012D4  0E06               	movlw	high _valor
  1739  0012D6  22F7               	addwfc	tblptrh,f,c
  1740  0012D8                     	if	0	;There are less than 3 active tblptr bytes
  1741  0012D8                     	endif
  1742  0012D8  0008               	tblrd		*
  1743  0012DA  50F5               	movf	tablat,w,c
  1744  0012DC  6E07               	movwf	soWrite@value^0,c
  1745  0012DE  6A08               	clrf	(soWrite@value+1)^0,c
  1746  0012E0  EC63  F00E         	call	_soWrite	;wreg free
  1747  0012E4                     
  1748                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  1749  0012E4  0E00               	movlw	0
  1750  0012E6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1751  0012E8  0E1B               	movlw	27
  1752  0012EA  6E01               	movwf	digitalWrite@pin^0,c
  1753  0012EC  0E00               	movlw	0
  1754  0012EE  6E04               	movwf	(digitalWrite@value+1)^0,c
  1755  0012F0  0E01               	movlw	1
  1756  0012F2  6E03               	movwf	digitalWrite@value^0,c
  1757  0012F4  ECC1  F007         	call	_digitalWrite	;wreg free
  1758  0012F8                     l2189:
  1759                           
  1760                           ;ssd.c: 85:             display = 0;
  1761  0012F8  0E00               	movlw	0
  1762  0012FA  6E31               	movwf	_display^0,c
  1763                           
  1764                           ;ssd.c: 86:             break;
  1765  0012FC  EF9D  F009         	goto	l354
  1766  001300                     l2195:
  1767  001300  5031               	movf	_display^0,w,c
  1768  001302  6E0A               	movwf	??_ssdUpdate^0,c
  1769  001304  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  1770                           
  1771                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1772                           ; Switch size 1, requested type "simple"
  1773                           ; Number of cases is 1, Range of values is 0 to 0
  1774                           ; switch strategies available:
  1775                           ; Name         Instructions Cycles
  1776                           ; simple_byte            4     3 (average)
  1777                           ;	Chosen strategy is simple_byte
  1778  001306  500B               	movf	(??_ssdUpdate+1)^0,w,c
  1779  001308  0A00               	xorlw	0	; case 0
  1780  00130A  B4D8               	btfsc	status,2,c
  1781  00130C  EF8A  F009         	goto	l2429
  1782  001310  EF7C  F009         	goto	l2189
  1783  001314                     l2429:
  1784                           
  1785                           ; Switch size 1, requested type "simple"
  1786                           ; Number of cases is 4, Range of values is 0 to 3
  1787                           ; switch strategies available:
  1788                           ; Name         Instructions Cycles
  1789                           ; simple_byte           13     7 (average)
  1790                           ;	Chosen strategy is simple_byte
  1791  001314  500A               	movf	??_ssdUpdate^0,w,c
  1792  001316  0A00               	xorlw	0	; case 0
  1793  001318  B4D8               	btfsc	status,2,c
  1794  00131A  EF18  F009         	goto	l2167
  1795  00131E  0A01               	xorlw	1	; case 1
  1796  001320  B4D8               	btfsc	status,2,c
  1797  001322  EF32  F009         	goto	l2173
  1798  001326  0A03               	xorlw	3	; case 2
  1799  001328  B4D8               	btfsc	status,2,c
  1800  00132A  EF4C  F009         	goto	l2179
  1801  00132E  0A01               	xorlw	1	; case 3
  1802  001330  B4D8               	btfsc	status,2,c
  1803  001332  EF66  F009         	goto	l2185
  1804  001336  EF7C  F009         	goto	l2189
  1805  00133A                     l354:
  1806  00133A  0012               	return		;funcret
  1807  00133C                     __end_of_ssdUpdate:
  1808                           	callstack 0
  1809                           
  1810 ;; *************** function _ssdInit *****************
  1811 ;; Defined at:
  1812 ;;		line 94 in file "ssd.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, status,2, status,0, cstack
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1826 ;;      Params:         0       0       0       0       0       0       0
  1827 ;;      Locals:         0       0       0       0       0       0       0
  1828 ;;      Temps:          0       0       0       0       0       0       0
  1829 ;;      Totals:         0       0       0       0       0       0       0
  1830 ;;Total ram usage:        0 bytes
  1831 ;; Hardware stack levels used: 1
  1832 ;; Hardware stack levels required when called: 2
  1833 ;; This function calls:
  1834 ;;		_pinMode
  1835 ;;		_soInit
  1836 ;; This function is called by:
  1837 ;;		_main
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text2
  1842  001C70                     __ptext2:
  1843                           	callstack 0
  1844  001C70                     _ssdInit:
  1845                           	callstack 28
  1846  001C70                     
  1847                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1848  001C70  0E00               	movlw	0
  1849  001C72  6E02               	movwf	(pinMode@pin+1)^0,c
  1850  001C74  0E18               	movlw	24
  1851  001C76  6E01               	movwf	pinMode@pin^0,c
  1852  001C78  0E00               	movlw	0
  1853  001C7A  6E04               	movwf	(pinMode@type+1)^0,c
  1854  001C7C  0E00               	movlw	0
  1855  001C7E  6E03               	movwf	pinMode@type^0,c
  1856  001C80  EC9A  F006         	call	_pinMode	;wreg free
  1857                           
  1858                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1859  001C84  0E00               	movlw	0
  1860  001C86  6E02               	movwf	(pinMode@pin+1)^0,c
  1861  001C88  0E19               	movlw	25
  1862  001C8A  6E01               	movwf	pinMode@pin^0,c
  1863  001C8C  0E00               	movlw	0
  1864  001C8E  6E04               	movwf	(pinMode@type+1)^0,c
  1865  001C90  0E00               	movlw	0
  1866  001C92  6E03               	movwf	pinMode@type^0,c
  1867  001C94  EC9A  F006         	call	_pinMode	;wreg free
  1868                           
  1869                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1870  001C98  0E00               	movlw	0
  1871  001C9A  6E02               	movwf	(pinMode@pin+1)^0,c
  1872  001C9C  0E1A               	movlw	26
  1873  001C9E  6E01               	movwf	pinMode@pin^0,c
  1874  001CA0  0E00               	movlw	0
  1875  001CA2  6E04               	movwf	(pinMode@type+1)^0,c
  1876  001CA4  0E00               	movlw	0
  1877  001CA6  6E03               	movwf	pinMode@type^0,c
  1878  001CA8  EC9A  F006         	call	_pinMode	;wreg free
  1879                           
  1880                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1881  001CAC  0E00               	movlw	0
  1882  001CAE  6E02               	movwf	(pinMode@pin+1)^0,c
  1883  001CB0  0E1B               	movlw	27
  1884  001CB2  6E01               	movwf	pinMode@pin^0,c
  1885  001CB4  0E00               	movlw	0
  1886  001CB6  6E04               	movwf	(pinMode@type+1)^0,c
  1887  001CB8  0E00               	movlw	0
  1888  001CBA  6E03               	movwf	pinMode@type^0,c
  1889  001CBC  EC9A  F006         	call	_pinMode	;wreg free
  1890                           
  1891                           ;ssd.c: 102:     soInit();
  1892  001CC0  ECAB  F00E         	call	_soInit	;wreg free
  1893  001CC4  0012               	return		;funcret
  1894  001CC6                     __end_of_ssdInit:
  1895                           	callstack 0
  1896                           
  1897 ;; *************** function _ssdDigit *****************
  1898 ;; Defined at:
  1899 ;;		line 34 in file "ssd.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  val             1    wreg     unsigned char 
  1902 ;;  pos             1   14[COMRAM] unsigned char 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  val             1   15[COMRAM] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1914 ;;      Params:         1       0       0       0       0       0       0
  1915 ;;      Locals:         1       0       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0
  1917 ;;      Totals:         2       0       0       0       0       0       0
  1918 ;;Total ram usage:        2 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_main
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text3
  1928  001C18                     __ptext3:
  1929                           	callstack 0
  1930  001C18                     _ssdDigit:
  1931                           	callstack 30
  1932                           
  1933                           ;incstack = 0
  1934                           ;ssdDigit@val stored from wreg
  1935  001C18  6E10               	movwf	ssdDigit@val^0,c
  1936  001C1A                     
  1937                           ;ssd.c: 35:     if (pos == 0) {
  1938  001C1A  500F               	movf	ssdDigit@pos^0,w,c
  1939  001C1C  A4D8               	btfss	status,2,c
  1940  001C1E  EF13  F00E         	goto	u2071
  1941  001C22  EF15  F00E         	goto	u2070
  1942  001C26                     u2071:
  1943  001C26  EF17  F00E         	goto	l2153
  1944  001C2A                     u2070:
  1945  001C2A                     
  1946                           ;ssd.c: 36:         v0 = val;
  1947  001C2A  C010  F030         	movff	ssdDigit@val,_v0
  1948  001C2E                     l2153:
  1949                           
  1950                           ;ssd.c: 38:     if (pos == 1) {
  1951  001C2E  040F               	decf	ssdDigit@pos^0,w,c
  1952  001C30  A4D8               	btfss	status,2,c
  1953  001C32  EF1D  F00E         	goto	u2081
  1954  001C36  EF1F  F00E         	goto	u2080
  1955  001C3A                     u2081:
  1956  001C3A  EF21  F00E         	goto	l2157
  1957  001C3E                     u2080:
  1958  001C3E                     
  1959                           ;ssd.c: 39:         v1 = val;
  1960  001C3E  C010  F02F         	movff	ssdDigit@val,_v1
  1961  001C42                     l2157:
  1962                           
  1963                           ;ssd.c: 41:     if (pos == 2) {
  1964  001C42  0E02               	movlw	2
  1965  001C44  180F               	xorwf	ssdDigit@pos^0,w,c
  1966  001C46  A4D8               	btfss	status,2,c
  1967  001C48  EF28  F00E         	goto	u2091
  1968  001C4C  EF2A  F00E         	goto	u2090
  1969  001C50                     u2091:
  1970  001C50  EF2C  F00E         	goto	l2161
  1971  001C54                     u2090:
  1972  001C54                     
  1973                           ;ssd.c: 42:         v2 = val;
  1974  001C54  C010  F02E         	movff	ssdDigit@val,_v2
  1975  001C58                     l2161:
  1976                           
  1977                           ;ssd.c: 44:     if (pos == 3) {
  1978  001C58  0E03               	movlw	3
  1979  001C5A  180F               	xorwf	ssdDigit@pos^0,w,c
  1980  001C5C  A4D8               	btfss	status,2,c
  1981  001C5E  EF33  F00E         	goto	u2101
  1982  001C62  EF35  F00E         	goto	u2100
  1983  001C66                     u2101:
  1984  001C66  EF37  F00E         	goto	l344
  1985  001C6A                     u2100:
  1986  001C6A                     
  1987                           ;ssd.c: 45:         v3 = val;
  1988  001C6A  C010  F02D         	movff	ssdDigit@val,_v3
  1989  001C6E                     l344:
  1990  001C6E  0012               	return		;funcret
  1991  001C70                     __end_of_ssdDigit:
  1992                           	callstack 0
  1993                           
  1994 ;; *************** function _pwmSet *****************
  1995 ;; Defined at:
  1996 ;;		line 24 in file "pwm.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  porcento        1    wreg     unsigned char 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  porcento        1    9[COMRAM] unsigned char 
  2001 ;;  val             2   10[COMRAM] unsigned int 
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2011 ;;      Params:         0       0       0       0       0       0       0
  2012 ;;      Locals:         3       0       0       0       0       0       0
  2013 ;;      Temps:          2       0       0       0       0       0       0
  2014 ;;      Totals:         5       0       0       0       0       0       0
  2015 ;;Total ram usage:        5 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; Hardware stack levels required when called: 1
  2018 ;; This function calls:
  2019 ;;		___lwdiv
  2020 ;;		___wmul
  2021 ;; This function is called by:
  2022 ;;		_main
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text4
  2027  001AEE                     __ptext4:
  2028                           	callstack 0
  2029  001AEE                     _pwmSet:
  2030                           	callstack 29
  2031                           
  2032                           ;incstack = 0
  2033                           ;pwmSet@porcento stored from wreg
  2034  001AEE  6E0A               	movwf	pwmSet@porcento^0,c
  2035  001AF0                     
  2036                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  2037  001AF0  0E01               	movlw	1
  2038  001AF2  24CB               	addwf	203,w,c	;volatile
  2039  001AF4  6E01               	movwf	___wmul@multiplier^0,c
  2040  001AF6  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2041  001AF8  0E00               	movlw	0
  2042  001AFA  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  2043  001AFC  C00A  F003         	movff	pwmSet@porcento,___wmul@multiplicand
  2044  001B00  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  2045  001B02  EC42  F00F         	call	___wmul	;wreg free
  2046  001B06  C001  F00B         	movff	?___wmul,pwmSet@val
  2047  001B0A  C002  F00C         	movff	?___wmul+1,pwmSet@val+1
  2048  001B0E                     
  2049                           ;pwm.c: 33:     val = val / 25;
  2050  001B0E  C00B  F001         	movff	pwmSet@val,___lwdiv@dividend
  2051  001B12  C00C  F002         	movff	pwmSet@val+1,___lwdiv@dividend+1
  2052  001B16  0E00               	movlw	0
  2053  001B18  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2054  001B1A  0E19               	movlw	25
  2055  001B1C  6E03               	movwf	___lwdiv@divisor^0,c
  2056  001B1E  EC03  F00D         	call	___lwdiv	;wreg free
  2057  001B22  C001  F00B         	movff	?___lwdiv,pwmSet@val
  2058  001B26  C002  F00C         	movff	?___lwdiv+1,pwmSet@val+1
  2059  001B2A                     
  2060                           ;pwm.c: 35:  val &= 0x03ff;
  2061  001B2A  0EFF               	movlw	255
  2062  001B2C  160B               	andwf	pwmSet@val^0,f,c
  2063  001B2E  0E03               	movlw	3
  2064  001B30  160C               	andwf	(pwmSet@val+1)^0,f,c
  2065  001B32                     
  2066                           ;pwm.c: 37:  CCPR2L = val >> 2;
  2067  001B32  C00B  F008         	movff	pwmSet@val,??_pwmSet
  2068  001B36  C00C  F009         	movff	pwmSet@val+1,??_pwmSet+1
  2069  001B3A  90D8               	bcf	status,0,c
  2070  001B3C  3209               	rrcf	(??_pwmSet+1)^0,f,c
  2071  001B3E  3208               	rrcf	??_pwmSet^0,f,c
  2072  001B40  90D8               	bcf	status,0,c
  2073  001B42  3209               	rrcf	(??_pwmSet+1)^0,f,c
  2074  001B44  3208               	rrcf	??_pwmSet^0,f,c
  2075  001B46  5008               	movf	??_pwmSet^0,w,c
  2076  001B48  6EBB               	movwf	187,c	;volatile
  2077  001B4A                     
  2078                           ;pwm.c: 39:  CCP2CON |= (val & 0x0003) << 4;
  2079  001B4A  C00B  F008         	movff	pwmSet@val,??_pwmSet	;volatile
  2080  001B4E  0E03               	movlw	3
  2081  001B50  1608               	andwf	??_pwmSet^0,f,c
  2082  001B52  3808               	swapf	??_pwmSet^0,w,c
  2083  001B54  0BF0               	andlw	240
  2084  001B56  12BA               	iorwf	186,f,c	;volatile
  2085  001B58  0012               	return		;funcret
  2086  001B5A                     __end_of_pwmSet:
  2087                           	callstack 0
  2088                           
  2089 ;; *************** function ___wmul *****************
  2090 ;; Defined at:
  2091 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  multiplier      2    0[COMRAM] unsigned int 
  2094 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  product         2    4[COMRAM] unsigned int 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  2    0[COMRAM] unsigned int 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0, prodl, prodh
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2106 ;;      Params:         4       0       0       0       0       0       0
  2107 ;;      Locals:         2       0       0       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0
  2109 ;;      Totals:         6       0       0       0       0       0       0
  2110 ;;Total ram usage:        6 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_main
  2116 ;;		_pwmSet
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text5
  2121  001E84                     __ptext5:
  2122                           	callstack 0
  2123  001E84                     ___wmul:
  2124                           	callstack 29
  2125  001E84  5001               	movf	___wmul@multiplier^0,w,c
  2126  001E86  0203               	mulwf	___wmul@multiplicand^0,c
  2127  001E88  CFF3 F005          	movff	prodl,___wmul@product
  2128  001E8C  CFF4 F006          	movff	prodh,___wmul@product+1
  2129  001E90  5001               	movf	___wmul@multiplier^0,w,c
  2130  001E92  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2131  001E94  50F3               	movf	243,w,c
  2132  001E96  2606               	addwf	(___wmul@product+1)^0,f,c
  2133  001E98  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2134  001E9A  0203               	mulwf	___wmul@multiplicand^0,c
  2135  001E9C  50F3               	movf	243,w,c
  2136  001E9E  2606               	addwf	(___wmul@product+1)^0,f,c
  2137  001EA0  C005  F001         	movff	___wmul@product,?___wmul
  2138  001EA4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2139  001EA8  0012               	return		;funcret
  2140  001EAA                     __end_of___wmul:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function ___lwdiv *****************
  2144 ;; Defined at:
  2145 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  dividend        2    0[COMRAM] unsigned int 
  2148 ;;  divisor         2    2[COMRAM] unsigned int 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  quotient        2    4[COMRAM] unsigned int 
  2151 ;;  counter         1    6[COMRAM] unsigned char 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  2    0[COMRAM] unsigned int 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2161 ;;      Params:         4       0       0       0       0       0       0
  2162 ;;      Locals:         3       0       0       0       0       0       0
  2163 ;;      Temps:          0       0       0       0       0       0       0
  2164 ;;      Totals:         7       0       0       0       0       0       0
  2165 ;;Total ram usage:        7 bytes
  2166 ;; Hardware stack levels used: 1
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_pwmSet
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text6
  2175  001A06                     __ptext6:
  2176                           	callstack 0
  2177  001A06                     ___lwdiv:
  2178                           	callstack 29
  2179  001A06  0E00               	movlw	0
  2180  001A08  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2181  001A0A  0E00               	movlw	0
  2182  001A0C  6E05               	movwf	___lwdiv@quotient^0,c
  2183  001A0E  5003               	movf	___lwdiv@divisor^0,w,c
  2184  001A10  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2185  001A12  B4D8               	btfsc	status,2,c
  2186  001A14  EF0E  F00D         	goto	u1961
  2187  001A18  EF10  F00D         	goto	u1960
  2188  001A1C                     u1961:
  2189  001A1C  EF38  F00D         	goto	l851
  2190  001A20                     u1960:
  2191  001A20  0E01               	movlw	1
  2192  001A22  6E07               	movwf	___lwdiv@counter^0,c
  2193  001A24  EF18  F00D         	goto	l2051
  2194  001A28                     l2049:
  2195  001A28  90D8               	bcf	status,0,c
  2196  001A2A  3603               	rlcf	___lwdiv@divisor^0,f,c
  2197  001A2C  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2198  001A2E  2A07               	incf	___lwdiv@counter^0,f,c
  2199  001A30                     l2051:
  2200  001A30  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2201  001A32  EF1D  F00D         	goto	u1971
  2202  001A36  EF1F  F00D         	goto	u1970
  2203  001A3A                     u1971:
  2204  001A3A  EF14  F00D         	goto	l2049
  2205  001A3E                     u1970:
  2206  001A3E                     l2053:
  2207  001A3E  90D8               	bcf	status,0,c
  2208  001A40  3605               	rlcf	___lwdiv@quotient^0,f,c
  2209  001A42  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2210  001A44  5003               	movf	___lwdiv@divisor^0,w,c
  2211  001A46  5C01               	subwf	___lwdiv@dividend^0,w,c
  2212  001A48  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2213  001A4A  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2214  001A4C  A0D8               	btfss	status,0,c
  2215  001A4E  EF2B  F00D         	goto	u1981
  2216  001A52  EF2D  F00D         	goto	u1980
  2217  001A56                     u1981:
  2218  001A56  EF32  F00D         	goto	l2061
  2219  001A5A                     u1980:
  2220  001A5A  5003               	movf	___lwdiv@divisor^0,w,c
  2221  001A5C  5E01               	subwf	___lwdiv@dividend^0,f,c
  2222  001A5E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2223  001A60  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2224  001A62  8005               	bsf	___lwdiv@quotient^0,0,c
  2225  001A64                     l2061:
  2226  001A64  90D8               	bcf	status,0,c
  2227  001A66  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2228  001A68  3203               	rrcf	___lwdiv@divisor^0,f,c
  2229  001A6A  2E07               	decfsz	___lwdiv@counter^0,f,c
  2230  001A6C  EF1F  F00D         	goto	l2053
  2231  001A70                     l851:
  2232  001A70  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2233  001A74  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2234  001A78  0012               	return		;funcret
  2235  001A7A                     __end_of___lwdiv:
  2236                           	callstack 0
  2237                           
  2238 ;; *************** function _pwmInit *****************
  2239 ;; Defined at:
  2240 ;;		line 51 in file "pwm.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, status,2, status,0, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2254 ;;      Params:         0       0       0       0       0       0       0
  2255 ;;      Locals:         0       0       0       0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0
  2257 ;;      Totals:         0       0       0       0       0       0       0
  2258 ;;Total ram usage:        0 bytes
  2259 ;; Hardware stack levels used: 1
  2260 ;; Hardware stack levels required when called: 2
  2261 ;; This function calls:
  2262 ;;		_pwmFrequency
  2263 ;; This function is called by:
  2264 ;;		_main
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text7
  2269  001F32                     __ptext7:
  2270                           	callstack 0
  2271  001F32                     _pwmInit:
  2272                           	callstack 28
  2273  001F32                     
  2274                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(1)));
  2275  001F32  9294               	bcf	148,1,c	;volatile
  2276  001F34                     
  2277                           ;pwm.c: 55:  T2CON |= 0b00000011;
  2278  001F34  0E03               	movlw	3
  2279  001F36  12CA               	iorwf	202,f,c	;volatile
  2280  001F38                     
  2281                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  2282  001F38  84CA               	bsf	202,2,c	;volatile
  2283  001F3A                     
  2284                           ;pwm.c: 58:  CCP2CON = 0b00001100;
  2285  001F3A  0E0C               	movlw	12
  2286  001F3C  6EBA               	movwf	186,c	;volatile
  2287  001F3E                     
  2288                           ;pwm.c: 60:     pwmFrequency(100);
  2289  001F3E  0E00               	movlw	0
  2290  001F40  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  2291  001F42  0E64               	movlw	100
  2292  001F44  6E0F               	movwf	pwmFrequency@freq^0,c
  2293  001F46  EC55  F00F         	call	_pwmFrequency	;wreg free
  2294  001F4A  0012               	return		;funcret
  2295  001F4C                     __end_of_pwmInit:
  2296                           	callstack 0
  2297                           
  2298 ;; *************** function _pwmFrequency *****************
  2299 ;; Defined at:
  2300 ;;		line 44 in file "pwm.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  freq            2   14[COMRAM] unsigned int 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;		None
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      void 
  2307 ;; Registers used:
  2308 ;;		wreg, status,2, status,0, cstack
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2314 ;;      Params:         2       0       0       0       0       0       0
  2315 ;;      Locals:         0       0       0       0       0       0       0
  2316 ;;      Temps:          0       0       0       0       0       0       0
  2317 ;;      Totals:         2       0       0       0       0       0       0
  2318 ;;Total ram usage:        2 bytes
  2319 ;; Hardware stack levels used: 1
  2320 ;; Hardware stack levels required when called: 1
  2321 ;; This function calls:
  2322 ;;		___aldiv
  2323 ;; This function is called by:
  2324 ;;		_pwmInit
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text8
  2329  001EAA                     __ptext8:
  2330                           	callstack 0
  2331  001EAA                     _pwmFrequency:
  2332                           	callstack 28
  2333  001EAA                     
  2334                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  2335  001EAA  0E48               	movlw	72
  2336  001EAC  6E01               	movwf	___aldiv@dividend^0,c
  2337  001EAE  0EE8               	movlw	232
  2338  001EB0  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2339  001EB2  0E01               	movlw	1
  2340  001EB4  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2341  001EB6  0E00               	movlw	0
  2342  001EB8  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2343  001EBA  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  2344  001EBE  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2345  001EC2  6A07               	clrf	(___aldiv@divisor+2)^0,c
  2346  001EC4  6A08               	clrf	(___aldiv@divisor+3)^0,c
  2347  001EC6  ECEE  F00A         	call	___aldiv	;wreg free
  2348  001ECA  0401               	decf	?___aldiv^0,w,c
  2349  001ECC  6ECB               	movwf	203,c	;volatile
  2350  001ECE  0012               	return		;funcret
  2351  001ED0                     __end_of_pwmFrequency:
  2352                           	callstack 0
  2353                           
  2354 ;; *************** function ___aldiv *****************
  2355 ;; Defined at:
  2356 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  dividend        4    0[COMRAM] long 
  2359 ;;  divisor         4    4[COMRAM] long 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  quotient        4   10[COMRAM] long 
  2362 ;;  sign            1    9[COMRAM] unsigned char 
  2363 ;;  counter         1    8[COMRAM] unsigned char 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  4    0[COMRAM] long 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2373 ;;      Params:         8       0       0       0       0       0       0
  2374 ;;      Locals:         6       0       0       0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0
  2376 ;;      Totals:        14       0       0       0       0       0       0
  2377 ;;Total ram usage:       14 bytes
  2378 ;; Hardware stack levels used: 1
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_pwmFrequency
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text9
  2387  0015DC                     __ptext9:
  2388                           	callstack 0
  2389  0015DC                     ___aldiv:
  2390                           	callstack 28
  2391  0015DC  0E00               	movlw	0
  2392  0015DE  6E0A               	movwf	___aldiv@sign^0,c
  2393  0015E0  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2394  0015E2  EFF7  F00A         	goto	u1680
  2395  0015E6  EFF5  F00A         	goto	u1681
  2396  0015EA                     u1681:
  2397  0015EA  EF01  F00B         	goto	l1871
  2398  0015EE                     u1680:
  2399  0015EE  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2400  0015F0  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2401  0015F2  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2402  0015F4  6C05               	negf	___aldiv@divisor^0,c
  2403  0015F6  0E00               	movlw	0
  2404  0015F8  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2405  0015FA  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2406  0015FC  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2407  0015FE  0E01               	movlw	1
  2408  001600  6E0A               	movwf	___aldiv@sign^0,c
  2409  001602                     l1871:
  2410  001602  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2411  001604  EF08  F00B         	goto	u1690
  2412  001608  EF06  F00B         	goto	u1691
  2413  00160C                     u1691:
  2414  00160C  EF12  F00B         	goto	l1877
  2415  001610                     u1690:
  2416  001610  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2417  001612  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2418  001614  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2419  001616  6C01               	negf	___aldiv@dividend^0,c
  2420  001618  0E00               	movlw	0
  2421  00161A  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2422  00161C  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2423  00161E  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2424  001620  0E01               	movlw	1
  2425  001622  1A0A               	xorwf	___aldiv@sign^0,f,c
  2426  001624                     l1877:
  2427  001624  0E00               	movlw	0
  2428  001626  6E0B               	movwf	___aldiv@quotient^0,c
  2429  001628  0E00               	movlw	0
  2430  00162A  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2431  00162C  0E00               	movlw	0
  2432  00162E  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2433  001630  0E00               	movlw	0
  2434  001632  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2435  001634  5005               	movf	___aldiv@divisor^0,w,c
  2436  001636  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2437  001638  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2438  00163A  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2439  00163C  B4D8               	btfsc	status,2,c
  2440  00163E  EF23  F00B         	goto	u1701
  2441  001642  EF25  F00B         	goto	u1700
  2442  001646                     u1701:
  2443  001646  EF5B  F00B         	goto	l1899
  2444  00164A                     u1700:
  2445  00164A  0E01               	movlw	1
  2446  00164C  6E09               	movwf	___aldiv@counter^0,c
  2447  00164E  EF2F  F00B         	goto	l1885
  2448  001652                     l1883:
  2449  001652  90D8               	bcf	status,0,c
  2450  001654  3605               	rlcf	___aldiv@divisor^0,f,c
  2451  001656  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2452  001658  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2453  00165A  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2454  00165C  2A09               	incf	___aldiv@counter^0,f,c
  2455  00165E                     l1885:
  2456  00165E  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2457  001660  EF34  F00B         	goto	u1711
  2458  001664  EF36  F00B         	goto	u1710
  2459  001668                     u1711:
  2460  001668  EF29  F00B         	goto	l1883
  2461  00166C                     u1710:
  2462  00166C                     l1887:
  2463  00166C  90D8               	bcf	status,0,c
  2464  00166E  360B               	rlcf	___aldiv@quotient^0,f,c
  2465  001670  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2466  001672  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2467  001674  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2468  001676  5005               	movf	___aldiv@divisor^0,w,c
  2469  001678  5C01               	subwf	___aldiv@dividend^0,w,c
  2470  00167A  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2471  00167C  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2472  00167E  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2473  001680  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2474  001682  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2475  001684  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2476  001686  A0D8               	btfss	status,0,c
  2477  001688  EF48  F00B         	goto	u1721
  2478  00168C  EF4A  F00B         	goto	u1720
  2479  001690                     u1721:
  2480  001690  EF53  F00B         	goto	l1895
  2481  001694                     u1720:
  2482  001694  5005               	movf	___aldiv@divisor^0,w,c
  2483  001696  5E01               	subwf	___aldiv@dividend^0,f,c
  2484  001698  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2485  00169A  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2486  00169C  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2487  00169E  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2488  0016A0  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2489  0016A2  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2490  0016A4  800B               	bsf	___aldiv@quotient^0,0,c
  2491  0016A6                     l1895:
  2492  0016A6  90D8               	bcf	status,0,c
  2493  0016A8  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2494  0016AA  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2495  0016AC  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2496  0016AE  3205               	rrcf	___aldiv@divisor^0,f,c
  2497  0016B0  2E09               	decfsz	___aldiv@counter^0,f,c
  2498  0016B2  EF36  F00B         	goto	l1887
  2499  0016B6                     l1899:
  2500  0016B6  500A               	movf	___aldiv@sign^0,w,c
  2501  0016B8  B4D8               	btfsc	status,2,c
  2502  0016BA  EF61  F00B         	goto	u1731
  2503  0016BE  EF63  F00B         	goto	u1730
  2504  0016C2                     u1731:
  2505  0016C2  EF6B  F00B         	goto	l1903
  2506  0016C6                     u1730:
  2507  0016C6  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2508  0016C8  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2509  0016CA  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2510  0016CC  6C0B               	negf	___aldiv@quotient^0,c
  2511  0016CE  0E00               	movlw	0
  2512  0016D0  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2513  0016D2  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2514  0016D4  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2515  0016D6                     l1903:
  2516  0016D6  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2517  0016DA  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2518  0016DE  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2519  0016E2  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2520  0016E6  0012               	return		;funcret
  2521  0016E8                     __end_of___aldiv:
  2522                           	callstack 0
  2523                           
  2524 ;; *************** function _lcdString *****************
  2525 ;; Defined at:
  2526 ;;		line 57 in file "lcd.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  msg             2   14[COMRAM] PTR unsigned char 
  2529 ;;		 -> STR_11(11), RAM(1535), STR_6(15), STR_5(14), 
  2530 ;;		 -> STR_4(12), STR_3(12), STR_2(15), STR_1(14), 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  i               2   18[COMRAM] int 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2542 ;;      Params:         2       0       0       0       0       0       0
  2543 ;;      Locals:         2       0       0       0       0       0       0
  2544 ;;      Temps:          2       0       0       0       0       0       0
  2545 ;;      Totals:         6       0       0       0       0       0       0
  2546 ;;Total ram usage:        6 bytes
  2547 ;; Hardware stack levels used: 1
  2548 ;; Hardware stack levels required when called: 5
  2549 ;; This function calls:
  2550 ;;		_lcdChar
  2551 ;; This function is called by:
  2552 ;;		_main
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text10
  2557  001910                     __ptext10:
  2558                           	callstack 0
  2559  001910                     _lcdString:
  2560                           	callstack 25
  2561  001910                     
  2562                           ;lcd.c: 58:  int i = 0;
  2563  001910  0E00               	movlw	0
  2564  001912  6E14               	movwf	(lcdString@i+1)^0,c
  2565  001914  0E00               	movlw	0
  2566  001916  6E13               	movwf	lcdString@i^0,c
  2567                           
  2568                           ;lcd.c: 59:  while (msg[i] != 0) {
  2569  001918  EFA8  F00C         	goto	l2103
  2570  00191C                     l2099:
  2571                           
  2572                           ;lcd.c: 60:   lcdChar(msg[i]);
  2573  00191C  5013               	movf	lcdString@i^0,w,c
  2574  00191E  240F               	addwf	lcdString@msg^0,w,c
  2575  001920  6E11               	movwf	??_lcdString^0,c
  2576  001922  5014               	movf	(lcdString@i+1)^0,w,c
  2577  001924  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2578  001926  6E12               	movwf	(??_lcdString+1)^0,c
  2579  001928  C011  FFF6         	movff	??_lcdString,tblptrl
  2580  00192C  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2581  001930  6AF8               	clrf	tblptru,c
  2582  001932  0E05               	movlw	(high __ramtop+-1)
  2583  001934  64F7               	cpfsgt	tblptrh,c
  2584  001936  D003               	bra	u1997
  2585  001938  0008               	tblrd		*
  2586  00193A  50F5               	movf	tablat,w,c
  2587  00193C  D005               	bra	u1990
  2588  00193E                     u1997:
  2589  00193E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2590  001942  CFF7 FFEA          	movff	tblptrh,fsr0h
  2591  001946  50EF               	movf	indf0,w,c
  2592  001948                     u1990:
  2593  001948  EC7B  F00F         	call	_lcdChar
  2594  00194C                     
  2595                           ;lcd.c: 61:   i++;
  2596  00194C  4A13               	infsnz	lcdString@i^0,f,c
  2597  00194E  2A14               	incf	(lcdString@i+1)^0,f,c
  2598  001950                     l2103:
  2599                           
  2600                           ;lcd.c: 59:  while (msg[i] != 0) {
  2601  001950  5013               	movf	lcdString@i^0,w,c
  2602  001952  240F               	addwf	lcdString@msg^0,w,c
  2603  001954  6E11               	movwf	??_lcdString^0,c
  2604  001956  5014               	movf	(lcdString@i+1)^0,w,c
  2605  001958  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2606  00195A  6E12               	movwf	(??_lcdString+1)^0,c
  2607  00195C  C011  FFF6         	movff	??_lcdString,tblptrl
  2608  001960  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2609  001964  6AF8               	clrf	tblptru,c
  2610  001966  0E05               	movlw	(high __ramtop+-1)
  2611  001968  64F7               	cpfsgt	tblptrh,c
  2612  00196A  D003               	bra	u2007
  2613  00196C  0008               	tblrd		*
  2614  00196E  50F5               	movf	tablat,w,c
  2615  001970  D005               	bra	u2000
  2616  001972                     u2007:
  2617  001972  CFF6 FFE9          	movff	tblptrl,fsr0l
  2618  001976  CFF7 FFEA          	movff	tblptrh,fsr0h
  2619  00197A  50EF               	movf	indf0,w,c
  2620  00197C                     u2000:
  2621  00197C  0900               	iorlw	0
  2622  00197E  A4D8               	btfss	status,2,c
  2623  001980  EFC4  F00C         	goto	u2011
  2624  001984  EFC6  F00C         	goto	u2010
  2625  001988                     u2011:
  2626  001988  EF8E  F00C         	goto	l2099
  2627  00198C                     u2010:
  2628  00198C  0012               	return		;funcret
  2629  00198E                     __end_of_lcdString:
  2630                           	callstack 0
  2631                           
  2632 ;; *************** function _lcdPosition *****************
  2633 ;; Defined at:
  2634 ;;		line 44 in file "lcd.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  line            2   14[COMRAM] int 
  2637 ;;  col             2   16[COMRAM] int 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2649 ;;      Params:         4       0       0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0
  2652 ;;      Totals:         4       0       0       0       0       0       0
  2653 ;;Total ram usage:        4 bytes
  2654 ;; Hardware stack levels used: 1
  2655 ;; Hardware stack levels required when called: 5
  2656 ;; This function calls:
  2657 ;;		_lcdCommand
  2658 ;; This function is called by:
  2659 ;;		_main
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text11
  2664  001D94                     __ptext11:
  2665                           	callstack 0
  2666  001D94                     _lcdPosition:
  2667                           	callstack 25
  2668  001D94                     
  2669                           ;lcd.c: 45:  if (line == 0) {
  2670  001D94  500F               	movf	lcdPosition@line^0,w,c
  2671  001D96  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  2672  001D98  A4D8               	btfss	status,2,c
  2673  001D9A  EFD1  F00E         	goto	u2021
  2674  001D9E  EFD3  F00E         	goto	u2020
  2675  001DA2                     u2021:
  2676  001DA2  EFD8  F00E         	goto	l2109
  2677  001DA6                     u2020:
  2678  001DA6                     
  2679                           ;lcd.c: 46:   lcdCommand(0x80 + (col % 16));
  2680  001DA6  5011               	movf	lcdPosition@col^0,w,c
  2681  001DA8  0B0F               	andlw	15
  2682  001DAA  0F80               	addlw	128
  2683  001DAC  EC8A  F00F         	call	_lcdCommand
  2684  001DB0                     l2109:
  2685                           
  2686                           ;lcd.c: 48:  if (line == 1) {
  2687  001DB0  040F               	decf	lcdPosition@line^0,w,c
  2688  001DB2  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  2689  001DB4  A4D8               	btfss	status,2,c
  2690  001DB6  EFDF  F00E         	goto	u2031
  2691  001DBA  EFE1  F00E         	goto	u2030
  2692  001DBE                     u2031:
  2693  001DBE  EFE6  F00E         	goto	l262
  2694  001DC2                     u2030:
  2695  001DC2                     
  2696                           ;lcd.c: 49:   lcdCommand(0xC0 + (col % 16));
  2697  001DC2  5011               	movf	lcdPosition@col^0,w,c
  2698  001DC4  0B0F               	andlw	15
  2699  001DC6  0FC0               	addlw	192
  2700  001DC8  EC8A  F00F         	call	_lcdCommand
  2701  001DCC                     l262:
  2702  001DCC  0012               	return		;funcret
  2703  001DCE                     __end_of_lcdPosition:
  2704                           	callstack 0
  2705                           
  2706 ;; *************** function _lcdNumber *****************
  2707 ;; Defined at:
  2708 ;;		line 64 in file "lcd.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  value           2   14[COMRAM] int 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  i               2   16[COMRAM] int 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      void 
  2715 ;; Registers used:
  2716 ;;		wreg, status,2, status,0, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2722 ;;      Params:         2       0       0       0       0       0       0
  2723 ;;      Locals:         2       0       0       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0
  2725 ;;      Totals:         4       0       0       0       0       0       0
  2726 ;;Total ram usage:        4 bytes
  2727 ;; Hardware stack levels used: 1
  2728 ;; Hardware stack levels required when called: 5
  2729 ;; This function calls:
  2730 ;;		___awdiv
  2731 ;;		___awmod
  2732 ;;		_lcdChar
  2733 ;; This function is called by:
  2734 ;;		_main
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text12
  2739  001A7A                     __ptext12:
  2740                           	callstack 0
  2741  001A7A                     _lcdNumber:
  2742                           	callstack 25
  2743  001A7A                     
  2744                           ;lcd.c: 65:  int i = 10000;
  2745  001A7A  0E27               	movlw	39
  2746  001A7C  6E12               	movwf	(lcdNumber@i+1)^0,c
  2747  001A7E  0E10               	movlw	16
  2748  001A80  6E11               	movwf	lcdNumber@i^0,c
  2749                           
  2750                           ;lcd.c: 66:  while (i > 0) {
  2751  001A82  EF69  F00D         	goto	l2233
  2752  001A86                     l2231:
  2753                           
  2754                           ;lcd.c: 67:   lcdChar((value / i) % 10 + 48);
  2755  001A86  C011  F003         	movff	lcdNumber@i,___awdiv@divisor
  2756  001A8A  C012  F004         	movff	lcdNumber@i+1,___awdiv@divisor+1
  2757  001A8E  C00F  F001         	movff	lcdNumber@value,___awdiv@dividend
  2758  001A92  C010  F002         	movff	lcdNumber@value+1,___awdiv@dividend+1
  2759  001A96  EC74  F00B         	call	___awdiv	;wreg free
  2760  001A9A  C001  F009         	movff	?___awdiv,___awmod@dividend
  2761  001A9E  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2762  001AA2  0E00               	movlw	0
  2763  001AA4  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2764  001AA6  0E0A               	movlw	10
  2765  001AA8  6E0B               	movwf	___awmod@divisor^0,c
  2766  001AAA  EC30  F00C         	call	___awmod	;wreg free
  2767  001AAE  5009               	movf	?___awmod^0,w,c
  2768  001AB0  0F30               	addlw	48
  2769  001AB2  EC7B  F00F         	call	_lcdChar
  2770                           
  2771                           ;lcd.c: 68:   i /= 10;
  2772  001AB6  C011  F001         	movff	lcdNumber@i,___awdiv@dividend
  2773  001ABA  C012  F002         	movff	lcdNumber@i+1,___awdiv@dividend+1
  2774  001ABE  0E00               	movlw	0
  2775  001AC0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2776  001AC2  0E0A               	movlw	10
  2777  001AC4  6E03               	movwf	___awdiv@divisor^0,c
  2778  001AC6  EC74  F00B         	call	___awdiv	;wreg free
  2779  001ACA  C001  F011         	movff	?___awdiv,lcdNumber@i
  2780  001ACE  C002  F012         	movff	?___awdiv+1,lcdNumber@i+1
  2781  001AD2                     l2233:
  2782                           
  2783                           ;lcd.c: 66:  while (i > 0) {
  2784  001AD2  BE12               	btfsc	(lcdNumber@i+1)^0,7,c
  2785  001AD4  EF76  F00D         	goto	u2190
  2786  001AD8  5012               	movf	(lcdNumber@i+1)^0,w,c
  2787  001ADA  E106               	bnz	u2191
  2788  001ADC  0411               	decf	lcdNumber@i^0,w,c
  2789  001ADE  B0D8               	btfsc	status,0,c
  2790  001AE0  EF74  F00D         	goto	u2191
  2791  001AE4  EF76  F00D         	goto	u2190
  2792  001AE8                     u2191:
  2793  001AE8  EF43  F00D         	goto	l2231
  2794  001AEC                     u2190:
  2795  001AEC  0012               	return		;funcret
  2796  001AEE                     __end_of_lcdNumber:
  2797                           	callstack 0
  2798                           
  2799 ;; *************** function _lcdChar *****************
  2800 ;; Defined at:
  2801 ;;		line 52 in file "lcd.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  value           1    wreg     unsigned char 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  value           1   13[COMRAM] unsigned char 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, status,2, status,0, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2815 ;;      Params:         0       0       0       0       0       0       0
  2816 ;;      Locals:         1       0       0       0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0
  2818 ;;      Totals:         1       0       0       0       0       0       0
  2819 ;;Total ram usage:        1 bytes
  2820 ;; Hardware stack levels used: 1
  2821 ;; Hardware stack levels required when called: 4
  2822 ;; This function calls:
  2823 ;;		_delayMicro
  2824 ;;		_pushByte
  2825 ;; This function is called by:
  2826 ;;		_lcdString
  2827 ;;		_lcdNumber
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text13
  2832  001EF6                     __ptext13:
  2833                           	callstack 0
  2834  001EF6                     _lcdChar:
  2835                           	callstack 25
  2836                           
  2837                           ;incstack = 0
  2838                           ;lcdChar@value stored from wreg
  2839  001EF6  6E0E               	movwf	lcdChar@value^0,c
  2840  001EF8                     
  2841                           ;lcd.c: 53:  pushByte(value, 1);
  2842  001EF8  0E00               	movlw	0
  2843  001EFA  6E0B               	movwf	(pushByte@rs+1)^0,c
  2844  001EFC  0E01               	movlw	1
  2845  001EFE  6E0A               	movwf	pushByte@rs^0,c
  2846  001F00  500E               	movf	lcdChar@value^0,w,c
  2847  001F02  ECDF  F00D         	call	_pushByte
  2848  001F06                     
  2849                           ;lcd.c: 54:  delayMicro(80);
  2850  001F06  0E00               	movlw	0
  2851  001F08  6E02               	movwf	(delayMicro@a+1)^0,c
  2852  001F0A  0E50               	movlw	80
  2853  001F0C  6E01               	movwf	delayMicro@a^0,c
  2854  001F0E  ECB1  F00F         	call	_delayMicro	;wreg free
  2855  001F12  0012               	return		;funcret
  2856  001F14                     __end_of_lcdChar:
  2857                           	callstack 0
  2858                           
  2859 ;; *************** function ___awmod *****************
  2860 ;; Defined at:
  2861 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  dividend        2    8[COMRAM] int 
  2864 ;;  divisor         2   10[COMRAM] int 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  sign            1   13[COMRAM] unsigned char 
  2867 ;;  counter         1   12[COMRAM] unsigned char 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  2    8[COMRAM] int 
  2870 ;; Registers used:
  2871 ;;		wreg, status,2, status,0
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2877 ;;      Params:         4       0       0       0       0       0       0
  2878 ;;      Locals:         2       0       0       0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0
  2880 ;;      Totals:         6       0       0       0       0       0       0
  2881 ;;Total ram usage:        6 bytes
  2882 ;; Hardware stack levels used: 1
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;;		_lcdNumber
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text14
  2892  001860                     __ptext14:
  2893                           	callstack 0
  2894  001860                     ___awmod:
  2895                           	callstack 29
  2896  001860  0E00               	movlw	0
  2897  001862  6E0E               	movwf	___awmod@sign^0,c
  2898  001864  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  2899  001866  EF39  F00C         	goto	u1900
  2900  00186A  EF37  F00C         	goto	u1901
  2901  00186E                     u1901:
  2902  00186E  EF3F  F00C         	goto	l2015
  2903  001872                     u1900:
  2904  001872  6C09               	negf	___awmod@dividend^0,c
  2905  001874  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  2906  001876  B0D8               	btfsc	status,0,c
  2907  001878  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  2908  00187A  0E01               	movlw	1
  2909  00187C  6E0E               	movwf	___awmod@sign^0,c
  2910  00187E                     l2015:
  2911  00187E  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  2912  001880  EF46  F00C         	goto	u1910
  2913  001884  EF44  F00C         	goto	u1911
  2914  001888                     u1911:
  2915  001888  EF4A  F00C         	goto	l2019
  2916  00188C                     u1910:
  2917  00188C  6C0B               	negf	___awmod@divisor^0,c
  2918  00188E  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  2919  001890  B0D8               	btfsc	status,0,c
  2920  001892  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  2921  001894                     l2019:
  2922  001894  500B               	movf	___awmod@divisor^0,w,c
  2923  001896  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  2924  001898  B4D8               	btfsc	status,2,c
  2925  00189A  EF51  F00C         	goto	u1921
  2926  00189E  EF53  F00C         	goto	u1920
  2927  0018A2                     u1921:
  2928  0018A2  EF77  F00C         	goto	l2035
  2929  0018A6                     u1920:
  2930  0018A6  0E01               	movlw	1
  2931  0018A8  6E0D               	movwf	___awmod@counter^0,c
  2932  0018AA  EF5B  F00C         	goto	l2025
  2933  0018AE                     l2023:
  2934  0018AE  90D8               	bcf	status,0,c
  2935  0018B0  360B               	rlcf	___awmod@divisor^0,f,c
  2936  0018B2  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  2937  0018B4  2A0D               	incf	___awmod@counter^0,f,c
  2938  0018B6                     l2025:
  2939  0018B6  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  2940  0018B8  EF60  F00C         	goto	u1931
  2941  0018BC  EF62  F00C         	goto	u1930
  2942  0018C0                     u1931:
  2943  0018C0  EF57  F00C         	goto	l2023
  2944  0018C4                     u1930:
  2945  0018C4                     l2027:
  2946  0018C4  500B               	movf	___awmod@divisor^0,w,c
  2947  0018C6  5C09               	subwf	___awmod@dividend^0,w,c
  2948  0018C8  500C               	movf	(___awmod@divisor+1)^0,w,c
  2949  0018CA  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  2950  0018CC  A0D8               	btfss	status,0,c
  2951  0018CE  EF6B  F00C         	goto	u1941
  2952  0018D2  EF6D  F00C         	goto	u1940
  2953  0018D6                     u1941:
  2954  0018D6  EF71  F00C         	goto	l2031
  2955  0018DA                     u1940:
  2956  0018DA  500B               	movf	___awmod@divisor^0,w,c
  2957  0018DC  5E09               	subwf	___awmod@dividend^0,f,c
  2958  0018DE  500C               	movf	(___awmod@divisor+1)^0,w,c
  2959  0018E0  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  2960  0018E2                     l2031:
  2961  0018E2  90D8               	bcf	status,0,c
  2962  0018E4  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  2963  0018E6  320B               	rrcf	___awmod@divisor^0,f,c
  2964  0018E8  2E0D               	decfsz	___awmod@counter^0,f,c
  2965  0018EA  EF62  F00C         	goto	l2027
  2966  0018EE                     l2035:
  2967  0018EE  500E               	movf	___awmod@sign^0,w,c
  2968  0018F0  B4D8               	btfsc	status,2,c
  2969  0018F2  EF7D  F00C         	goto	u1951
  2970  0018F6  EF7F  F00C         	goto	u1950
  2971  0018FA                     u1951:
  2972  0018FA  EF83  F00C         	goto	l2039
  2973  0018FE                     u1950:
  2974  0018FE  6C09               	negf	___awmod@dividend^0,c
  2975  001900  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  2976  001902  B0D8               	btfsc	status,0,c
  2977  001904  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  2978  001906                     l2039:
  2979  001906  C009  F009         	movff	___awmod@dividend,?___awmod
  2980  00190A  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  2981  00190E  0012               	return		;funcret
  2982  001910                     __end_of___awmod:
  2983                           	callstack 0
  2984                           
  2985 ;; *************** function ___awdiv *****************
  2986 ;; Defined at:
  2987 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  dividend        2    0[COMRAM] int 
  2990 ;;  divisor         2    2[COMRAM] int 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  quotient        2    6[COMRAM] int 
  2993 ;;  sign            1    5[COMRAM] unsigned char 
  2994 ;;  counter         1    4[COMRAM] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  2    0[COMRAM] int 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3004 ;;      Params:         4       0       0       0       0       0       0
  3005 ;;      Locals:         4       0       0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0
  3007 ;;      Totals:         8       0       0       0       0       0       0
  3008 ;;Total ram usage:        8 bytes
  3009 ;; Hardware stack levels used: 1
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;;		_lcdNumber
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text15
  3019  0016E8                     __ptext15:
  3020                           	callstack 0
  3021  0016E8                     ___awdiv:
  3022                           	callstack 29
  3023  0016E8  0E00               	movlw	0
  3024  0016EA  6E06               	movwf	___awdiv@sign^0,c
  3025  0016EC  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3026  0016EE  EF7D  F00B         	goto	u1840
  3027  0016F2  EF7B  F00B         	goto	u1841
  3028  0016F6                     u1841:
  3029  0016F6  EF83  F00B         	goto	l1971
  3030  0016FA                     u1840:
  3031  0016FA  6C03               	negf	___awdiv@divisor^0,c
  3032  0016FC  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3033  0016FE  B0D8               	btfsc	status,0,c
  3034  001700  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3035  001702  0E01               	movlw	1
  3036  001704  6E06               	movwf	___awdiv@sign^0,c
  3037  001706                     l1971:
  3038  001706  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3039  001708  EF8A  F00B         	goto	u1850
  3040  00170C  EF88  F00B         	goto	u1851
  3041  001710                     u1851:
  3042  001710  EF90  F00B         	goto	l1977
  3043  001714                     u1850:
  3044  001714  6C01               	negf	___awdiv@dividend^0,c
  3045  001716  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3046  001718  B0D8               	btfsc	status,0,c
  3047  00171A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3048  00171C  0E01               	movlw	1
  3049  00171E  1A06               	xorwf	___awdiv@sign^0,f,c
  3050  001720                     l1977:
  3051  001720  0E00               	movlw	0
  3052  001722  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3053  001724  0E00               	movlw	0
  3054  001726  6E07               	movwf	___awdiv@quotient^0,c
  3055  001728  5003               	movf	___awdiv@divisor^0,w,c
  3056  00172A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3057  00172C  B4D8               	btfsc	status,2,c
  3058  00172E  EF9B  F00B         	goto	u1861
  3059  001732  EF9D  F00B         	goto	u1860
  3060  001736                     u1861:
  3061  001736  EFC5  F00B         	goto	l1999
  3062  00173A                     u1860:
  3063  00173A  0E01               	movlw	1
  3064  00173C  6E05               	movwf	___awdiv@counter^0,c
  3065  00173E  EFA5  F00B         	goto	l1985
  3066  001742                     l1983:
  3067  001742  90D8               	bcf	status,0,c
  3068  001744  3603               	rlcf	___awdiv@divisor^0,f,c
  3069  001746  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3070  001748  2A05               	incf	___awdiv@counter^0,f,c
  3071  00174A                     l1985:
  3072  00174A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3073  00174C  EFAA  F00B         	goto	u1871
  3074  001750  EFAC  F00B         	goto	u1870
  3075  001754                     u1871:
  3076  001754  EFA1  F00B         	goto	l1983
  3077  001758                     u1870:
  3078  001758                     l1987:
  3079  001758  90D8               	bcf	status,0,c
  3080  00175A  3607               	rlcf	___awdiv@quotient^0,f,c
  3081  00175C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3082  00175E  5003               	movf	___awdiv@divisor^0,w,c
  3083  001760  5C01               	subwf	___awdiv@dividend^0,w,c
  3084  001762  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3085  001764  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3086  001766  A0D8               	btfss	status,0,c
  3087  001768  EFB8  F00B         	goto	u1881
  3088  00176C  EFBA  F00B         	goto	u1880
  3089  001770                     u1881:
  3090  001770  EFBF  F00B         	goto	l1995
  3091  001774                     u1880:
  3092  001774  5003               	movf	___awdiv@divisor^0,w,c
  3093  001776  5E01               	subwf	___awdiv@dividend^0,f,c
  3094  001778  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3095  00177A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3096  00177C  8007               	bsf	___awdiv@quotient^0,0,c
  3097  00177E                     l1995:
  3098  00177E  90D8               	bcf	status,0,c
  3099  001780  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3100  001782  3203               	rrcf	___awdiv@divisor^0,f,c
  3101  001784  2E05               	decfsz	___awdiv@counter^0,f,c
  3102  001786  EFAC  F00B         	goto	l1987
  3103  00178A                     l1999:
  3104  00178A  5006               	movf	___awdiv@sign^0,w,c
  3105  00178C  B4D8               	btfsc	status,2,c
  3106  00178E  EFCB  F00B         	goto	u1891
  3107  001792  EFCD  F00B         	goto	u1890
  3108  001796                     u1891:
  3109  001796  EFD1  F00B         	goto	l2003
  3110  00179A                     u1890:
  3111  00179A  6C07               	negf	___awdiv@quotient^0,c
  3112  00179C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3113  00179E  B0D8               	btfsc	status,0,c
  3114  0017A0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3115  0017A2                     l2003:
  3116  0017A2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3117  0017A6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3118  0017AA  0012               	return		;funcret
  3119  0017AC                     __end_of___awdiv:
  3120                           	callstack 0
  3121                           
  3122 ;; *************** function _lcdInit *****************
  3123 ;; Defined at:
  3124 ;;		line 72 in file "lcd.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3138 ;;      Params:         0       0       0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0       0       0
  3141 ;;      Totals:         0       0       0       0       0       0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used: 1
  3144 ;; Hardware stack levels required when called: 5
  3145 ;; This function calls:
  3146 ;;		_delayMicro
  3147 ;;		_delayMili
  3148 ;;		_lcdCommand
  3149 ;;		_pinMode
  3150 ;;		_pushNibble
  3151 ;;		_soInit
  3152 ;; This function is called by:
  3153 ;;		_main
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text16
  3158  0017AC                     __ptext16:
  3159                           	callstack 0
  3160  0017AC                     _lcdInit:
  3161                           	callstack 25
  3162  0017AC                     
  3163                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  3164  0017AC  0E00               	movlw	0
  3165  0017AE  6E02               	movwf	(pinMode@pin+1)^0,c
  3166  0017B0  0E1C               	movlw	28
  3167  0017B2  6E01               	movwf	pinMode@pin^0,c
  3168  0017B4  0E00               	movlw	0
  3169  0017B6  6E04               	movwf	(pinMode@type+1)^0,c
  3170  0017B8  0E00               	movlw	0
  3171  0017BA  6E03               	movwf	pinMode@type^0,c
  3172  0017BC  EC9A  F006         	call	_pinMode	;wreg free
  3173                           
  3174                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  3175  0017C0  0E00               	movlw	0
  3176  0017C2  6E02               	movwf	(pinMode@pin+1)^0,c
  3177  0017C4  0E1D               	movlw	29
  3178  0017C6  6E01               	movwf	pinMode@pin^0,c
  3179  0017C8  0E00               	movlw	0
  3180  0017CA  6E04               	movwf	(pinMode@type+1)^0,c
  3181  0017CC  0E00               	movlw	0
  3182  0017CE  6E03               	movwf	pinMode@type^0,c
  3183  0017D0  EC9A  F006         	call	_pinMode	;wreg free
  3184                           
  3185                           ;lcd.c: 75:  soInit();
  3186  0017D4  ECAB  F00E         	call	_soInit	;wreg free
  3187                           
  3188                           ;lcd.c: 76:  delayMili(15);
  3189  0017D8  0E00               	movlw	0
  3190  0017DA  6E02               	movwf	(delayMili@a+1)^0,c
  3191  0017DC  0E0F               	movlw	15
  3192  0017DE  6E01               	movwf	delayMili@a^0,c
  3193  0017E0  EC00  F00F         	call	_delayMili	;wreg free
  3194                           
  3195                           ;lcd.c: 78:  pushNibble(0x03, 0);
  3196  0017E4  0E00               	movlw	0
  3197  0017E6  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3198  0017E8  0E00               	movlw	0
  3199  0017EA  6E0A               	movwf	pushNibble@rs^0,c
  3200  0017EC  0E03               	movlw	3
  3201  0017EE  EC68  F00F         	call	_pushNibble
  3202                           
  3203                           ;lcd.c: 79:  delayMili(5);
  3204  0017F2  0E00               	movlw	0
  3205  0017F4  6E02               	movwf	(delayMili@a+1)^0,c
  3206  0017F6  0E05               	movlw	5
  3207  0017F8  6E01               	movwf	delayMili@a^0,c
  3208  0017FA  EC00  F00F         	call	_delayMili	;wreg free
  3209                           
  3210                           ;lcd.c: 80:  pushNibble(0x03, 0);
  3211  0017FE  0E00               	movlw	0
  3212  001800  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3213  001802  0E00               	movlw	0
  3214  001804  6E0A               	movwf	pushNibble@rs^0,c
  3215  001806  0E03               	movlw	3
  3216  001808  EC68  F00F         	call	_pushNibble
  3217  00180C                     
  3218                           ;lcd.c: 81:  delayMicro(160);
  3219  00180C  0E00               	movlw	0
  3220  00180E  6E02               	movwf	(delayMicro@a+1)^0,c
  3221  001810  0EA0               	movlw	160
  3222  001812  6E01               	movwf	delayMicro@a^0,c
  3223  001814  ECB1  F00F         	call	_delayMicro	;wreg free
  3224  001818                     
  3225                           ;lcd.c: 82:  pushNibble(0x03, 0);
  3226  001818  0E00               	movlw	0
  3227  00181A  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3228  00181C  0E00               	movlw	0
  3229  00181E  6E0A               	movwf	pushNibble@rs^0,c
  3230  001820  0E03               	movlw	3
  3231  001822  EC68  F00F         	call	_pushNibble
  3232                           
  3233                           ;lcd.c: 83:  delayMicro(160);
  3234  001826  0E00               	movlw	0
  3235  001828  6E02               	movwf	(delayMicro@a+1)^0,c
  3236  00182A  0EA0               	movlw	160
  3237  00182C  6E01               	movwf	delayMicro@a^0,c
  3238  00182E  ECB1  F00F         	call	_delayMicro	;wreg free
  3239  001832                     
  3240                           ;lcd.c: 85:  pushNibble(0x02, 0);
  3241  001832  0E00               	movlw	0
  3242  001834  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3243  001836  0E00               	movlw	0
  3244  001838  6E0A               	movwf	pushNibble@rs^0,c
  3245  00183A  0E02               	movlw	2
  3246  00183C  EC68  F00F         	call	_pushNibble
  3247  001840                     
  3248                           ;lcd.c: 86:  delayMili(10);
  3249  001840  0E00               	movlw	0
  3250  001842  6E02               	movwf	(delayMili@a+1)^0,c
  3251  001844  0E0A               	movlw	10
  3252  001846  6E01               	movwf	delayMili@a^0,c
  3253  001848  EC00  F00F         	call	_delayMili	;wreg free
  3254  00184C                     
  3255                           ;lcd.c: 88:  lcdCommand(0x28);
  3256  00184C  0E28               	movlw	40
  3257  00184E  EC8A  F00F         	call	_lcdCommand
  3258  001852                     
  3259                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  3260  001852  0E0C               	movlw	12
  3261  001854  EC8A  F00F         	call	_lcdCommand
  3262  001858                     
  3263                           ;lcd.c: 90:  lcdCommand(0x01);
  3264  001858  0E01               	movlw	1
  3265  00185A  EC8A  F00F         	call	_lcdCommand
  3266  00185E  0012               	return		;funcret
  3267  001860                     __end_of_lcdInit:
  3268                           	callstack 0
  3269                           
  3270 ;; *************** function _pushNibble *****************
  3271 ;; Defined at:
  3272 ;;		line 25 in file "lcd.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  value           1    wreg     unsigned char 
  3275 ;;  rs              2    9[COMRAM] int 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  value           1   11[COMRAM] unsigned char 
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  1    wreg      void 
  3280 ;; Registers used:
  3281 ;;		wreg, status,2, status,0, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3287 ;;      Params:         2       0       0       0       0       0       0
  3288 ;;      Locals:         1       0       0       0       0       0       0
  3289 ;;      Temps:          0       0       0       0       0       0       0
  3290 ;;      Totals:         3       0       0       0       0       0       0
  3291 ;;Total ram usage:        3 bytes
  3292 ;; Hardware stack levels used: 1
  3293 ;; Hardware stack levels required when called: 3
  3294 ;; This function calls:
  3295 ;;		_digitalWrite
  3296 ;;		_pulseEnablePin
  3297 ;;		_soWrite
  3298 ;; This function is called by:
  3299 ;;		_lcdInit
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text17
  3304  001ED0                     __ptext17:
  3305                           	callstack 0
  3306  001ED0                     _pushNibble:
  3307                           	callstack 26
  3308                           
  3309                           ;incstack = 0
  3310                           ;pushNibble@value stored from wreg
  3311  001ED0  6E0C               	movwf	pushNibble@value^0,c
  3312  001ED2                     
  3313                           ;lcd.c: 26:  soWrite(value);
  3314  001ED2  C00C  F007         	movff	pushNibble@value,soWrite@value
  3315  001ED6  6A08               	clrf	(soWrite@value+1)^0,c
  3316  001ED8  EC63  F00E         	call	_soWrite	;wreg free
  3317                           
  3318                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  3319  001EDC  0E00               	movlw	0
  3320  001EDE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3321  001EE0  0E1D               	movlw	29
  3322  001EE2  6E01               	movwf	digitalWrite@pin^0,c
  3323  001EE4  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  3324  001EE8  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  3325  001EEC  ECC1  F007         	call	_digitalWrite	;wreg free
  3326                           
  3327                           ;lcd.c: 28:  pulseEnablePin();
  3328  001EF0  EC8A  F00E         	call	_pulseEnablePin	;wreg free
  3329  001EF4  0012               	return		;funcret
  3330  001EF6                     __end_of_pushNibble:
  3331                           	callstack 0
  3332                           
  3333 ;; *************** function _lcdCommand *****************
  3334 ;; Defined at:
  3335 ;;		line 40 in file "lcd.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  value           1    wreg     unsigned char 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  value           1   13[COMRAM] unsigned char 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3349 ;;      Params:         0       0       0       0       0       0       0
  3350 ;;      Locals:         1       0       0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0
  3352 ;;      Totals:         1       0       0       0       0       0       0
  3353 ;;Total ram usage:        1 bytes
  3354 ;; Hardware stack levels used: 1
  3355 ;; Hardware stack levels required when called: 4
  3356 ;; This function calls:
  3357 ;;		_delayMili
  3358 ;;		_pushByte
  3359 ;; This function is called by:
  3360 ;;		_main
  3361 ;;		_lcdPosition
  3362 ;;		_lcdInit
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text18
  3367  001F14                     __ptext18:
  3368                           	callstack 0
  3369  001F14                     _lcdCommand:
  3370                           	callstack 25
  3371                           
  3372                           ;incstack = 0
  3373                           ;lcdCommand@value stored from wreg
  3374  001F14  6E0E               	movwf	lcdCommand@value^0,c
  3375  001F16                     
  3376                           ;lcd.c: 41:  pushByte(value, 0);
  3377  001F16  0E00               	movlw	0
  3378  001F18  6E0B               	movwf	(pushByte@rs+1)^0,c
  3379  001F1A  0E00               	movlw	0
  3380  001F1C  6E0A               	movwf	pushByte@rs^0,c
  3381  001F1E  500E               	movf	lcdCommand@value^0,w,c
  3382  001F20  ECDF  F00D         	call	_pushByte
  3383                           
  3384                           ;lcd.c: 42:  delayMili(2);
  3385  001F24  0E00               	movlw	0
  3386  001F26  6E02               	movwf	(delayMili@a+1)^0,c
  3387  001F28  0E02               	movlw	2
  3388  001F2A  6E01               	movwf	delayMili@a^0,c
  3389  001F2C  EC00  F00F         	call	_delayMili	;wreg free
  3390  001F30  0012               	return		;funcret
  3391  001F32                     __end_of_lcdCommand:
  3392                           	callstack 0
  3393                           
  3394 ;; *************** function _pushByte *****************
  3395 ;; Defined at:
  3396 ;;		line 31 in file "lcd.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  value           1    wreg     unsigned char 
  3399 ;;  rs              2    9[COMRAM] int 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  value           1   12[COMRAM] unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3411 ;;      Params:         2       0       0       0       0       0       0
  3412 ;;      Locals:         1       0       0       0       0       0       0
  3413 ;;      Temps:          1       0       0       0       0       0       0
  3414 ;;      Totals:         4       0       0       0       0       0       0
  3415 ;;Total ram usage:        4 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 3
  3418 ;; This function calls:
  3419 ;;		_digitalWrite
  3420 ;;		_pulseEnablePin
  3421 ;;		_soWrite
  3422 ;; This function is called by:
  3423 ;;		_lcdCommand
  3424 ;;		_lcdChar
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text19
  3429  001BBE                     __ptext19:
  3430                           	callstack 0
  3431  001BBE                     _pushByte:
  3432                           	callstack 25
  3433                           
  3434                           ;incstack = 0
  3435                           ;pushByte@value stored from wreg
  3436  001BBE  6E0D               	movwf	pushByte@value^0,c
  3437  001BC0                     
  3438                           ;lcd.c: 32:  soWrite(value >> 4);
  3439  001BC0  C00D  F00C         	movff	pushByte@value,??_pushByte
  3440  001BC4  3A0C               	swapf	??_pushByte^0,f,c
  3441  001BC6  0E0F               	movlw	15
  3442  001BC8  160C               	andwf	??_pushByte^0,f,c
  3443  001BCA  500C               	movf	??_pushByte^0,w,c
  3444  001BCC  6E07               	movwf	soWrite@value^0,c
  3445  001BCE  6A08               	clrf	(soWrite@value+1)^0,c
  3446  001BD0  EC63  F00E         	call	_soWrite	;wreg free
  3447                           
  3448                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  3449  001BD4  0E00               	movlw	0
  3450  001BD6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3451  001BD8  0E1D               	movlw	29
  3452  001BDA  6E01               	movwf	digitalWrite@pin^0,c
  3453  001BDC  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  3454  001BE0  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  3455  001BE4  ECC1  F007         	call	_digitalWrite	;wreg free
  3456                           
  3457                           ;lcd.c: 34:  pulseEnablePin();
  3458  001BE8  EC8A  F00E         	call	_pulseEnablePin	;wreg free
  3459                           
  3460                           ;lcd.c: 36:  soWrite(value & 0x0F);
  3461  001BEC  C00D  F00C         	movff	pushByte@value,??_pushByte
  3462  001BF0  0E0F               	movlw	15
  3463  001BF2  160C               	andwf	??_pushByte^0,f,c
  3464  001BF4  500C               	movf	??_pushByte^0,w,c
  3465  001BF6  6E07               	movwf	soWrite@value^0,c
  3466  001BF8  6A08               	clrf	(soWrite@value+1)^0,c
  3467  001BFA  EC63  F00E         	call	_soWrite	;wreg free
  3468                           
  3469                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  3470  001BFE  0E00               	movlw	0
  3471  001C00  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3472  001C02  0E1D               	movlw	29
  3473  001C04  6E01               	movwf	digitalWrite@pin^0,c
  3474  001C06  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  3475  001C0A  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  3476  001C0E  ECC1  F007         	call	_digitalWrite	;wreg free
  3477                           
  3478                           ;lcd.c: 38:  pulseEnablePin();
  3479  001C12  EC8A  F00E         	call	_pulseEnablePin	;wreg free
  3480  001C16  0012               	return		;funcret
  3481  001C18                     __end_of_pushByte:
  3482                           	callstack 0
  3483                           
  3484 ;; *************** function _pulseEnablePin *****************
  3485 ;; Defined at:
  3486 ;;		line 18 in file "lcd.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;		None
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      void 
  3493 ;; Registers used:
  3494 ;;		wreg, status,2, status,0, cstack
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3500 ;;      Params:         0       0       0       0       0       0       0
  3501 ;;      Locals:         0       0       0       0       0       0       0
  3502 ;;      Temps:          0       0       0       0       0       0       0
  3503 ;;      Totals:         0       0       0       0       0       0       0
  3504 ;;Total ram usage:        0 bytes
  3505 ;; Hardware stack levels used: 1
  3506 ;; Hardware stack levels required when called: 1
  3507 ;; This function calls:
  3508 ;;		_delayMicro
  3509 ;;		_digitalWrite
  3510 ;; This function is called by:
  3511 ;;		_pushNibble
  3512 ;;		_pushByte
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text20
  3517  001D14                     __ptext20:
  3518                           	callstack 0
  3519  001D14                     _pulseEnablePin:
  3520                           	callstack 26
  3521  001D14                     
  3522                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  3523  001D14  0E00               	movlw	0
  3524  001D16  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3525  001D18  0E1C               	movlw	28
  3526  001D1A  6E01               	movwf	digitalWrite@pin^0,c
  3527  001D1C  0E00               	movlw	0
  3528  001D1E  6E04               	movwf	(digitalWrite@value+1)^0,c
  3529  001D20  0E01               	movlw	1
  3530  001D22  6E03               	movwf	digitalWrite@value^0,c
  3531  001D24  ECC1  F007         	call	_digitalWrite	;wreg free
  3532  001D28                     
  3533                           ;lcd.c: 20:  delayMicro(5);
  3534  001D28  0E00               	movlw	0
  3535  001D2A  6E02               	movwf	(delayMicro@a+1)^0,c
  3536  001D2C  0E05               	movlw	5
  3537  001D2E  6E01               	movwf	delayMicro@a^0,c
  3538  001D30  ECB1  F00F         	call	_delayMicro	;wreg free
  3539  001D34                     
  3540                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  3541  001D34  0E00               	movlw	0
  3542  001D36  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3543  001D38  0E1C               	movlw	28
  3544  001D3A  6E01               	movwf	digitalWrite@pin^0,c
  3545  001D3C  0E00               	movlw	0
  3546  001D3E  6E04               	movwf	(digitalWrite@value+1)^0,c
  3547  001D40  0E00               	movlw	0
  3548  001D42  6E03               	movwf	digitalWrite@value^0,c
  3549  001D44  ECC1  F007         	call	_digitalWrite	;wreg free
  3550                           
  3551                           ;lcd.c: 22:  delayMicro(5);
  3552  001D48  0E00               	movlw	0
  3553  001D4A  6E02               	movwf	(delayMicro@a+1)^0,c
  3554  001D4C  0E05               	movlw	5
  3555  001D4E  6E01               	movwf	delayMicro@a^0,c
  3556  001D50  ECB1  F00F         	call	_delayMicro	;wreg free
  3557  001D54  0012               	return		;funcret
  3558  001D56                     __end_of_pulseEnablePin:
  3559                           	callstack 0
  3560                           
  3561 ;; *************** function _delayMicro *****************
  3562 ;; Defined at:
  3563 ;;		line 5 in file "lcd.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;  a               2    0[COMRAM] int 
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;  i               2    0        volatile int 
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		None
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3577 ;;      Params:         2       0       0       0       0       0       0
  3578 ;;      Locals:         0       0       0       0       0       0       0
  3579 ;;      Temps:          0       0       0       0       0       0       0
  3580 ;;      Totals:         2       0       0       0       0       0       0
  3581 ;;Total ram usage:        2 bytes
  3582 ;; Hardware stack levels used: 1
  3583 ;; This function calls:
  3584 ;;		Nothing
  3585 ;; This function is called by:
  3586 ;;		_pulseEnablePin
  3587 ;;		_lcdChar
  3588 ;;		_lcdInit
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text21
  3593  001F62                     __ptext21:
  3594                           	callstack 0
  3595  001F62                     _delayMicro:
  3596                           	callstack 26
  3597  001F62  0012               	return		;funcret
  3598  001F64                     __end_of_delayMicro:
  3599                           	callstack 0
  3600                           
  3601 ;; *************** function _delayMili *****************
  3602 ;; Defined at:
  3603 ;;		line 10 in file "lcd.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  a               2    0[COMRAM] int 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  i               2    3[COMRAM] volatile int 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      void 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3617 ;;      Params:         2       0       0       0       0       0       0
  3618 ;;      Locals:         2       0       0       0       0       0       0
  3619 ;;      Temps:          1       0       0       0       0       0       0
  3620 ;;      Totals:         5       0       0       0       0       0       0
  3621 ;;Total ram usage:        5 bytes
  3622 ;; Hardware stack levels used: 1
  3623 ;; This function calls:
  3624 ;;		Nothing
  3625 ;; This function is called by:
  3626 ;;		_lcdCommand
  3627 ;;		_lcdInit
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text22
  3632  001E00                     __ptext22:
  3633                           	callstack 0
  3634  001E00                     _delayMili:
  3635                           	callstack 28
  3636  001E00                     
  3637                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  3638  001E00  0E00               	movlw	0
  3639  001E02  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  3640  001E04  0E00               	movlw	0
  3641  001E06  6E04               	movwf	delayMili@i^0,c	;volatile
  3642  001E08  EF08  F00F         	goto	l1859
  3643  001E0C                     l1857:
  3644                           
  3645                           ;lcd.c: 15:  }
  3646  001E0C  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  3647  001E0E  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  3648  001E10                     l1859:
  3649  001E10  5001               	movf	delayMili@a^0,w,c
  3650  001E12  5C04               	subwf	delayMili@i^0,w,c	;volatile
  3651  001E14  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  3652  001E16  0A80               	xorlw	128
  3653  001E18  6E03               	movwf	??_delayMili^0,c
  3654  001E1A  5002               	movf	(delayMili@a+1)^0,w,c
  3655  001E1C  0A80               	xorlw	128
  3656  001E1E  5803               	subwfb	??_delayMili^0,w,c
  3657  001E20  A0D8               	btfss	status,0,c
  3658  001E22  EF15  F00F         	goto	u1671
  3659  001E26  EF17  F00F         	goto	u1670
  3660  001E2A                     u1671:
  3661  001E2A  EF06  F00F         	goto	l1857
  3662  001E2E                     u1670:
  3663  001E2E  0012               	return		;funcret
  3664  001E30                     __end_of_delayMili:
  3665                           	callstack 0
  3666                           
  3667 ;; *************** function _kpReadKey *****************
  3668 ;; Defined at:
  3669 ;;		line 17 in file "keypad.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;		None
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  i               2    3[COMRAM] int 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      unsigned char 
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3683 ;;      Params:         0       0       0       0       0       0       0
  3684 ;;      Locals:         2       0       0       0       0       0       0
  3685 ;;      Temps:          3       0       0       0       0       0       0
  3686 ;;      Totals:         5       0       0       0       0       0       0
  3687 ;;Total ram usage:        5 bytes
  3688 ;; Hardware stack levels used: 1
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		_main
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text23
  3697  00198E                     __ptext23:
  3698                           	callstack 0
  3699  00198E                     _kpReadKey:
  3700                           	callstack 30
  3701  00198E                     
  3702                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  3703  00198E  0E00               	movlw	0
  3704  001990  6E05               	movwf	(kpReadKey@i+1)^0,c
  3705  001992  0E00               	movlw	0
  3706  001994  6E04               	movwf	kpReadKey@i^0,c
  3707  001996                     l1405:
  3708                           
  3709                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  3710  001996  C004  F001         	movff	kpReadKey@i,??_kpReadKey
  3711  00199A  0E01               	movlw	1
  3712  00199C  6E02               	movwf	(??_kpReadKey+1)^0,c
  3713  00199E  0E00               	movlw	0
  3714  0019A0  6E03               	movwf	(??_kpReadKey+2)^0,c
  3715  0019A2  2A01               	incf	??_kpReadKey^0,f,c
  3716  0019A4  EFD7  F00C         	goto	u794
  3717  0019A8                     u795:
  3718  0019A8  90D8               	bcf	status,0,c
  3719  0019AA  3602               	rlcf	(??_kpReadKey+1)^0,f,c
  3720  0019AC  3603               	rlcf	(??_kpReadKey+2)^0,f,c
  3721  0019AE                     u794:
  3722  0019AE  2E01               	decfsz	??_kpReadKey^0,f,c
  3723  0019B0  EFD4  F00C         	goto	u795
  3724  0019B4  502B               	movf	_keys^0,w,c
  3725  0019B6  1602               	andwf	(??_kpReadKey+1)^0,f,c
  3726  0019B8  502C               	movf	(_keys+1)^0,w,c
  3727  0019BA  1603               	andwf	(??_kpReadKey+2)^0,f,c
  3728  0019BC  5002               	movf	(??_kpReadKey+1)^0,w,c
  3729  0019BE  1003               	iorwf	(??_kpReadKey+2)^0,w,c
  3730  0019C0  B4D8               	btfsc	status,2,c
  3731  0019C2  EFE5  F00C         	goto	u801
  3732  0019C6  EFE7  F00C         	goto	u800
  3733  0019CA                     u801:
  3734  0019CA  EFF1  F00C         	goto	l1411
  3735  0019CE                     u800:
  3736  0019CE                     
  3737                           ;keypad.c: 21:    return charKey[i];
  3738  0019CE  0E11               	movlw	low _charKey
  3739  0019D0  2404               	addwf	kpReadKey@i^0,w,c
  3740  0019D2  6EF6               	movwf	tblptrl,c
  3741  0019D4  0E06               	movlw	high _charKey
  3742  0019D6  2005               	addwfc	(kpReadKey@i+1)^0,w,c
  3743  0019D8  6EF7               	movwf	tblptrh,c
  3744  0019DA                     	if	0	;There are less than 3 active tblptr bytes
  3745  0019DA                     	endif
  3746  0019DA  0008               	tblrd		*
  3747  0019DC  50F5               	movf	tablat,w,c
  3748  0019DE  EF02  F00D         	goto	l209
  3749  0019E2                     l1411:
  3750                           
  3751                           ;keypad.c: 23:  }
  3752  0019E2  4A04               	infsnz	kpReadKey@i^0,f,c
  3753  0019E4  2A05               	incf	(kpReadKey@i+1)^0,f,c
  3754  0019E6  BE05               	btfsc	(kpReadKey@i+1)^0,7,c
  3755  0019E8  EFFF  F00C         	goto	u811
  3756  0019EC  5005               	movf	(kpReadKey@i+1)^0,w,c
  3757  0019EE  E109               	bnz	u810
  3758  0019F0  0E0A               	movlw	10
  3759  0019F2  5C04               	subwf	kpReadKey@i^0,w,c
  3760  0019F4  A0D8               	btfss	status,0,c
  3761  0019F6  EFFF  F00C         	goto	u811
  3762  0019FA  EF01  F00D         	goto	u810
  3763  0019FE                     u811:
  3764  0019FE  EFCB  F00C         	goto	l1405
  3765  001A02                     u810:
  3766  001A02                     
  3767                           ;keypad.c: 25:  return 0;
  3768  001A02  0E00               	movlw	0
  3769  001A04                     l209:
  3770  001A04  0012               	return		;funcret
  3771  001A06                     __end_of_kpReadKey:
  3772                           	callstack 0
  3773                           
  3774 ;; *************** function _kpInit *****************
  3775 ;; Defined at:
  3776 ;;		line 54 in file "keypad.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;		None
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;		None
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  1    wreg      void 
  3783 ;; Registers used:
  3784 ;;		wreg, status,2, status,0, cstack
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3790 ;;      Params:         0       0       0       0       0       0       0
  3791 ;;      Locals:         0       0       0       0       0       0       0
  3792 ;;      Temps:          0       0       0       0       0       0       0
  3793 ;;      Totals:         0       0       0       0       0       0       0
  3794 ;;Total ram usage:        0 bytes
  3795 ;; Hardware stack levels used: 1
  3796 ;; Hardware stack levels required when called: 2
  3797 ;; This function calls:
  3798 ;;		_pinMode
  3799 ;;		_soInit
  3800 ;; This function is called by:
  3801 ;;		_main
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text24
  3806  001DCE                     __ptext24:
  3807                           	callstack 0
  3808  001DCE                     _kpInit:
  3809                           	callstack 28
  3810  001DCE                     
  3811                           ;keypad.c: 55:   soInit();
  3812  001DCE  ECAB  F00E         	call	_soInit	;wreg free
  3813                           
  3814                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  3815  001DD2  0E00               	movlw	0
  3816  001DD4  6E02               	movwf	(pinMode@pin+1)^0,c
  3817  001DD6  0E0A               	movlw	10
  3818  001DD8  6E01               	movwf	pinMode@pin^0,c
  3819  001DDA  0E00               	movlw	0
  3820  001DDC  6E04               	movwf	(pinMode@type+1)^0,c
  3821  001DDE  0E01               	movlw	1
  3822  001DE0  6E03               	movwf	pinMode@type^0,c
  3823  001DE2  EC9A  F006         	call	_pinMode	;wreg free
  3824                           
  3825                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  3826  001DE6  0E00               	movlw	0
  3827  001DE8  6E02               	movwf	(pinMode@pin+1)^0,c
  3828  001DEA  0E09               	movlw	9
  3829  001DEC  6E01               	movwf	pinMode@pin^0,c
  3830  001DEE  0E00               	movlw	0
  3831  001DF0  6E04               	movwf	(pinMode@type+1)^0,c
  3832  001DF2  0E01               	movlw	1
  3833  001DF4  6E03               	movwf	pinMode@type^0,c
  3834  001DF6  EC9A  F006         	call	_pinMode	;wreg free
  3835  001DFA                     
  3836                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  3837  001DFA  0E0C               	movlw	12
  3838  001DFC  6EC1               	movwf	193,c	;volatile
  3839  001DFE  0012               	return		;funcret
  3840  001E00                     __end_of_kpInit:
  3841                           	callstack 0
  3842                           
  3843 ;; *************** function _soInit *****************
  3844 ;; Defined at:
  3845 ;;		line 3 in file "so.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;		None
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1    wreg      void 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3859 ;;      Params:         0       0       0       0       0       0       0
  3860 ;;      Locals:         0       0       0       0       0       0       0
  3861 ;;      Temps:          0       0       0       0       0       0       0
  3862 ;;      Totals:         0       0       0       0       0       0       0
  3863 ;;Total ram usage:        0 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; Hardware stack levels required when called: 1
  3866 ;; This function calls:
  3867 ;;		_pinMode
  3868 ;; This function is called by:
  3869 ;;		_kpInit
  3870 ;;		_lcdInit
  3871 ;;		_ssdInit
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text25
  3876  001D56                     __ptext25:
  3877                           	callstack 0
  3878  001D56                     _soInit:
  3879                           	callstack 28
  3880  001D56                     
  3881                           ;so.c: 4:  pinMode(PIN_D7, 0);
  3882  001D56  0E00               	movlw	0
  3883  001D58  6E02               	movwf	(pinMode@pin+1)^0,c
  3884  001D5A  0E1F               	movlw	31
  3885  001D5C  6E01               	movwf	pinMode@pin^0,c
  3886  001D5E  0E00               	movlw	0
  3887  001D60  6E04               	movwf	(pinMode@type+1)^0,c
  3888  001D62  0E00               	movlw	0
  3889  001D64  6E03               	movwf	pinMode@type^0,c
  3890  001D66  EC9A  F006         	call	_pinMode	;wreg free
  3891                           
  3892                           ;so.c: 5:  pinMode(PIN_B0, 0);
  3893  001D6A  0E00               	movlw	0
  3894  001D6C  6E02               	movwf	(pinMode@pin+1)^0,c
  3895  001D6E  0E08               	movlw	8
  3896  001D70  6E01               	movwf	pinMode@pin^0,c
  3897  001D72  0E00               	movlw	0
  3898  001D74  6E04               	movwf	(pinMode@type+1)^0,c
  3899  001D76  0E00               	movlw	0
  3900  001D78  6E03               	movwf	pinMode@type^0,c
  3901  001D7A  EC9A  F006         	call	_pinMode	;wreg free
  3902                           
  3903                           ;so.c: 6:  pinMode(PIN_D6, 0);
  3904  001D7E  0E00               	movlw	0
  3905  001D80  6E02               	movwf	(pinMode@pin+1)^0,c
  3906  001D82  0E1E               	movlw	30
  3907  001D84  6E01               	movwf	pinMode@pin^0,c
  3908  001D86  0E00               	movlw	0
  3909  001D88  6E04               	movwf	(pinMode@type+1)^0,c
  3910  001D8A  0E00               	movlw	0
  3911  001D8C  6E03               	movwf	pinMode@type^0,c
  3912  001D8E  EC9A  F006         	call	_pinMode	;wreg free
  3913  001D92  0012               	return		;funcret
  3914  001D94                     __end_of_soInit:
  3915                           	callstack 0
  3916                           
  3917 ;; *************** function _pinMode *****************
  3918 ;; Defined at:
  3919 ;;		line 54 in file "io.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  pin             2    0[COMRAM] int 
  3922 ;;  type            2    2[COMRAM] int 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;		None
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3934 ;;      Params:         4       0       0       0       0       0       0
  3935 ;;      Locals:         0       0       0       0       0       0       0
  3936 ;;      Temps:          2       0       0       0       0       0       0
  3937 ;;      Totals:         6       0       0       0       0       0       0
  3938 ;;Total ram usage:        6 bytes
  3939 ;; Hardware stack levels used: 1
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_kpInit
  3944 ;;		_lcdInit
  3945 ;;		_soInit
  3946 ;;		_ssdInit
  3947 ;;		_adcInit
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	text26
  3952  000D34                     __ptext26:
  3953                           	callstack 0
  3954  000D34                     _pinMode:
  3955                           	callstack 28
  3956  000D34                     
  3957                           ;io.c: 56:     if(pin <8){
  3958  000D34  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3959  000D36  EFA8  F006         	goto	u1470
  3960  000D3A  5002               	movf	(pinMode@pin+1)^0,w,c
  3961  000D3C  E107               	bnz	u1471
  3962  000D3E  0E08               	movlw	8
  3963  000D40  5C01               	subwf	pinMode@pin^0,w,c
  3964  000D42  B0D8               	btfsc	status,0,c
  3965  000D44  EFA6  F006         	goto	u1471
  3966  000D48  EFA8  F006         	goto	u1470
  3967  000D4C                     u1471:
  3968  000D4C  EFD2  F006         	goto	l1823
  3969  000D50                     u1470:
  3970  000D50                     
  3971                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  3972  000D50  5003               	movf	pinMode@type^0,w,c
  3973  000D52  1004               	iorwf	(pinMode@type+1)^0,w,c
  3974  000D54  B4D8               	btfsc	status,2,c
  3975  000D56  EFAF  F006         	goto	u1481
  3976  000D5A  EFB1  F006         	goto	u1480
  3977  000D5E                     u1481:
  3978  000D5E  EFC1  F006         	goto	l1821
  3979  000D62                     u1480:
  3980  000D62  C001  F005         	movff	pinMode@pin,??_pinMode
  3981  000D66  0E01               	movlw	1
  3982  000D68  6E06               	movwf	(??_pinMode+1)^0,c
  3983  000D6A  2A05               	incf	??_pinMode^0,f,c
  3984  000D6C  EFBA  F006         	goto	u1494
  3985  000D70                     u1495:
  3986  000D70  90D8               	bcf	status,0,c
  3987  000D72  3606               	rlcf	(??_pinMode+1)^0,f,c
  3988  000D74                     u1494:
  3989  000D74  2E05               	decfsz	??_pinMode^0,f,c
  3990  000D76  EFB8  F006         	goto	u1495
  3991  000D7A  5006               	movf	(??_pinMode+1)^0,w,c
  3992  000D7C  1292               	iorwf	146,f,c	;volatile
  3993  000D7E  EFC0  F007         	goto	l186
  3994  000D82                     l1821:
  3995  000D82  C001  F005         	movff	pinMode@pin,??_pinMode
  3996  000D86  0E01               	movlw	1
  3997  000D88  6E06               	movwf	(??_pinMode+1)^0,c
  3998  000D8A  2A05               	incf	??_pinMode^0,f,c
  3999  000D8C  EFCA  F006         	goto	u1504
  4000  000D90                     u1505:
  4001  000D90  90D8               	bcf	status,0,c
  4002  000D92  3606               	rlcf	(??_pinMode+1)^0,f,c
  4003  000D94                     u1504:
  4004  000D94  2E05               	decfsz	??_pinMode^0,f,c
  4005  000D96  EFC8  F006         	goto	u1505
  4006  000D9A  5006               	movf	(??_pinMode+1)^0,w,c
  4007  000D9C  0AFF               	xorlw	255
  4008  000D9E  1692               	andwf	146,f,c	;volatile
  4009  000DA0  EFC0  F007         	goto	l186
  4010  000DA4                     l1823:
  4011  000DA4  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4012  000DA6  EFE0  F006         	goto	u1510
  4013  000DAA  5002               	movf	(pinMode@pin+1)^0,w,c
  4014  000DAC  E107               	bnz	u1511
  4015  000DAE  0E10               	movlw	16
  4016  000DB0  5C01               	subwf	pinMode@pin^0,w,c
  4017  000DB2  B0D8               	btfsc	status,0,c
  4018  000DB4  EFDE  F006         	goto	u1511
  4019  000DB8  EFE0  F006         	goto	u1510
  4020  000DBC                     u1511:
  4021  000DBC  EF0E  F007         	goto	l1831
  4022  000DC0                     u1510:
  4023  000DC0                     
  4024                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  4025  000DC0  5003               	movf	pinMode@type^0,w,c
  4026  000DC2  1004               	iorwf	(pinMode@type+1)^0,w,c
  4027  000DC4  B4D8               	btfsc	status,2,c
  4028  000DC6  EFE7  F006         	goto	u1521
  4029  000DCA  EFE9  F006         	goto	u1520
  4030  000DCE                     u1521:
  4031  000DCE  EFFB  F006         	goto	l1829
  4032  000DD2                     u1520:
  4033  000DD2  C001  F005         	movff	pinMode@pin,??_pinMode
  4034  000DD6  0EF8               	movlw	-8
  4035  000DD8  2605               	addwf	??_pinMode^0,f,c
  4036  000DDA  0E01               	movlw	1
  4037  000DDC  6E06               	movwf	(??_pinMode+1)^0,c
  4038  000DDE  2A05               	incf	??_pinMode^0,f,c
  4039  000DE0  EFF4  F006         	goto	u1534
  4040  000DE4                     u1535:
  4041  000DE4  90D8               	bcf	status,0,c
  4042  000DE6  3606               	rlcf	(??_pinMode+1)^0,f,c
  4043  000DE8                     u1534:
  4044  000DE8  2E05               	decfsz	??_pinMode^0,f,c
  4045  000DEA  EFF2  F006         	goto	u1535
  4046  000DEE  5006               	movf	(??_pinMode+1)^0,w,c
  4047  000DF0  1293               	iorwf	147,f,c	;volatile
  4048  000DF2  EFC0  F007         	goto	l186
  4049  000DF6                     l1829:
  4050  000DF6  C001  F005         	movff	pinMode@pin,??_pinMode
  4051  000DFA  0EF8               	movlw	-8
  4052  000DFC  2605               	addwf	??_pinMode^0,f,c
  4053  000DFE  0E01               	movlw	1
  4054  000E00  6E06               	movwf	(??_pinMode+1)^0,c
  4055  000E02  2A05               	incf	??_pinMode^0,f,c
  4056  000E04  EF06  F007         	goto	u1544
  4057  000E08                     u1545:
  4058  000E08  90D8               	bcf	status,0,c
  4059  000E0A  3606               	rlcf	(??_pinMode+1)^0,f,c
  4060  000E0C                     u1544:
  4061  000E0C  2E05               	decfsz	??_pinMode^0,f,c
  4062  000E0E  EF04  F007         	goto	u1545
  4063  000E12  5006               	movf	(??_pinMode+1)^0,w,c
  4064  000E14  0AFF               	xorlw	255
  4065  000E16  1693               	andwf	147,f,c	;volatile
  4066  000E18  EFC0  F007         	goto	l186
  4067  000E1C                     l1831:
  4068  000E1C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4069  000E1E  EF1C  F007         	goto	u1550
  4070  000E22  5002               	movf	(pinMode@pin+1)^0,w,c
  4071  000E24  E107               	bnz	u1551
  4072  000E26  0E18               	movlw	24
  4073  000E28  5C01               	subwf	pinMode@pin^0,w,c
  4074  000E2A  B0D8               	btfsc	status,0,c
  4075  000E2C  EF1A  F007         	goto	u1551
  4076  000E30  EF1C  F007         	goto	u1550
  4077  000E34                     u1551:
  4078  000E34  EF4A  F007         	goto	l1839
  4079  000E38                     u1550:
  4080  000E38                     
  4081                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  4082  000E38  5003               	movf	pinMode@type^0,w,c
  4083  000E3A  1004               	iorwf	(pinMode@type+1)^0,w,c
  4084  000E3C  B4D8               	btfsc	status,2,c
  4085  000E3E  EF23  F007         	goto	u1561
  4086  000E42  EF25  F007         	goto	u1560
  4087  000E46                     u1561:
  4088  000E46  EF37  F007         	goto	l1837
  4089  000E4A                     u1560:
  4090  000E4A  C001  F005         	movff	pinMode@pin,??_pinMode
  4091  000E4E  0EF0               	movlw	-16
  4092  000E50  2605               	addwf	??_pinMode^0,f,c
  4093  000E52  0E01               	movlw	1
  4094  000E54  6E06               	movwf	(??_pinMode+1)^0,c
  4095  000E56  2A05               	incf	??_pinMode^0,f,c
  4096  000E58  EF30  F007         	goto	u1574
  4097  000E5C                     u1575:
  4098  000E5C  90D8               	bcf	status,0,c
  4099  000E5E  3606               	rlcf	(??_pinMode+1)^0,f,c
  4100  000E60                     u1574:
  4101  000E60  2E05               	decfsz	??_pinMode^0,f,c
  4102  000E62  EF2E  F007         	goto	u1575
  4103  000E66  5006               	movf	(??_pinMode+1)^0,w,c
  4104  000E68  1294               	iorwf	148,f,c	;volatile
  4105  000E6A  EFC0  F007         	goto	l186
  4106  000E6E                     l1837:
  4107  000E6E  C001  F005         	movff	pinMode@pin,??_pinMode
  4108  000E72  0EF0               	movlw	-16
  4109  000E74  2605               	addwf	??_pinMode^0,f,c
  4110  000E76  0E01               	movlw	1
  4111  000E78  6E06               	movwf	(??_pinMode+1)^0,c
  4112  000E7A  2A05               	incf	??_pinMode^0,f,c
  4113  000E7C  EF42  F007         	goto	u1584
  4114  000E80                     u1585:
  4115  000E80  90D8               	bcf	status,0,c
  4116  000E82  3606               	rlcf	(??_pinMode+1)^0,f,c
  4117  000E84                     u1584:
  4118  000E84  2E05               	decfsz	??_pinMode^0,f,c
  4119  000E86  EF40  F007         	goto	u1585
  4120  000E8A  5006               	movf	(??_pinMode+1)^0,w,c
  4121  000E8C  0AFF               	xorlw	255
  4122  000E8E  1694               	andwf	148,f,c	;volatile
  4123  000E90  EFC0  F007         	goto	l186
  4124  000E94                     l1839:
  4125  000E94  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4126  000E96  EF58  F007         	goto	u1590
  4127  000E9A  5002               	movf	(pinMode@pin+1)^0,w,c
  4128  000E9C  E107               	bnz	u1591
  4129  000E9E  0E20               	movlw	32
  4130  000EA0  5C01               	subwf	pinMode@pin^0,w,c
  4131  000EA2  B0D8               	btfsc	status,0,c
  4132  000EA4  EF56  F007         	goto	u1591
  4133  000EA8  EF58  F007         	goto	u1590
  4134  000EAC                     u1591:
  4135  000EAC  EF86  F007         	goto	l1847
  4136  000EB0                     u1590:
  4137  000EB0                     
  4138                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  4139  000EB0  5003               	movf	pinMode@type^0,w,c
  4140  000EB2  1004               	iorwf	(pinMode@type+1)^0,w,c
  4141  000EB4  B4D8               	btfsc	status,2,c
  4142  000EB6  EF5F  F007         	goto	u1601
  4143  000EBA  EF61  F007         	goto	u1600
  4144  000EBE                     u1601:
  4145  000EBE  EF73  F007         	goto	l1845
  4146  000EC2                     u1600:
  4147  000EC2  C001  F005         	movff	pinMode@pin,??_pinMode
  4148  000EC6  0EE8               	movlw	-24
  4149  000EC8  2605               	addwf	??_pinMode^0,f,c
  4150  000ECA  0E01               	movlw	1
  4151  000ECC  6E06               	movwf	(??_pinMode+1)^0,c
  4152  000ECE  2A05               	incf	??_pinMode^0,f,c
  4153  000ED0  EF6C  F007         	goto	u1614
  4154  000ED4                     u1615:
  4155  000ED4  90D8               	bcf	status,0,c
  4156  000ED6  3606               	rlcf	(??_pinMode+1)^0,f,c
  4157  000ED8                     u1614:
  4158  000ED8  2E05               	decfsz	??_pinMode^0,f,c
  4159  000EDA  EF6A  F007         	goto	u1615
  4160  000EDE  5006               	movf	(??_pinMode+1)^0,w,c
  4161  000EE0  1295               	iorwf	149,f,c	;volatile
  4162  000EE2  EFC0  F007         	goto	l186
  4163  000EE6                     l1845:
  4164  000EE6  C001  F005         	movff	pinMode@pin,??_pinMode
  4165  000EEA  0EE8               	movlw	-24
  4166  000EEC  2605               	addwf	??_pinMode^0,f,c
  4167  000EEE  0E01               	movlw	1
  4168  000EF0  6E06               	movwf	(??_pinMode+1)^0,c
  4169  000EF2  2A05               	incf	??_pinMode^0,f,c
  4170  000EF4  EF7E  F007         	goto	u1624
  4171  000EF8                     u1625:
  4172  000EF8  90D8               	bcf	status,0,c
  4173  000EFA  3606               	rlcf	(??_pinMode+1)^0,f,c
  4174  000EFC                     u1624:
  4175  000EFC  2E05               	decfsz	??_pinMode^0,f,c
  4176  000EFE  EF7C  F007         	goto	u1625
  4177  000F02  5006               	movf	(??_pinMode+1)^0,w,c
  4178  000F04  0AFF               	xorlw	255
  4179  000F06  1695               	andwf	149,f,c	;volatile
  4180  000F08  EFC0  F007         	goto	l186
  4181  000F0C                     l1847:
  4182  000F0C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4183  000F0E  EF94  F007         	goto	u1630
  4184  000F12  5002               	movf	(pinMode@pin+1)^0,w,c
  4185  000F14  E107               	bnz	u1631
  4186  000F16  0E28               	movlw	40
  4187  000F18  5C01               	subwf	pinMode@pin^0,w,c
  4188  000F1A  B0D8               	btfsc	status,0,c
  4189  000F1C  EF92  F007         	goto	u1631
  4190  000F20  EF94  F007         	goto	u1630
  4191  000F24                     u1631:
  4192  000F24  EFC0  F007         	goto	l186
  4193  000F28                     u1630:
  4194  000F28                     
  4195                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  4196  000F28  5003               	movf	pinMode@type^0,w,c
  4197  000F2A  1004               	iorwf	(pinMode@type+1)^0,w,c
  4198  000F2C  B4D8               	btfsc	status,2,c
  4199  000F2E  EF9B  F007         	goto	u1641
  4200  000F32  EF9D  F007         	goto	u1640
  4201  000F36                     u1641:
  4202  000F36  EFAF  F007         	goto	l1853
  4203  000F3A                     u1640:
  4204  000F3A  C001  F005         	movff	pinMode@pin,??_pinMode
  4205  000F3E  0EE0               	movlw	-32
  4206  000F40  2605               	addwf	??_pinMode^0,f,c
  4207  000F42  0E01               	movlw	1
  4208  000F44  6E06               	movwf	(??_pinMode+1)^0,c
  4209  000F46  2A05               	incf	??_pinMode^0,f,c
  4210  000F48  EFA8  F007         	goto	u1654
  4211  000F4C                     u1655:
  4212  000F4C  90D8               	bcf	status,0,c
  4213  000F4E  3606               	rlcf	(??_pinMode+1)^0,f,c
  4214  000F50                     u1654:
  4215  000F50  2E05               	decfsz	??_pinMode^0,f,c
  4216  000F52  EFA6  F007         	goto	u1655
  4217  000F56  5006               	movf	(??_pinMode+1)^0,w,c
  4218  000F58  1296               	iorwf	150,f,c	;volatile
  4219  000F5A  EFC0  F007         	goto	l186
  4220  000F5E                     l1853:
  4221  000F5E  C001  F005         	movff	pinMode@pin,??_pinMode
  4222  000F62  0EE0               	movlw	-32
  4223  000F64  2605               	addwf	??_pinMode^0,f,c
  4224  000F66  0E01               	movlw	1
  4225  000F68  6E06               	movwf	(??_pinMode+1)^0,c
  4226  000F6A  2A05               	incf	??_pinMode^0,f,c
  4227  000F6C  EFBA  F007         	goto	u1664
  4228  000F70                     u1665:
  4229  000F70  90D8               	bcf	status,0,c
  4230  000F72  3606               	rlcf	(??_pinMode+1)^0,f,c
  4231  000F74                     u1664:
  4232  000F74  2E05               	decfsz	??_pinMode^0,f,c
  4233  000F76  EFB8  F007         	goto	u1665
  4234  000F7A  5006               	movf	(??_pinMode+1)^0,w,c
  4235  000F7C  0AFF               	xorlw	255
  4236  000F7E  1696               	andwf	150,f,c	;volatile
  4237  000F80                     l186:
  4238  000F80  0012               	return		;funcret
  4239  000F82                     __end_of_pinMode:
  4240                           	callstack 0
  4241                           
  4242 ;; *************** function _kpDebounce *****************
  4243 ;; Defined at:
  4244 ;;		line 27 in file "keypad.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;		None
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  i               2   12[COMRAM] int 
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  1    wreg      void 
  4251 ;; Registers used:
  4252 ;;		wreg, status,2, status,0, cstack
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4258 ;;      Params:         0       0       0       0       0       0       0
  4259 ;;      Locals:         2       0       0       0       0       0       0
  4260 ;;      Temps:          3       0       0       0       0       0       0
  4261 ;;      Totals:         5       0       0       0       0       0       0
  4262 ;;Total ram usage:        5 bytes
  4263 ;; Hardware stack levels used: 1
  4264 ;; Hardware stack levels required when called: 3
  4265 ;; This function calls:
  4266 ;;		_digitalRead
  4267 ;;		_soWrite
  4268 ;; This function is called by:
  4269 ;;		_main
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text27
  4274  0014A6                     __ptext27:
  4275                           	callstack 0
  4276  0014A6                     _kpDebounce:
  4277                           	callstack 27
  4278  0014A6                     
  4279                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  4280  0014A6  0E00               	movlw	0
  4281  0014A8  6E2A               	movwf	(kpDebounce@newRead+1)^0,c
  4282  0014AA  0E00               	movlw	0
  4283  0014AC  6E29               	movwf	kpDebounce@newRead^0,c
  4284                           
  4285                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  4286  0014AE  0E00               	movlw	0
  4287  0014B0  6E0E               	movwf	(kpDebounce@i+1)^0,c
  4288  0014B2  0E00               	movlw	0
  4289  0014B4  6E0D               	movwf	kpDebounce@i^0,c
  4290  0014B6                     l2203:
  4291  0014B6  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  4292  0014B8  EF67  F00A         	goto	u2111
  4293  0014BC  500E               	movf	(kpDebounce@i+1)^0,w,c
  4294  0014BE  E109               	bnz	u2110
  4295  0014C0  0E05               	movlw	5
  4296  0014C2  5C0D               	subwf	kpDebounce@i^0,w,c
  4297  0014C4  A0D8               	btfss	status,0,c
  4298  0014C6  EF67  F00A         	goto	u2111
  4299  0014CA  EF69  F00A         	goto	u2110
  4300  0014CE                     u2111:
  4301  0014CE  EF6B  F00A         	goto	l2207
  4302  0014D2                     u2110:
  4303  0014D2  EFCC  F00A         	goto	l2219
  4304  0014D6                     l2207:
  4305                           
  4306                           ;keypad.c: 35:       soWrite(1<<(i+3));
  4307  0014D6  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  4308  0014DA  0E03               	movlw	3
  4309  0014DC  260A               	addwf	??_kpDebounce^0,f,c
  4310  0014DE  0E01               	movlw	1
  4311  0014E0  6E0B               	movwf	(??_kpDebounce+1)^0,c
  4312  0014E2  0E00               	movlw	0
  4313  0014E4  6E0C               	movwf	(??_kpDebounce+2)^0,c
  4314  0014E6  2A0A               	incf	??_kpDebounce^0,f,c
  4315  0014E8  EF79  F00A         	goto	u2124
  4316  0014EC                     u2125:
  4317  0014EC  90D8               	bcf	status,0,c
  4318  0014EE  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  4319  0014F0  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  4320  0014F2                     u2124:
  4321  0014F2  2E0A               	decfsz	??_kpDebounce^0,f,c
  4322  0014F4  EF76  F00A         	goto	u2125
  4323  0014F8  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  4324  0014FC  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  4325  001500  EC63  F00E         	call	_soWrite	;wreg free
  4326                           
  4327                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  4328  001504  0E00               	movlw	0
  4329  001506  6E02               	movwf	(digitalRead@pin+1)^0,c
  4330  001508  0E0A               	movlw	10
  4331  00150A  6E01               	movwf	digitalRead@pin^0,c
  4332  00150C  EC9E  F009         	call	_digitalRead	;wreg free
  4333  001510  5001               	movf	?_digitalRead^0,w,c
  4334  001512  1002               	iorwf	(?_digitalRead+1)^0,w,c
  4335  001514  B4D8               	btfsc	status,2,c
  4336  001516  EF8F  F00A         	goto	u2131
  4337  00151A  EF91  F00A         	goto	u2130
  4338  00151E                     u2131:
  4339  00151E  EFA4  F00A         	goto	l2211
  4340  001522                     u2130:
  4341  001522                     
  4342                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  4343  001522  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  4344  001526  0E01               	movlw	1
  4345  001528  6E0B               	movwf	(??_kpDebounce+1)^0,c
  4346  00152A  0E00               	movlw	0
  4347  00152C  6E0C               	movwf	(??_kpDebounce+2)^0,c
  4348  00152E  2A0A               	incf	??_kpDebounce^0,f,c
  4349  001530  EF9D  F00A         	goto	u2144
  4350  001534                     u2145:
  4351  001534  90D8               	bcf	status,0,c
  4352  001536  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  4353  001538  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  4354  00153A                     u2144:
  4355  00153A  2E0A               	decfsz	??_kpDebounce^0,f,c
  4356  00153C  EF9A  F00A         	goto	u2145
  4357  001540  500B               	movf	(??_kpDebounce+1)^0,w,c
  4358  001542  1229               	iorwf	kpDebounce@newRead^0,f,c
  4359  001544  500C               	movf	(??_kpDebounce+2)^0,w,c
  4360  001546  122A               	iorwf	(kpDebounce@newRead+1)^0,f,c
  4361  001548                     l2211:
  4362                           
  4363                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  4364  001548  0E00               	movlw	0
  4365  00154A  6E02               	movwf	(digitalRead@pin+1)^0,c
  4366  00154C  0E09               	movlw	9
  4367  00154E  6E01               	movwf	digitalRead@pin^0,c
  4368  001550  EC9E  F009         	call	_digitalRead	;wreg free
  4369  001554  5001               	movf	?_digitalRead^0,w,c
  4370  001556  1002               	iorwf	(?_digitalRead+1)^0,w,c
  4371  001558  B4D8               	btfsc	status,2,c
  4372  00155A  EFB1  F00A         	goto	u2151
  4373  00155E  EFB3  F00A         	goto	u2150
  4374  001562                     u2151:
  4375  001562  EFC8  F00A         	goto	l2215
  4376  001566                     u2150:
  4377  001566                     
  4378                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  4379  001566  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  4380  00156A  0E05               	movlw	5
  4381  00156C  260A               	addwf	??_kpDebounce^0,f,c
  4382  00156E  0E01               	movlw	1
  4383  001570  6E0B               	movwf	(??_kpDebounce+1)^0,c
  4384  001572  0E00               	movlw	0
  4385  001574  6E0C               	movwf	(??_kpDebounce+2)^0,c
  4386  001576  2A0A               	incf	??_kpDebounce^0,f,c
  4387  001578  EFC1  F00A         	goto	u2164
  4388  00157C                     u2165:
  4389  00157C  90D8               	bcf	status,0,c
  4390  00157E  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  4391  001580  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  4392  001582                     u2164:
  4393  001582  2E0A               	decfsz	??_kpDebounce^0,f,c
  4394  001584  EFBE  F00A         	goto	u2165
  4395  001588  500B               	movf	(??_kpDebounce+1)^0,w,c
  4396  00158A  1229               	iorwf	kpDebounce@newRead^0,f,c
  4397  00158C  500C               	movf	(??_kpDebounce+2)^0,w,c
  4398  00158E  122A               	iorwf	(kpDebounce@newRead+1)^0,f,c
  4399  001590                     l2215:
  4400                           
  4401                           ;keypad.c: 42:     }
  4402  001590  4A0D               	infsnz	kpDebounce@i^0,f,c
  4403  001592  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  4404  001594  EF5B  F00A         	goto	l2203
  4405  001598                     l2219:
  4406                           
  4407                           ;keypad.c: 43:     if (oldRead == newRead) {
  4408  001598  5029               	movf	kpDebounce@newRead^0,w,c
  4409  00159A  1827               	xorwf	kpDebounce@oldRead^0,w,c
  4410  00159C  E107               	bnz	u2171
  4411  00159E  502A               	movf	(kpDebounce@newRead+1)^0,w,c
  4412  0015A0  1828               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  4413  0015A2  A4D8               	btfss	status,2,c
  4414  0015A4  EFD6  F00A         	goto	u2171
  4415  0015A8  EFD8  F00A         	goto	u2170
  4416  0015AC                     u2171:
  4417  0015AC  EFDB  F00A         	goto	l2223
  4418  0015B0                     u2170:
  4419  0015B0                     
  4420                           ;keypad.c: 44:         tempo--;
  4421  0015B0  0632               	decf	kpDebounce@tempo^0,f,c
  4422                           
  4423                           ;keypad.c: 45:     } else {
  4424  0015B2  EFE1  F00A         	goto	l223
  4425  0015B6                     l2223:
  4426                           
  4427                           ;keypad.c: 46:         tempo = 1;
  4428  0015B6  0E01               	movlw	1
  4429  0015B8  6E32               	movwf	kpDebounce@tempo^0,c
  4430  0015BA                     
  4431                           ;keypad.c: 47:         oldRead = newRead;
  4432  0015BA  C029  F027         	movff	kpDebounce@newRead,kpDebounce@oldRead
  4433  0015BE  C02A  F028         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  4434  0015C2                     l223:
  4435                           
  4436                           ;keypad.c: 49:     if (tempo == 0) {
  4437  0015C2  5032               	movf	kpDebounce@tempo^0,w,c
  4438  0015C4  A4D8               	btfss	status,2,c
  4439  0015C6  EFE7  F00A         	goto	u2181
  4440  0015CA  EFE9  F00A         	goto	u2180
  4441  0015CE                     u2181:
  4442  0015CE  EFED  F00A         	goto	l225
  4443  0015D2                     u2180:
  4444  0015D2                     
  4445                           ;keypad.c: 50:         keys = oldRead;
  4446  0015D2  C027  F02B         	movff	kpDebounce@oldRead,_keys
  4447  0015D6  C028  F02C         	movff	kpDebounce@oldRead+1,_keys+1
  4448  0015DA                     l225:
  4449  0015DA  0012               	return		;funcret
  4450  0015DC                     __end_of_kpDebounce:
  4451                           	callstack 0
  4452                           
  4453 ;; *************** function _soWrite *****************
  4454 ;; Defined at:
  4455 ;;		line 18 in file "so.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  value           2    6[COMRAM] int 
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;  i               1    8[COMRAM] unsigned char 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg, status,2, status,0, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4469 ;;      Params:         2       0       0       0       0       0       0
  4470 ;;      Locals:         1       0       0       0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0       0       0
  4472 ;;      Totals:         3       0       0       0       0       0       0
  4473 ;;Total ram usage:        3 bytes
  4474 ;; Hardware stack levels used: 1
  4475 ;; Hardware stack levels required when called: 2
  4476 ;; This function calls:
  4477 ;;		_PulseClockData
  4478 ;;		_PulseEnClock
  4479 ;;		_digitalWrite
  4480 ;; This function is called by:
  4481 ;;		_kpDebounce
  4482 ;;		_pushNibble
  4483 ;;		_pushByte
  4484 ;;		_ssdUpdate
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text28
  4489  001CC6                     __ptext28:
  4490                           	callstack 0
  4491  001CC6                     _soWrite:
  4492                           	callstack 27
  4493  001CC6                     
  4494                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  4495  001CC6  0E00               	movlw	0
  4496  001CC8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4497  001CCA  0E08               	movlw	8
  4498  001CCC  6E01               	movwf	digitalWrite@pin^0,c
  4499  001CCE  0E00               	movlw	0
  4500  001CD0  6E04               	movwf	(digitalWrite@value+1)^0,c
  4501  001CD2  0E00               	movlw	0
  4502  001CD4  6E03               	movwf	digitalWrite@value^0,c
  4503  001CD6  ECC1  F007         	call	_digitalWrite	;wreg free
  4504  001CDA                     
  4505                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  4506  001CDA  0E00               	movlw	0
  4507  001CDC  6E09               	movwf	soWrite@i^0,c
  4508  001CDE                     l1799:
  4509                           
  4510                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  4511  001CDE  0E00               	movlw	0
  4512  001CE0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4513  001CE2  0E1E               	movlw	30
  4514  001CE4  6E01               	movwf	digitalWrite@pin^0,c
  4515  001CE6  0E80               	movlw	128
  4516  001CE8  1407               	andwf	soWrite@value^0,w,c
  4517  001CEA  6E03               	movwf	digitalWrite@value^0,c
  4518  001CEC  6A04               	clrf	(digitalWrite@value+1)^0,c
  4519  001CEE  ECC1  F007         	call	_digitalWrite	;wreg free
  4520                           
  4521                           ;so.c: 23:   PulseClockData();
  4522  001CF2  EC2D  F00F         	call	_PulseClockData	;wreg free
  4523  001CF6                     
  4524                           ;so.c: 24:   value <<= 1;
  4525  001CF6  90D8               	bcf	status,0,c
  4526  001CF8  3607               	rlcf	soWrite@value^0,f,c
  4527  001CFA  3608               	rlcf	(soWrite@value+1)^0,f,c
  4528  001CFC                     
  4529                           ;so.c: 25:  }
  4530  001CFC  2A09               	incf	soWrite@i^0,f,c
  4531  001CFE  0E07               	movlw	7
  4532  001D00  6409               	cpfsgt	soWrite@i^0,c
  4533  001D02  EF85  F00E         	goto	u1461
  4534  001D06  EF87  F00E         	goto	u1460
  4535  001D0A                     u1461:
  4536  001D0A  EF6F  F00E         	goto	l1799
  4537  001D0E                     u1460:
  4538  001D0E                     
  4539                           ;so.c: 26:  PulseEnClock();
  4540  001D0E  EC18  F00F         	call	_PulseEnClock	;wreg free
  4541  001D12  0012               	return		;funcret
  4542  001D14                     __end_of_soWrite:
  4543                           	callstack 0
  4544                           
  4545 ;; *************** function _PulseEnClock *****************
  4546 ;; Defined at:
  4547 ;;		line 9 in file "so.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;		None
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4561 ;;      Params:         0       0       0       0       0       0       0
  4562 ;;      Locals:         0       0       0       0       0       0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0
  4564 ;;      Totals:         0       0       0       0       0       0       0
  4565 ;;Total ram usage:        0 bytes
  4566 ;; Hardware stack levels used: 1
  4567 ;; Hardware stack levels required when called: 1
  4568 ;; This function calls:
  4569 ;;		_digitalWrite
  4570 ;; This function is called by:
  4571 ;;		_soWrite
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text29
  4576  001E30                     __ptext29:
  4577                           	callstack 0
  4578  001E30                     _PulseEnClock:
  4579                           	callstack 27
  4580  001E30                     
  4581                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  4582  001E30  0E00               	movlw	0
  4583  001E32  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4584  001E34  0E1F               	movlw	31
  4585  001E36  6E01               	movwf	digitalWrite@pin^0,c
  4586  001E38  0E00               	movlw	0
  4587  001E3A  6E04               	movwf	(digitalWrite@value+1)^0,c
  4588  001E3C  0E01               	movlw	1
  4589  001E3E  6E03               	movwf	digitalWrite@value^0,c
  4590  001E40  ECC1  F007         	call	_digitalWrite	;wreg free
  4591                           
  4592                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  4593  001E44  0E00               	movlw	0
  4594  001E46  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4595  001E48  0E1F               	movlw	31
  4596  001E4A  6E01               	movwf	digitalWrite@pin^0,c
  4597  001E4C  0E00               	movlw	0
  4598  001E4E  6E04               	movwf	(digitalWrite@value+1)^0,c
  4599  001E50  0E00               	movlw	0
  4600  001E52  6E03               	movwf	digitalWrite@value^0,c
  4601  001E54  ECC1  F007         	call	_digitalWrite	;wreg free
  4602  001E58  0012               	return		;funcret
  4603  001E5A                     __end_of_PulseEnClock:
  4604                           	callstack 0
  4605                           
  4606 ;; *************** function _PulseClockData *****************
  4607 ;; Defined at:
  4608 ;;		line 14 in file "so.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;		None
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;		None
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  1    wreg      void 
  4615 ;; Registers used:
  4616 ;;		wreg, status,2, status,0, cstack
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4622 ;;      Params:         0       0       0       0       0       0       0
  4623 ;;      Locals:         0       0       0       0       0       0       0
  4624 ;;      Temps:          0       0       0       0       0       0       0
  4625 ;;      Totals:         0       0       0       0       0       0       0
  4626 ;;Total ram usage:        0 bytes
  4627 ;; Hardware stack levels used: 1
  4628 ;; Hardware stack levels required when called: 1
  4629 ;; This function calls:
  4630 ;;		_digitalWrite
  4631 ;; This function is called by:
  4632 ;;		_soWrite
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           	psect	text30
  4637  001E5A                     __ptext30:
  4638                           	callstack 0
  4639  001E5A                     _PulseClockData:
  4640                           	callstack 27
  4641  001E5A                     
  4642                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  4643  001E5A  0E00               	movlw	0
  4644  001E5C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4645  001E5E  0E08               	movlw	8
  4646  001E60  6E01               	movwf	digitalWrite@pin^0,c
  4647  001E62  0E00               	movlw	0
  4648  001E64  6E04               	movwf	(digitalWrite@value+1)^0,c
  4649  001E66  0E01               	movlw	1
  4650  001E68  6E03               	movwf	digitalWrite@value^0,c
  4651  001E6A  ECC1  F007         	call	_digitalWrite	;wreg free
  4652                           
  4653                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  4654  001E6E  0E00               	movlw	0
  4655  001E70  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4656  001E72  0E08               	movlw	8
  4657  001E74  6E01               	movwf	digitalWrite@pin^0,c
  4658  001E76  0E00               	movlw	0
  4659  001E78  6E04               	movwf	(digitalWrite@value+1)^0,c
  4660  001E7A  0E00               	movlw	0
  4661  001E7C  6E03               	movwf	digitalWrite@value^0,c
  4662  001E7E  ECC1  F007         	call	_digitalWrite	;wreg free
  4663  001E82  0012               	return		;funcret
  4664  001E84                     __end_of_PulseClockData:
  4665                           	callstack 0
  4666                           
  4667 ;; *************** function _digitalWrite *****************
  4668 ;; Defined at:
  4669 ;;		line 14 in file "io.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  pin             2    0[COMRAM] int 
  4672 ;;  value           2    2[COMRAM] int 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;		None
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		wreg, status,2, status,0
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4684 ;;      Params:         4       0       0       0       0       0       0
  4685 ;;      Locals:         0       0       0       0       0       0       0
  4686 ;;      Temps:          2       0       0       0       0       0       0
  4687 ;;      Totals:         6       0       0       0       0       0       0
  4688 ;;Total ram usage:        6 bytes
  4689 ;; Hardware stack levels used: 1
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_pulseEnablePin
  4694 ;;		_pushNibble
  4695 ;;		_pushByte
  4696 ;;		_PulseEnClock
  4697 ;;		_PulseClockData
  4698 ;;		_soWrite
  4699 ;;		_ssdUpdate
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text31
  4704  000F82                     __ptext31:
  4705                           	callstack 0
  4706  000F82                     _digitalWrite:
  4707                           	callstack 28
  4708  000F82                     
  4709                           ;io.c: 16:     if(pin <8){
  4710  000F82  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4711  000F84  EFCF  F007         	goto	u1260
  4712  000F88  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4713  000F8A  E107               	bnz	u1261
  4714  000F8C  0E08               	movlw	8
  4715  000F8E  5C01               	subwf	digitalWrite@pin^0,w,c
  4716  000F90  B0D8               	btfsc	status,0,c
  4717  000F92  EFCD  F007         	goto	u1261
  4718  000F96  EFCF  F007         	goto	u1260
  4719  000F9A                     u1261:
  4720  000F9A  EFF9  F007         	goto	l1755
  4721  000F9E                     u1260:
  4722  000F9E                     
  4723                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  4724  000F9E  5003               	movf	digitalWrite@value^0,w,c
  4725  000FA0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4726  000FA2  B4D8               	btfsc	status,2,c
  4727  000FA4  EFD6  F007         	goto	u1271
  4728  000FA8  EFD8  F007         	goto	u1270
  4729  000FAC                     u1271:
  4730  000FAC  EFE8  F007         	goto	l1753
  4731  000FB0                     u1270:
  4732  000FB0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4733  000FB4  0E01               	movlw	1
  4734  000FB6  6E06               	movwf	(??_digitalWrite+1)^0,c
  4735  000FB8  2A05               	incf	??_digitalWrite^0,f,c
  4736  000FBA  EFE1  F007         	goto	u1284
  4737  000FBE                     u1285:
  4738  000FBE  90D8               	bcf	status,0,c
  4739  000FC0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4740  000FC2                     u1284:
  4741  000FC2  2E05               	decfsz	??_digitalWrite^0,f,c
  4742  000FC4  EFDF  F007         	goto	u1285
  4743  000FC8  5006               	movf	(??_digitalWrite+1)^0,w,c
  4744  000FCA  1280               	iorwf	128,f,c	;volatile
  4745  000FCC  EFE7  F008         	goto	l152
  4746  000FD0                     l1753:
  4747  000FD0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4748  000FD4  0E01               	movlw	1
  4749  000FD6  6E06               	movwf	(??_digitalWrite+1)^0,c
  4750  000FD8  2A05               	incf	??_digitalWrite^0,f,c
  4751  000FDA  EFF1  F007         	goto	u1294
  4752  000FDE                     u1295:
  4753  000FDE  90D8               	bcf	status,0,c
  4754  000FE0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4755  000FE2                     u1294:
  4756  000FE2  2E05               	decfsz	??_digitalWrite^0,f,c
  4757  000FE4  EFEF  F007         	goto	u1295
  4758  000FE8  5006               	movf	(??_digitalWrite+1)^0,w,c
  4759  000FEA  0AFF               	xorlw	255
  4760  000FEC  1680               	andwf	128,f,c	;volatile
  4761  000FEE  EFE7  F008         	goto	l152
  4762  000FF2                     l1755:
  4763  000FF2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4764  000FF4  EF07  F008         	goto	u1300
  4765  000FF8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4766  000FFA  E107               	bnz	u1301
  4767  000FFC  0E10               	movlw	16
  4768  000FFE  5C01               	subwf	digitalWrite@pin^0,w,c
  4769  001000  B0D8               	btfsc	status,0,c
  4770  001002  EF05  F008         	goto	u1301
  4771  001006  EF07  F008         	goto	u1300
  4772  00100A                     u1301:
  4773  00100A  EF35  F008         	goto	l1763
  4774  00100E                     u1300:
  4775  00100E                     
  4776                           ;io.c: 20:         pin -=8;
  4777  00100E  0EF8               	movlw	248
  4778  001010  2601               	addwf	digitalWrite@pin^0,f,c
  4779  001012  0EFF               	movlw	255
  4780  001014  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4781                           
  4782                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  4783  001016  5003               	movf	digitalWrite@value^0,w,c
  4784  001018  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4785  00101A  B4D8               	btfsc	status,2,c
  4786  00101C  EF12  F008         	goto	u1311
  4787  001020  EF14  F008         	goto	u1310
  4788  001024                     u1311:
  4789  001024  EF24  F008         	goto	l1761
  4790  001028                     u1310:
  4791  001028  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4792  00102C  0E01               	movlw	1
  4793  00102E  6E06               	movwf	(??_digitalWrite+1)^0,c
  4794  001030  2A05               	incf	??_digitalWrite^0,f,c
  4795  001032  EF1D  F008         	goto	u1324
  4796  001036                     u1325:
  4797  001036  90D8               	bcf	status,0,c
  4798  001038  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4799  00103A                     u1324:
  4800  00103A  2E05               	decfsz	??_digitalWrite^0,f,c
  4801  00103C  EF1B  F008         	goto	u1325
  4802  001040  5006               	movf	(??_digitalWrite+1)^0,w,c
  4803  001042  1281               	iorwf	129,f,c	;volatile
  4804  001044  EFE7  F008         	goto	l152
  4805  001048                     l1761:
  4806  001048  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4807  00104C  0E01               	movlw	1
  4808  00104E  6E06               	movwf	(??_digitalWrite+1)^0,c
  4809  001050  2A05               	incf	??_digitalWrite^0,f,c
  4810  001052  EF2D  F008         	goto	u1334
  4811  001056                     u1335:
  4812  001056  90D8               	bcf	status,0,c
  4813  001058  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4814  00105A                     u1334:
  4815  00105A  2E05               	decfsz	??_digitalWrite^0,f,c
  4816  00105C  EF2B  F008         	goto	u1335
  4817  001060  5006               	movf	(??_digitalWrite+1)^0,w,c
  4818  001062  0AFF               	xorlw	255
  4819  001064  1681               	andwf	129,f,c	;volatile
  4820  001066  EFE7  F008         	goto	l152
  4821  00106A                     l1763:
  4822  00106A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4823  00106C  EF43  F008         	goto	u1340
  4824  001070  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4825  001072  E107               	bnz	u1341
  4826  001074  0E18               	movlw	24
  4827  001076  5C01               	subwf	digitalWrite@pin^0,w,c
  4828  001078  B0D8               	btfsc	status,0,c
  4829  00107A  EF41  F008         	goto	u1341
  4830  00107E  EF43  F008         	goto	u1340
  4831  001082                     u1341:
  4832  001082  EF71  F008         	goto	l1771
  4833  001086                     u1340:
  4834  001086                     
  4835                           ;io.c: 24:         pin -=16;
  4836  001086  0EF0               	movlw	240
  4837  001088  2601               	addwf	digitalWrite@pin^0,f,c
  4838  00108A  0EFF               	movlw	255
  4839  00108C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4840                           
  4841                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4842  00108E  5003               	movf	digitalWrite@value^0,w,c
  4843  001090  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4844  001092  B4D8               	btfsc	status,2,c
  4845  001094  EF4E  F008         	goto	u1351
  4846  001098  EF50  F008         	goto	u1350
  4847  00109C                     u1351:
  4848  00109C  EF60  F008         	goto	l1769
  4849  0010A0                     u1350:
  4850  0010A0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4851  0010A4  0E01               	movlw	1
  4852  0010A6  6E06               	movwf	(??_digitalWrite+1)^0,c
  4853  0010A8  2A05               	incf	??_digitalWrite^0,f,c
  4854  0010AA  EF59  F008         	goto	u1364
  4855  0010AE                     u1365:
  4856  0010AE  90D8               	bcf	status,0,c
  4857  0010B0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4858  0010B2                     u1364:
  4859  0010B2  2E05               	decfsz	??_digitalWrite^0,f,c
  4860  0010B4  EF57  F008         	goto	u1365
  4861  0010B8  5006               	movf	(??_digitalWrite+1)^0,w,c
  4862  0010BA  1282               	iorwf	130,f,c	;volatile
  4863  0010BC  EFE7  F008         	goto	l152
  4864  0010C0                     l1769:
  4865  0010C0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4866  0010C4  0E01               	movlw	1
  4867  0010C6  6E06               	movwf	(??_digitalWrite+1)^0,c
  4868  0010C8  2A05               	incf	??_digitalWrite^0,f,c
  4869  0010CA  EF69  F008         	goto	u1374
  4870  0010CE                     u1375:
  4871  0010CE  90D8               	bcf	status,0,c
  4872  0010D0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4873  0010D2                     u1374:
  4874  0010D2  2E05               	decfsz	??_digitalWrite^0,f,c
  4875  0010D4  EF67  F008         	goto	u1375
  4876  0010D8  5006               	movf	(??_digitalWrite+1)^0,w,c
  4877  0010DA  0AFF               	xorlw	255
  4878  0010DC  1682               	andwf	130,f,c	;volatile
  4879  0010DE  EFE7  F008         	goto	l152
  4880  0010E2                     l1771:
  4881  0010E2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4882  0010E4  EF7F  F008         	goto	u1380
  4883  0010E8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4884  0010EA  E107               	bnz	u1381
  4885  0010EC  0E20               	movlw	32
  4886  0010EE  5C01               	subwf	digitalWrite@pin^0,w,c
  4887  0010F0  B0D8               	btfsc	status,0,c
  4888  0010F2  EF7D  F008         	goto	u1381
  4889  0010F6  EF7F  F008         	goto	u1380
  4890  0010FA                     u1381:
  4891  0010FA  EFAD  F008         	goto	l1779
  4892  0010FE                     u1380:
  4893  0010FE                     
  4894                           ;io.c: 28:         pin -=24;
  4895  0010FE  0EE8               	movlw	232
  4896  001100  2601               	addwf	digitalWrite@pin^0,f,c
  4897  001102  0EFF               	movlw	255
  4898  001104  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4899                           
  4900                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4901  001106  5003               	movf	digitalWrite@value^0,w,c
  4902  001108  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4903  00110A  B4D8               	btfsc	status,2,c
  4904  00110C  EF8A  F008         	goto	u1391
  4905  001110  EF8C  F008         	goto	u1390
  4906  001114                     u1391:
  4907  001114  EF9C  F008         	goto	l1777
  4908  001118                     u1390:
  4909  001118  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4910  00111C  0E01               	movlw	1
  4911  00111E  6E06               	movwf	(??_digitalWrite+1)^0,c
  4912  001120  2A05               	incf	??_digitalWrite^0,f,c
  4913  001122  EF95  F008         	goto	u1404
  4914  001126                     u1405:
  4915  001126  90D8               	bcf	status,0,c
  4916  001128  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4917  00112A                     u1404:
  4918  00112A  2E05               	decfsz	??_digitalWrite^0,f,c
  4919  00112C  EF93  F008         	goto	u1405
  4920  001130  5006               	movf	(??_digitalWrite+1)^0,w,c
  4921  001132  1283               	iorwf	131,f,c	;volatile
  4922  001134  EFE7  F008         	goto	l152
  4923  001138                     l1777:
  4924  001138  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4925  00113C  0E01               	movlw	1
  4926  00113E  6E06               	movwf	(??_digitalWrite+1)^0,c
  4927  001140  2A05               	incf	??_digitalWrite^0,f,c
  4928  001142  EFA5  F008         	goto	u1414
  4929  001146                     u1415:
  4930  001146  90D8               	bcf	status,0,c
  4931  001148  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4932  00114A                     u1414:
  4933  00114A  2E05               	decfsz	??_digitalWrite^0,f,c
  4934  00114C  EFA3  F008         	goto	u1415
  4935  001150  5006               	movf	(??_digitalWrite+1)^0,w,c
  4936  001152  0AFF               	xorlw	255
  4937  001154  1683               	andwf	131,f,c	;volatile
  4938  001156  EFE7  F008         	goto	l152
  4939  00115A                     l1779:
  4940  00115A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4941  00115C  EFBB  F008         	goto	u1420
  4942  001160  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4943  001162  E107               	bnz	u1421
  4944  001164  0E28               	movlw	40
  4945  001166  5C01               	subwf	digitalWrite@pin^0,w,c
  4946  001168  B0D8               	btfsc	status,0,c
  4947  00116A  EFB9  F008         	goto	u1421
  4948  00116E  EFBB  F008         	goto	u1420
  4949  001172                     u1421:
  4950  001172  EFE7  F008         	goto	l152
  4951  001176                     u1420:
  4952  001176                     
  4953                           ;io.c: 32:         pin -=32;
  4954  001176  0EE0               	movlw	224
  4955  001178  2601               	addwf	digitalWrite@pin^0,f,c
  4956  00117A  0EFF               	movlw	255
  4957  00117C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4958                           
  4959                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4960  00117E  5003               	movf	digitalWrite@value^0,w,c
  4961  001180  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4962  001182  B4D8               	btfsc	status,2,c
  4963  001184  EFC6  F008         	goto	u1431
  4964  001188  EFC8  F008         	goto	u1430
  4965  00118C                     u1431:
  4966  00118C  EFD8  F008         	goto	l1785
  4967  001190                     u1430:
  4968  001190  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4969  001194  0E01               	movlw	1
  4970  001196  6E06               	movwf	(??_digitalWrite+1)^0,c
  4971  001198  2A05               	incf	??_digitalWrite^0,f,c
  4972  00119A  EFD1  F008         	goto	u1444
  4973  00119E                     u1445:
  4974  00119E  90D8               	bcf	status,0,c
  4975  0011A0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4976  0011A2                     u1444:
  4977  0011A2  2E05               	decfsz	??_digitalWrite^0,f,c
  4978  0011A4  EFCF  F008         	goto	u1445
  4979  0011A8  5006               	movf	(??_digitalWrite+1)^0,w,c
  4980  0011AA  1284               	iorwf	132,f,c	;volatile
  4981  0011AC  EFE7  F008         	goto	l152
  4982  0011B0                     l1785:
  4983  0011B0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4984  0011B4  0E01               	movlw	1
  4985  0011B6  6E06               	movwf	(??_digitalWrite+1)^0,c
  4986  0011B8  2A05               	incf	??_digitalWrite^0,f,c
  4987  0011BA  EFE1  F008         	goto	u1454
  4988  0011BE                     u1455:
  4989  0011BE  90D8               	bcf	status,0,c
  4990  0011C0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4991  0011C2                     u1454:
  4992  0011C2  2E05               	decfsz	??_digitalWrite^0,f,c
  4993  0011C4  EFDF  F008         	goto	u1455
  4994  0011C8  5006               	movf	(??_digitalWrite+1)^0,w,c
  4995  0011CA  0AFF               	xorlw	255
  4996  0011CC  1684               	andwf	132,f,c	;volatile
  4997  0011CE                     l152:
  4998  0011CE  0012               	return		;funcret
  4999  0011D0                     __end_of_digitalWrite:
  5000                           	callstack 0
  5001                           
  5002 ;; *************** function _digitalRead *****************
  5003 ;; Defined at:
  5004 ;;		line 39 in file "io.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  pin             2    0[COMRAM] int 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  2    0[COMRAM] int 
  5011 ;; Registers used:
  5012 ;;		wreg, status,2, status,0
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5018 ;;      Params:         2       0       0       0       0       0       0
  5019 ;;      Locals:         0       0       0       0       0       0       0
  5020 ;;      Temps:          3       0       0       0       0       0       0
  5021 ;;      Totals:         5       0       0       0       0       0       0
  5022 ;;Total ram usage:        5 bytes
  5023 ;; Hardware stack levels used: 1
  5024 ;; This function calls:
  5025 ;;		Nothing
  5026 ;; This function is called by:
  5027 ;;		_kpDebounce
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           	psect	text32
  5032  00133C                     __ptext32:
  5033                           	callstack 0
  5034  00133C                     _digitalRead:
  5035                           	callstack 29
  5036  00133C                     
  5037                           ;io.c: 40:     if(pin <8){
  5038  00133C  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5039  00133E  EFAC  F009         	goto	u1740
  5040  001342  5002               	movf	(digitalRead@pin+1)^0,w,c
  5041  001344  E107               	bnz	u1741
  5042  001346  0E08               	movlw	8
  5043  001348  5C01               	subwf	digitalRead@pin^0,w,c
  5044  00134A  B0D8               	btfsc	status,0,c
  5045  00134C  EFAA  F009         	goto	u1741
  5046  001350  EFAC  F009         	goto	u1740
  5047  001354                     u1741:
  5048  001354  EFC0  F009         	goto	l1917
  5049  001358                     u1740:
  5050  001358                     
  5051                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  5052  001358  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5053  00135C  0E01               	movlw	1
  5054  00135E  6E04               	movwf	(??_digitalRead+1)^0,c
  5055  001360  2A03               	incf	??_digitalRead^0,f,c
  5056  001362  EFB5  F009         	goto	u1754
  5057  001366                     u1755:
  5058  001366  90D8               	bcf	status,0,c
  5059  001368  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5060  00136A                     u1754:
  5061  00136A  2E03               	decfsz	??_digitalRead^0,f,c
  5062  00136C  EFB3  F009         	goto	u1755
  5063  001370  5004               	movf	(??_digitalRead+1)^0,w,c
  5064  001372  1480               	andwf	128,w,c	;volatile
  5065  001374  6E05               	movwf	(??_digitalRead+2)^0,c
  5066  001376  5005               	movf	(??_digitalRead+2)^0,w,c
  5067  001378  6E01               	movwf	?_digitalRead^0,c
  5068  00137A  6A02               	clrf	(?_digitalRead+1)^0,c
  5069  00137C  EF52  F00A         	goto	l156
  5070  001380                     l1917:
  5071  001380  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5072  001382  EFCE  F009         	goto	u1760
  5073  001386  5002               	movf	(digitalRead@pin+1)^0,w,c
  5074  001388  E107               	bnz	u1761
  5075  00138A  0E10               	movlw	16
  5076  00138C  5C01               	subwf	digitalRead@pin^0,w,c
  5077  00138E  B0D8               	btfsc	status,0,c
  5078  001390  EFCC  F009         	goto	u1761
  5079  001394  EFCE  F009         	goto	u1760
  5080  001398                     u1761:
  5081  001398  EFE4  F009         	goto	l1925
  5082  00139C                     u1760:
  5083  00139C                     
  5084                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  5085  00139C  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5086  0013A0  0EF8               	movlw	-8
  5087  0013A2  2603               	addwf	??_digitalRead^0,f,c
  5088  0013A4  0E01               	movlw	1
  5089  0013A6  6E04               	movwf	(??_digitalRead+1)^0,c
  5090  0013A8  2A03               	incf	??_digitalRead^0,f,c
  5091  0013AA  EFD9  F009         	goto	u1774
  5092  0013AE                     u1775:
  5093  0013AE  90D8               	bcf	status,0,c
  5094  0013B0  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5095  0013B2                     u1774:
  5096  0013B2  2E03               	decfsz	??_digitalRead^0,f,c
  5097  0013B4  EFD7  F009         	goto	u1775
  5098  0013B8  5004               	movf	(??_digitalRead+1)^0,w,c
  5099  0013BA  1481               	andwf	129,w,c	;volatile
  5100  0013BC  6E05               	movwf	(??_digitalRead+2)^0,c
  5101  0013BE  5005               	movf	(??_digitalRead+2)^0,w,c
  5102  0013C0  6E01               	movwf	?_digitalRead^0,c
  5103  0013C2  6A02               	clrf	(?_digitalRead+1)^0,c
  5104  0013C4  EF52  F00A         	goto	l156
  5105  0013C8                     l1925:
  5106  0013C8  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5107  0013CA  EFF2  F009         	goto	u1780
  5108  0013CE  5002               	movf	(digitalRead@pin+1)^0,w,c
  5109  0013D0  E107               	bnz	u1781
  5110  0013D2  0E18               	movlw	24
  5111  0013D4  5C01               	subwf	digitalRead@pin^0,w,c
  5112  0013D6  B0D8               	btfsc	status,0,c
  5113  0013D8  EFF0  F009         	goto	u1781
  5114  0013DC  EFF2  F009         	goto	u1780
  5115  0013E0                     u1781:
  5116  0013E0  EF08  F00A         	goto	l1933
  5117  0013E4                     u1780:
  5118  0013E4                     
  5119                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  5120  0013E4  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5121  0013E8  0EF0               	movlw	-16
  5122  0013EA  2603               	addwf	??_digitalRead^0,f,c
  5123  0013EC  0E01               	movlw	1
  5124  0013EE  6E04               	movwf	(??_digitalRead+1)^0,c
  5125  0013F0  2A03               	incf	??_digitalRead^0,f,c
  5126  0013F2  EFFD  F009         	goto	u1794
  5127  0013F6                     u1795:
  5128  0013F6  90D8               	bcf	status,0,c
  5129  0013F8  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5130  0013FA                     u1794:
  5131  0013FA  2E03               	decfsz	??_digitalRead^0,f,c
  5132  0013FC  EFFB  F009         	goto	u1795
  5133  001400  5004               	movf	(??_digitalRead+1)^0,w,c
  5134  001402  1482               	andwf	130,w,c	;volatile
  5135  001404  6E05               	movwf	(??_digitalRead+2)^0,c
  5136  001406  5005               	movf	(??_digitalRead+2)^0,w,c
  5137  001408  6E01               	movwf	?_digitalRead^0,c
  5138  00140A  6A02               	clrf	(?_digitalRead+1)^0,c
  5139  00140C  EF52  F00A         	goto	l156
  5140  001410                     l1933:
  5141  001410  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5142  001412  EF16  F00A         	goto	u1800
  5143  001416  5002               	movf	(digitalRead@pin+1)^0,w,c
  5144  001418  E107               	bnz	u1801
  5145  00141A  0E20               	movlw	32
  5146  00141C  5C01               	subwf	digitalRead@pin^0,w,c
  5147  00141E  B0D8               	btfsc	status,0,c
  5148  001420  EF14  F00A         	goto	u1801
  5149  001424  EF16  F00A         	goto	u1800
  5150  001428                     u1801:
  5151  001428  EF2C  F00A         	goto	l1941
  5152  00142C                     u1800:
  5153  00142C                     
  5154                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  5155  00142C  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5156  001430  0EE8               	movlw	-24
  5157  001432  2603               	addwf	??_digitalRead^0,f,c
  5158  001434  0E01               	movlw	1
  5159  001436  6E04               	movwf	(??_digitalRead+1)^0,c
  5160  001438  2A03               	incf	??_digitalRead^0,f,c
  5161  00143A  EF21  F00A         	goto	u1814
  5162  00143E                     u1815:
  5163  00143E  90D8               	bcf	status,0,c
  5164  001440  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5165  001442                     u1814:
  5166  001442  2E03               	decfsz	??_digitalRead^0,f,c
  5167  001444  EF1F  F00A         	goto	u1815
  5168  001448  5004               	movf	(??_digitalRead+1)^0,w,c
  5169  00144A  1483               	andwf	131,w,c	;volatile
  5170  00144C  6E05               	movwf	(??_digitalRead+2)^0,c
  5171  00144E  5005               	movf	(??_digitalRead+2)^0,w,c
  5172  001450  6E01               	movwf	?_digitalRead^0,c
  5173  001452  6A02               	clrf	(?_digitalRead+1)^0,c
  5174  001454  EF52  F00A         	goto	l156
  5175  001458                     l1941:
  5176  001458  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5177  00145A  EF3A  F00A         	goto	u1820
  5178  00145E  5002               	movf	(digitalRead@pin+1)^0,w,c
  5179  001460  E107               	bnz	u1821
  5180  001462  0E28               	movlw	40
  5181  001464  5C01               	subwf	digitalRead@pin^0,w,c
  5182  001466  B0D8               	btfsc	status,0,c
  5183  001468  EF38  F00A         	goto	u1821
  5184  00146C  EF3A  F00A         	goto	u1820
  5185  001470                     u1821:
  5186  001470  EF50  F00A         	goto	l161
  5187  001474                     u1820:
  5188  001474                     
  5189                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  5190  001474  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5191  001478  0EE0               	movlw	-32
  5192  00147A  2603               	addwf	??_digitalRead^0,f,c
  5193  00147C  0E01               	movlw	1
  5194  00147E  6E04               	movwf	(??_digitalRead+1)^0,c
  5195  001480  2A03               	incf	??_digitalRead^0,f,c
  5196  001482  EF45  F00A         	goto	u1834
  5197  001486                     u1835:
  5198  001486  90D8               	bcf	status,0,c
  5199  001488  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5200  00148A                     u1834:
  5201  00148A  2E03               	decfsz	??_digitalRead^0,f,c
  5202  00148C  EF43  F00A         	goto	u1835
  5203  001490  5004               	movf	(??_digitalRead+1)^0,w,c
  5204  001492  1484               	andwf	132,w,c	;volatile
  5205  001494  6E05               	movwf	(??_digitalRead+2)^0,c
  5206  001496  5005               	movf	(??_digitalRead+2)^0,w,c
  5207  001498  6E01               	movwf	?_digitalRead^0,c
  5208  00149A  6A02               	clrf	(?_digitalRead+1)^0,c
  5209  00149C  EF52  F00A         	goto	l156
  5210  0014A0                     l161:
  5211  0014A0                     
  5212                           ;io.c: 51:     return -1;
  5213  0014A0  6801               	setf	?_digitalRead^0,c
  5214  0014A2  6802               	setf	(?_digitalRead+1)^0,c
  5215  0014A4                     l156:
  5216  0014A4  0012               	return		;funcret
  5217  0014A6                     __end_of_digitalRead:
  5218                           	callstack 0
  5219                           
  5220 ;; *************** function _atraso_ms *****************
  5221 ;; Defined at:
  5222 ;;		line 2 in file "atraso.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;  num             2    0[COMRAM] unsigned int 
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;  i               2    2[COMRAM] int 
  5227 ;;  k               1    5[COMRAM] volatile unsigned char 
  5228 ;;  j               1    4[COMRAM] volatile unsigned char 
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  1    wreg      void 
  5231 ;; Registers used:
  5232 ;;		wreg, status,2, status,0
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5238 ;;      Params:         2       0       0       0       0       0       0
  5239 ;;      Locals:         4       0       0       0       0       0       0
  5240 ;;      Temps:          0       0       0       0       0       0       0
  5241 ;;      Totals:         6       0       0       0       0       0       0
  5242 ;;Total ram usage:        6 bytes
  5243 ;; Hardware stack levels used: 1
  5244 ;; This function calls:
  5245 ;;		Nothing
  5246 ;; This function is called by:
  5247 ;;		_main
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text33
  5252  001B5A                     __ptext33:
  5253                           	callstack 0
  5254  001B5A                     _atraso_ms:
  5255                           	callstack 30
  5256  001B5A                     
  5257                           ;atraso.c: 3:     volatile unsigned char j, k;;atraso.c: 4:     for (int i = 0; i < num;
      +                           i++) {
  5258  001B5A  0E00               	movlw	0
  5259  001B5C  6E04               	movwf	(atraso_ms@i+1)^0,c
  5260  001B5E  0E00               	movlw	0
  5261  001B60  6E03               	movwf	atraso_ms@i^0,c
  5262  001B62  EFD3  F00D         	goto	l2147
  5263  001B66                     l2125:
  5264                           
  5265                           ;atraso.c: 5:         for (j = 0; j < 41; j++) {
  5266  001B66  0E00               	movlw	0
  5267  001B68  6E05               	movwf	atraso_ms@j^0,c	;volatile
  5268  001B6A                     l2127:
  5269  001B6A  0E28               	movlw	40
  5270  001B6C  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  5271  001B6E  EFBB  F00D         	goto	u2041
  5272  001B72  EFBD  F00D         	goto	u2040
  5273  001B76                     u2041:
  5274  001B76  EFBF  F00D         	goto	l2131
  5275  001B7A                     u2040:
  5276  001B7A  EFD1  F00D         	goto	l2145
  5277  001B7E                     l2131:
  5278                           
  5279                           ;atraso.c: 6:             for (k = 0; k < 3; k++);
  5280  001B7E  0E00               	movlw	0
  5281  001B80  6E06               	movwf	atraso_ms@k^0,c	;volatile
  5282  001B82                     l2133:
  5283  001B82  0E02               	movlw	2
  5284  001B84  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  5285  001B86  EFC7  F00D         	goto	u2051
  5286  001B8A  EFC9  F00D         	goto	u2050
  5287  001B8E                     u2051:
  5288  001B8E  EFCB  F00D         	goto	l2137
  5289  001B92                     u2050:
  5290  001B92  EFCE  F00D         	goto	l2141
  5291  001B96                     l2137:
  5292  001B96  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  5293  001B98  EFC1  F00D         	goto	l2133
  5294  001B9C                     l2141:
  5295                           
  5296                           ;atraso.c: 7:         }
  5297  001B9C  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  5298  001B9E  EFB5  F00D         	goto	l2127
  5299  001BA2                     l2145:
  5300                           
  5301                           ;atraso.c: 9:     }
  5302  001BA2  4A03               	infsnz	atraso_ms@i^0,f,c
  5303  001BA4  2A04               	incf	(atraso_ms@i+1)^0,f,c
  5304  001BA6                     l2147:
  5305  001BA6  5001               	movf	atraso_ms@num^0,w,c
  5306  001BA8  5C03               	subwf	atraso_ms@i^0,w,c
  5307  001BAA  5002               	movf	(atraso_ms@num+1)^0,w,c
  5308  001BAC  5804               	subwfb	(atraso_ms@i+1)^0,w,c
  5309  001BAE  A0D8               	btfss	status,0,c
  5310  001BB0  EFDC  F00D         	goto	u2061
  5311  001BB4  EFDE  F00D         	goto	u2060
  5312  001BB8                     u2061:
  5313  001BB8  EFB3  F00D         	goto	l2125
  5314  001BBC                     u2060:
  5315  001BBC  0012               	return		;funcret
  5316  001BBE                     __end_of_atraso_ms:
  5317                           	callstack 0
  5318                           
  5319                           	psect	rparam
  5320  0000                     
  5321                           	psect	idloc
  5322                           
  5323                           ;Config register IDLOC0 @ 0x200000
  5324                           ;	unspecified, using default values
  5325  200000                     	org	2097152
  5326  200000  FF                 	db	255
  5327                           
  5328                           ;Config register IDLOC1 @ 0x200001
  5329                           ;	unspecified, using default values
  5330  200001                     	org	2097153
  5331  200001  FF                 	db	255
  5332                           
  5333                           ;Config register IDLOC2 @ 0x200002
  5334                           ;	unspecified, using default values
  5335  200002                     	org	2097154
  5336  200002  FF                 	db	255
  5337                           
  5338                           ;Config register IDLOC3 @ 0x200003
  5339                           ;	unspecified, using default values
  5340  200003                     	org	2097155
  5341  200003  FF                 	db	255
  5342                           
  5343                           ;Config register IDLOC4 @ 0x200004
  5344                           ;	unspecified, using default values
  5345  200004                     	org	2097156
  5346  200004  FF                 	db	255
  5347                           
  5348                           ;Config register IDLOC5 @ 0x200005
  5349                           ;	unspecified, using default values
  5350  200005                     	org	2097157
  5351  200005  FF                 	db	255
  5352                           
  5353                           ;Config register IDLOC6 @ 0x200006
  5354                           ;	unspecified, using default values
  5355  200006                     	org	2097158
  5356  200006  FF                 	db	255
  5357                           
  5358                           ;Config register IDLOC7 @ 0x200007
  5359                           ;	unspecified, using default values
  5360  200007                     	org	2097159
  5361  200007  FF                 	db	255
  5362                           
  5363                           	psect	config
  5364                           
  5365                           ; Padding undefined space
  5366  300000                     	org	3145728
  5367  300000  FF                 	db	255
  5368                           
  5369                           ;Config register CONFIG1H @ 0x300001
  5370                           ;	Oscillator Selection bits
  5371                           ;	OSC = HS, HS oscillator
  5372                           ;	Fail-Safe Clock Monitor Enable bit
  5373                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5374                           ;	Internal/External Oscillator Switchover bit
  5375                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5376  300001                     	org	3145729
  5377  300001  02                 	db	2
  5378                           
  5379                           ;Config register CONFIG2L @ 0x300002
  5380                           ;	Power-up Timer Enable bit
  5381                           ;	PWRT = OFF, PWRT disabled
  5382                           ;	Brown-out Reset Enable bits
  5383                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5384                           ;	Brown Out Reset Voltage bits
  5385                           ;	BORV = 0x2E, user specified literal
  5386  300002                     	org	3145730
  5387  300002  71                 	db	369
  5388                           
  5389                           ;Config register CONFIG2H @ 0x300003
  5390                           ;	Watchdog Timer Enable bit
  5391                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5392                           ;	Watchdog Timer Postscale Select bits
  5393                           ;	WDTPS = 1, 1:1
  5394  300003                     	org	3145731
  5395  300003  00                 	db	0
  5396                           
  5397                           ; Padding undefined space
  5398  300004                     	org	3145732
  5399  300004  FF                 	db	255
  5400                           
  5401                           ;Config register CONFIG3H @ 0x300005
  5402                           ;	CCP2 MUX bit
  5403                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5404                           ;	PORTB A/D Enable bit
  5405                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5406                           ;	Low-Power Timer1 Oscillator Enable bit
  5407                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5408                           ;	MCLR Pin Enable bit
  5409                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5410  300005                     	org	3145733
  5411  300005  83                 	db	131
  5412                           
  5413                           ;Config register CONFIG4L @ 0x300006
  5414                           ;	Stack Full/Underflow Reset Enable bit
  5415                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5416                           ;	Single-Supply ICSP Enable bit
  5417                           ;	LVP = OFF, Single-Supply ICSP disabled
  5418                           ;	Extended Instruction Set Enable bit
  5419                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5420                           ;	Background Debugger Enable bit
  5421                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5422  300006                     	org	3145734
  5423  300006  80                 	db	128
  5424                           
  5425                           ; Padding undefined space
  5426  300007                     	org	3145735
  5427  300007  FF                 	db	255
  5428                           
  5429                           ;Config register CONFIG5L @ 0x300008
  5430                           ;	Code Protection bit
  5431                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5432                           ;	Code Protection bit
  5433                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5434                           ;	Code Protection bit
  5435                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5436                           ;	Code Protection bit
  5437                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5438  300008                     	org	3145736
  5439  300008  0F                 	db	15
  5440                           
  5441                           ;Config register CONFIG5H @ 0x300009
  5442                           ;	Boot Block Code Protection bit
  5443                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5444                           ;	Data EEPROM Code Protection bit
  5445                           ;	CPD = OFF, Data EEPROM not code-protected
  5446  300009                     	org	3145737
  5447  300009  C0                 	db	192
  5448                           
  5449                           ;Config register CONFIG6L @ 0x30000A
  5450                           ;	Write Protection bit
  5451                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5452                           ;	Write Protection bit
  5453                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5454                           ;	Write Protection bit
  5455                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5456                           ;	Write Protection bit
  5457                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5458  30000A                     	org	3145738
  5459  30000A  0F                 	db	15
  5460                           
  5461                           ;Config register CONFIG6H @ 0x30000B
  5462                           ;	Configuration Register Write Protection bit
  5463                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5464                           ;	Boot Block Write Protection bit
  5465                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5466                           ;	Data EEPROM Write Protection bit
  5467                           ;	WRTD = OFF, Data EEPROM not write-protected
  5468  30000B                     	org	3145739
  5469  30000B  E0                 	db	224
  5470                           
  5471                           ;Config register CONFIG7L @ 0x30000C
  5472                           ;	Table Read Protection bit
  5473                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5474                           ;	Table Read Protection bit
  5475                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5476                           ;	Table Read Protection bit
  5477                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5478                           ;	Table Read Protection bit
  5479                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5480  30000C                     	org	3145740
  5481  30000C  0F                 	db	15
  5482                           
  5483                           ;Config register CONFIG7H @ 0x30000D
  5484                           ;	Boot Block Table Read Protection bit
  5485                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5486  30000D                     	org	3145741
  5487  30000D  40                 	db	64
  5488                           tosu	equ	0xFFF
  5489                           tosh	equ	0xFFE
  5490                           tosl	equ	0xFFD
  5491                           stkptr	equ	0xFFC
  5492                           pclatu	equ	0xFFB
  5493                           pclath	equ	0xFFA
  5494                           pcl	equ	0xFF9
  5495                           tblptru	equ	0xFF8
  5496                           tblptrh	equ	0xFF7
  5497                           tblptrl	equ	0xFF6
  5498                           tablat	equ	0xFF5
  5499                           prodh	equ	0xFF4
  5500                           prodl	equ	0xFF3
  5501                           indf0	equ	0xFEF
  5502                           postinc0	equ	0xFEE
  5503                           postdec0	equ	0xFED
  5504                           preinc0	equ	0xFEC
  5505                           plusw0	equ	0xFEB
  5506                           fsr0h	equ	0xFEA
  5507                           fsr0l	equ	0xFE9
  5508                           wreg	equ	0xFE8
  5509                           indf1	equ	0xFE7
  5510                           postinc1	equ	0xFE6
  5511                           postdec1	equ	0xFE5
  5512                           preinc1	equ	0xFE4
  5513                           plusw1	equ	0xFE3
  5514                           fsr1h	equ	0xFE2
  5515                           fsr1l	equ	0xFE1
  5516                           bsr	equ	0xFE0
  5517                           indf2	equ	0xFDF
  5518                           postinc2	equ	0xFDE
  5519                           postdec2	equ	0xFDD
  5520                           preinc2	equ	0xFDC
  5521                           plusw2	equ	0xFDB
  5522                           fsr2h	equ	0xFDA
  5523                           fsr2l	equ	0xFD9
  5524                           status	equ	0xFD8

Data Sizes:
    Strings     68
    Constant    26
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     38      50
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 1535
		 -> STR_11(CODE[11]), RAM(DATA[1535]), STR_6(CODE[15]), STR_5(CODE[14]), 
		 -> STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[15]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_lcdString
    _ssdUpdate->_soWrite
    _ssdInit->_pinMode
    _ssdDigit->___awmod
    _pwmSet->___lwdiv
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _lcdString->_lcdChar
    _lcdPosition->_lcdCommand
    _lcdNumber->___awmod
    _lcdNumber->_lcdChar
    _lcdChar->_pushByte
    ___awmod->___awdiv
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  164170
                                             20 COMRAM    18    18      0
                            ___awdiv
                            ___awmod
                             ___wmul
                          _atraso_ms
                         _kpDebounce
                             _kpInit
                          _kpReadKey
                         _lcdCommand
                            _lcdInit
                          _lcdNumber
                        _lcdPosition
                          _lcdString
                            _pwmInit
                             _pwmSet
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   14081
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     784
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwmSet                                               5     5      0     868
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     550
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcdString                                            6     4      2   19133
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          4     0      4   19101
                                             14 COMRAM     4     0      4
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _lcdNumber                                            4     2      2   22085
                                             14 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   18435
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1664
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1668
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   42412
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   18141
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   18405
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   18033
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    3712
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpReadKey                                            5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    2568
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   11233
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _soWrite                                              3     1      2   10749
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseEnClock                                         0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseClockData                                       0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    3332
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _atraso_ms                                            6     4      2     366
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___wmul
   _atraso_ms
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpReadKey
   _lcdCommand
     _delayMili
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdNumber
     ___awdiv
     ___awmod
     _lcdChar
       _delayMicro
       _pushByte
   _lcdPosition
     _lcdCommand
   _lcdString
     _lcdChar
   _pwmInit
     _pwmFrequency
       ___aldiv
   _pwmSet
     ___lwdiv
     ___wmul
   _ssdDigit
     ___awdiv (ARG)
     ___awmod (ARG)
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate
     _digitalWrite
     _soWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     26      32       1       39.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      32      15        0.0%
DATA                 0      0      32       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 16:44:22 2021

         _pulseEnablePin 1D14             lcdString@msg 000F                       l40 0758  
                     l60 0A84                       l37 0704                       l38 0720  
                     l39 073C                       l72 0CAE                       l57 0A30  
                     l58 0A4C                       l59 0A68             ___awdiv@sign 0006  
                     _v0 0030                       _v1 002F                       _v2 002E  
                     _v3 002D      ___wmul@multiplicand 0003                      l110 1BBC  
                    l223 15C2                      l152 11CE                      l312 1E82  
                    l161 14A0                      l225 15DA                      l209 1A04  
                    l306 1D92                      l251 1EF4                      l156 14A4  
                    l228 1DFE                      l157 14A0                      l309 1E58  
                    l317 1D12                      l245 1E2E                      l254 1C16  
                    l262 1DCC                      l239 1F62                      l271 198C  
                    l248 1D54                      l280 185E                      l360 1EA8  
                    l344 1C6E                      l257 1F30                      l265 1F12  
                    l186 0F80                      l354 133A                      l604 190E  
                    l277 1AEC                      l293 1B58                      l357 1CC4  
                    l439 16E6                      l296 1ECE                      l299 1F4A  
                    l591 17AA                      l851 1A70                      l858 1A78  
                    _PR2 000FCB                      u800 19CE                      u801 19CA  
                    u810 1A02                      u811 19FE                      u794 19AE  
                    u795 19A8             ___awmod@sign 000E                      wreg 000FE8  
                   l2001 179A                     l2003 17A2                     l2011 1872  
                   l2021 18A6                     l2013 187A                     l2101 194C  
                   l2031 18E2                     l2023 18AE                     l2015 187E  
                   l2007 1860                     l2111 1DC2                     l2103 1950  
                   l2201 14A6                     l2033 18E8                     l2025 18B6  
                   l2017 188C                     l2009 1864                     l2105 1D94  
                   l2121 1B4A                     l2113 1AF0                     l2131 1B7E  
                   l2123 1B5A                     l2211 1548                     l2203 14B6  
                   l1411 19E2                     l2027 18C4                     l2035 18EE  
                   l2019 1894                     l2107 1DA6                     l2051 1A30  
                   l2043 1A06                     l2115 1B0E                     l2141 1B9C  
                   l2133 1B82                     l2125 1B66                     l2221 15B0  
                   l2213 1566                     l1413 19E6                     l1405 1996  
                   l2037 18FE                     l2029 18DA                     l2109 1DB0  
                   l2061 1A64                     l2053 1A3E                     l2045 1A0E  
                   l2117 1B2A                     l2301 093A                     l2127 1B6A  
                   l2223 15B6                     l2215 1590                     l2207 14D6  
                   l1415 1A02                     l1407 19CE                     l2071 1818  
                   l2039 1906                     l2231 1A86                     l2063 1A6A  
                   l2055 1A44                     l2047 1A20                     l2119 1B32  
                   l2151 1C2A                     l2311 0978                     l2303 0942  
                   l2137 1B96                     l2145 1BA2                     l2225 15BA  
                   l2209 1522                     l2081 1858                     l2073 1832  
                   l2233 1AD2                     l2057 1A5A                     l2049 1A28  
                   l2161 1C58                     l2153 1C2E                     l2065 1C70  
                   l2401 0D18                     l2321 09A8                     l2313 0984  
                   l2305 0956                     l2241 069C                     l2147 1BA6  
                   l2227 15D2                     l2219 1598                     l2083 1DCE  
                   l2075 1840                     l2067 17AC                     l2091 1F38  
                   l2059 1A62                     l2163 1C6A                     l2155 1C3E  
                   l2171 125C                     l2403 0D20                     l2331 0A28  
                   l2323 09C8                     l2307 095E                     l2315 098E  
                   l2251 0718                     l2243 06BC                     l2235 0660  
                   l2085 1DFA                     l2077 184C                     l2069 180C  
                   l2229 1A7A                     l2093 1F3A                     l2157 1C42  
                   l2149 1C1A                     l2181 12B0                     l2173 1264  
                   l2165 11D0                     l2405 0D28                     l2341 0A9E  
                   l2333 0A44                     l2325 09E8                     l2317 0996  
                   l2309 0972                     l2261 077E                     l2253 0734  
                   l2245 06DC                     l2237 0670                     l2079 1852  
                   l2095 1F3E                     l2087 1F32                     l2159 1C54  
                   l2183 12C4                     l2175 127C                     l2167 1230  
                   l2343 0AAA                     l2335 0A60                     l2327 0A08  
                   l2319 099C                     l2255 0750                     l2247 06E8  
                   l2263 0788                     l2239 067C                     l1801 1CF6  
                   l2097 1910                     l2089 1F34                     l2185 12CC  
                   l2177 1290                     l2169 1248                     l2361 0B9C  
                   l2337 0A7C                     l2329 0A14                     l2345 0AB4  
                   l2281 0876                     l2273 0848                     l2265 083C  
                   l2257 076C                     l2249 06FC                     l1803 1CFC  
                   l1811 1D28                     l2099 191C                     l2187 12E4  
                   l2179 1298                     l2195 1300                     l2427 0C32  
                   l2371 0BD4                     l2363 0BA4                     l2355 0B74  
                   l2347 0B68                     l2339 0A98                     l2291 08EE  
                   l2283 0882                     l2275 084C                     l2267 0840  
                   l2259 0772                     l1805 1CFE                     l1821 0D82  
                   l1813 1D34                     l1901 16C6                     l2429 1314  
                   l2189 12F8                     l2373 0BF4                     l2365 0BB4  
                   l2381 0C58                     l2357 0B78                     l2349 0B6C  
                   l2293 0902                     l2285 08A2                     l2277 0868  
                   l1911 1358                     l1751 0FB0                     l1807 1D0E  
                   l1831 0E1C                     l1823 0DA4                     l1815 0D34  
                   l1399 198E                     l1903 16D6                     l2391 0CB2  
                   l2383 0C6A                     l2375 0BFC                     l2367 0BBC  
                   l2359 0B94                     l2295 090A                     l2287 08C2  
                   l2279 0870                     l1761 1048                     l1753 0FD0  
                   l1841 0EB0                     l1833 0E38                     l1825 0DC0  
                   l1817 0D50                     l1809 1D14                     l2393 0CD2  
                   l2385 0C76                     l2369 0BCC                     l2297 091E  
                   l2289 08E2                     l1771 10E2                     l1763 106A  
                   l1755 0FF2                     l1747 0F82                     l1851 0F3A  
                   l1843 0EC2                     l1835 0E4A                     l1827 0DD2  
                   l1819 0D62                     l1907 1F16                     l2395 0CF2  
                   l2387 0C82                     l2379 0C1C                     l2299 0926  
                   l1941 1458                     l1933 1410                     l1925 13C8  
                   l1917 1380                     l1909 133C                     l1781 1176  
                   l1773 10FE                     l1765 1086                     l1757 100E  
                   l1749 0F9E                     l1853 0F5E                     l1845 0EE6  
                   l1837 0E6E                     l1829 0DF6                     l1861 1BC0  
                   l2397 0CFE                     l2389 0C96                     l1943 1474  
                   l1935 142C                     l1927 13E4                     l1919 139C  
                   l1783 1190                     l1775 1118                     l1767 10A0  
                   l1759 1028                     l1791 1CC6                     l1847 0F0C  
                   l1839 0E94                     l1855 1E00                     l1951 1EF8  
                   l1871 1602                     l1863 15DC                     l2399 0D12  
                   l1785 11B0                     l1777 1138                     l1769 10C0  
                   l1793 1CDA                     l1849 0F28                     l1857 1E0C  
                   l1953 1F06                     l1881 164A                     l1873 1610  
                   l1865 15E0                     l1779 115A                     l1787 1E30  
                   l1947 1D56                     l1859 1E10                     l1971 1706  
                   l1963 16E8                     l1891 1694                     l1883 1652  
                   l1875 1620                     l1867 15EE                     l1955 1EAA  
                   l1789 1E5A                     l1949 1ED2                     l1981 173A  
                   l1973 1714                     l1965 16EC                     l1893 16A4  
                   l1885 165E                     l1877 1624                     l1869 15FE  
                   l1957 1E84                     l1799 1CDE                     l1991 1774  
                   l1983 1742                     l1975 171C                     l1967 16FA  
                   l1895 16A6                     l1887 166C                     l1879 1634  
                   l1959 1EA0                     l1993 177C                     l1985 174A  
                   l1977 1720                     l1969 1702                     l1897 16B0  
                   l1889 1676                     l1995 177E                     l1987 1758  
                   l1979 1728                     l1899 16B6                     l1997 1784  
                   l1989 175E                     l1999 178A                     STR_1 062A  
                   STR_2 061B                     STR_3 0638                     STR_4 0644  
                   STR_5 062A                     STR_6 061B                     STR_7 065D  
                   STR_8 0642                     STR_9 065B                     u2000 197C  
                   u2010 198C                     u2011 1988                     u1300 100E  
                   u2020 1DA6                     u2100 1C6A                     u1301 100A  
                   u2021 1DA2                     u2101 1C66                     u1310 1028  
                   u2110 14D2                     u2030 1DC2                     u1311 1024  
                   u2111 14CE                     u2031 1DBE                     u2007 1972  
                   u2040 1B7A                     u2200 06BC                     u2041 1B76  
                   u2201 06B8                     u2050 1B92                     u2130 1522  
                   u2210 06DC                     u2051 1B8E                     u2131 151E  
                   u2211 06D8                     u2060 1BBC                     u1420 1176  
                   u1404 112A                     u1340 1086                     u1324 103A  
                   u1260 0F9E                     u2124 14F2                     u2300 0902  
                   u2220 06FC                     u2061 1BB8                     u1421 1172  
                   u1405 1126                     u1341 1082                     u1325 1036  
                   u1261 0F9A                     u2125 14EC                     u2301 08FE  
                   u2221 06F8                     u1430 1190                     u1414 114A  
                   u1350 10A0                     u1334 105A                     u1270 0FB0  
                   u2150 1566                     u1510 0DC0                     u2070 1C2A  
                   u2310 091E                     u2230 0718                     u1431 118C  
                   u1415 1146                     u1351 109C                     u1335 1056  
                   u1271 0FAC                     u2151 1562                     u1511 0DBC  
                   u2071 1C26                     u2311 091A                     u2231 0714  
                   u2144 153A                     u1600 0EC2                     u1520 0DD2  
                   u1504 0D94                     u2080 1C3E                     u2400 0A7C  
                   u2320 093A                     u2240 0734                     u2145 1534  
                   u1601 0EBE                     u1521 0DCE                     u1505 0D90  
                   u2081 1C3A                     u2401 0A78                     u2321 0936  
                   u2241 0730                     u2170 15B0                     u2090 1C54  
                   u2410 0A98                     u2330 0956                     u2250 0750  
                   u2171 15AC                     u2091 1C50                     u2411 0A94  
                   u2331 0952                     u2251 074C                     u1444 11A2  
                   u1380 10FE                     u1364 10B2                     u1284 0FC2  
                   u1460 1D0E                     u2180 15D2                     u2164 1582  
                   u1700 164A                     u2420 0B94                     u2340 0972  
                   u2260 076C                     u1445 119E                     u1381 10FA  
                   u1365 10AE                     u1285 0FBE                     u1461 1D0A  
                   u2181 15CE                     u2165 157C                     u1701 1646  
                   u2421 0B90                     u2341 096E                     u2261 0768  
                   u1454 11C2                     u1390 1118                     u1374 10D2  
                   u1294 0FE2                     u1630 0F28                     u1614 0ED8  
                   u1550 0E38                     u1534 0DE8                     u1470 0D50  
                   u2190 1AEC                     u1710 166C                     u2430 0CD2  
                   u2350 09E8                     u2270 0868                     u1455 11BE  
                   u1391 1114                     u1375 10CE                     u1295 0FDE  
                   u1631 0F24                     u1615 0ED4                     u1551 0E34  
                   u1535 0DE4                     u1471 0D4C                     u2191 1AE8  
                   u1711 1668                     u2431 0CCE                     u2351 09E4  
                   u2271 0864                     u1800 142C                     u1640 0F3A  
                   u1624 0EFC                     u1560 0E4A                     u1544 0E0C  
                   u1480 0D62                     u1720 1694                     u2440 0CF2  
                   u2360 0A08                     u2280 08C2                     u1801 1428  
                   u1641 0F36                     u1625 0EF8                     u1561 0E46  
                   u1545 0E08                     u1481 0D5E                     u1721 1690  
                   u2441 0CEE                     u2361 0A04                     u2281 08BE  
                   u1730 16C6                     u2450 0D12                     u2370 0A28  
                   u2290 08E2                     u1731 16C2                     u2451 0D0E  
                   u2371 0A24                     u2291 08DE                     u1820 1474  
                   u1740 1358                     u1900 1872                     u2380 0A44  
                   u1821 1470                     u1741 1354                     u1901 186E  
                   u2381 0A40                     u1814 1442                     u1654 0F50  
                   u1590 0EB0                     u1574 0E60                     u1494 0D74  
                   u1670 1E2E                     u1910 188C                     u2390 0A60  
                   u1815 143E                     u1655 0F4C                     u1591 0EAC  
                   u1575 0E5C                     u1495 0D70                     u1671 1E2A  
                   u1911 1888                     u2391 0A5C                     u1760 139C  
                   u1664 0F74                     u1584 0E84                     u1840 16FA  
                   u1920 18A6                     u1680 15EE                     u1761 1398  
                   u1665 0F70                     u1585 0E80                     u1841 16F6  
                   u1921 18A2                     u1681 15EA                     u1834 148A  
                   u1754 136A                     u1850 1714                     u1930 18C4  
                   u1690 1610                     u1835 1486                     u1755 1366  
                   u1851 1710                     u1931 18C0                     u1691 160C  
                   u1780 13E4                     u1860 173A                     u1940 18DA  
                   u1781 13E0                     u1861 1736                     u1941 18D6  
                   u1774 13B2                     u1870 1758                     u1950 18FE  
                   u1775 13AE                     u1871 1754                     u1951 18FA  
                   u1880 1774                     u1960 1A20                     u1881 1770  
                   u1961 1A1C                     u1794 13FA                     u1890 179A  
                   u1970 1A3E                     u1795 13F6                     u1891 1796  
                   u1971 1A3A                     u1980 1A5A                     u1981 1A56  
                   u1990 1948                     u1997 193E                     _main 0660  
                   _keys 002B         ??_PulseClockData 0007                     fsr0h 000FEA  
                   indf0 000FEF                     fsr0l 000FE9                     prodh 000FF4  
                   prodl 000FF3                     start 0000          pushNibble@value 000C  
           ___param_bank 000000   __end_of_pulseEnablePin 1D56           pwmSet@porcento 000A  
        __end_of___aldiv 16E8                    ?_main 0001          __end_of___awdiv 17AC  
                  STR_10 064E                    STR_11 0650          __end_of___awmod 1910  
        ___awdiv@divisor 0003                    _T2CON 000FCA          __end_of___lwdiv 1A7A  
        ___awdiv@counter 0005                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
        __end_of_charKey 061B                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdChar 1F14          __end_of_lcdInit 1860             main@operacao 001B  
        __end_of_pinMode 0F82                    _valor 0601                    main@t 001D  
                  main@x 0017                    main@y 0019          __end_of_soWrite 1D14  
                  tablat 000FF5          __end_of_ssdInit 1CC6          __end_of_pwmInit 1F4C  
                  status 000FD8             pushNibble@rs 000A     __end_of_digitalWrite 11D0  
        __initialization 1F4C          ?_pulseEnablePin 0001             __end_of_main 0D34  
                 ??_main 0015            __activetblptr 000002     __size_of_digitalRead 016A  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _CCPR2L 000FBB  
       ___awdiv@dividend 0001             atraso_ms@num 0001     __size_of_lcdPosition 003A  
              ??___aldiv 0009                   ___wmul 1E84                ??___awdiv 0005  
              ??___awmod 000D                ??___lwdiv 0005                   _kpInit 1DCE  
                 clear_0 1F52                   _soInit 1D56         ___awdiv@quotient 0007  
        ___awmod@divisor 000B                ??_lcdChar 000E                   isa$std 000001  
              ??_lcdInit 000F                   _pwmSet 1AEE          ___awmod@counter 000D  
       __end_of_ssdDigit 1C70                ??_pinMode 0005             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_soWrite 0009                ??_ssdInit 0007                ??_pwmInit 0011  
       __end_of_pushByte 1C18               __accesstop 0080  __end_of__initialization 1F58  
          ___rparam_used 000001            pushByte@value 000D              pinMode@type 0003  
         __pcstackCOMRAM 0001            __end_of_valor 0611       __size_of_delayMili 0030  
     __size_of_lcdNumber 0074       __size_of_lcdString 007E       __size_of_kpReadKey 0078  
     __size_of_atraso_ms 0064    __size_of_digitalWrite 024E               _delayMicro 1F62  
             _lcdCommand 1F14                  ?___wmul 0001                  ?_kpInit 0001  
                _CCP2CON 000FBA                  ?_soInit 0001               _kpDebounce 14A6  
                ?_pwmSet 0001       __size_of_ssdUpdate 016C             _digitalWrite 0F82  
      __end_of_delayMili 1E30         ??_pulseEnablePin 0007                  __Hparam 0000  
      __end_of_lcdNumber 1AEE                  __Lparam 0000                ?_ssdDigit 000F  
      __end_of_lcdString 198E          kpDebounce@tempo 0032                  ___aldiv 15DC  
      __end_of_kpReadKey 1A06                  ___awdiv 16E8                  ___awmod 1860  
              ?_pushByte 000A          __size_of___wmul 0026                  ___lwdiv 1A06  
      __end_of_atraso_ms 1BBE             __psmallconst 0600          __size_of_kpInit 0032  
                _charKey 0611              ssdDigit@val 0010              ssdDigit@pos 000F  
                __pcinit 1F4C                  _lcdChar 1EF6                  __ramtop 0600  
        __size_of_soInit 003E                  _lcdInit 17AC                  __ptext0 0660  
                __ptext1 11D0                  __ptext2 1C70                  __ptext3 1C18  
                __ptext4 1AEE                  __ptext5 1E84                  __ptext6 1A06  
                __ptext7 1F32                  __ptext8 1EAA                  __ptext9 15DC  
        __size_of_pwmSet 006C                  _display 0031                  _pinMode 0D34  
       ___awmod@dividend 0009         ___aldiv@dividend 0001               delayMili@a 0001  
             delayMili@i 0004                  _soWrite 1CC6                  _ssdInit 1C70  
                _pwmInit 1F32     end_of_initialization 1F58            ?_PulseEnClock 0001  
          __Lmediumconst 0000           digitalRead@pin 0001            ?_pwmFrequency 000F  
            ?_delayMicro 0001        __end_of_ssdUpdate 133C               ??_ssdDigit 0010  
       ___aldiv@quotient 000B              ?_lcdCommand 0001                  postinc0 000FEE  
             ??_pushByte 000C  __size_of_PulseClockData 002A            ??_digitalRead 0003  
            ?_kpDebounce 0001               lcdNumber@i 0011               _pushNibble 1ED0  
             lcdString@i 0013            ??_lcdPosition 0013           ??_PulseEnClock 0007  
         ??_pwmFrequency 0011               kpReadKey@i 0004               atraso_ms@i 0003  
             atraso_ms@j 0005               atraso_ms@k 0006           __end_of___wmul 1EAA  
         __end_of_kpInit 1E00           __end_of_soInit 1D94           __end_of_pwmSet 1B5A  
    __size_of_delayMicro 0002      start_initialization 1F4C      __end_of_digitalRead 14A6  
    __size_of_lcdCommand 001E      __size_of_kpDebounce 0136      __end_of_lcdPosition 1DCE  
      kpDebounce@oldRead 0027        kpDebounce@newRead 0029                 ??___wmul 0005  
               ??_kpInit 0007                 ??_soInit 0007                 ??_pwmSet 0008  
            __pbssCOMRAM 0027              ?_pushNibble 000A               pinMode@pin 0001  
              _delayMili 1E00         ___lwdiv@dividend 0001                 ?___aldiv 0001  
               ?___awdiv 0001                 ?___awmod 0009        __size_of_ssdDigit 0058  
         _PulseClockData 1E5A                _lcdNumber 1A7A                 ?___lwdiv 0001  
   __end_of_PulseEnClock 1E5A                _lcdString 1910              _digitalRead 133C  
               ?_lcdChar 0001        __size_of_pushByte 005A                 ?_lcdInit 0001  
              _kpReadKey 198E     __end_of_pwmFrequency 1ED0                _atraso_ms 1B5A  
            __smallconst 0600                 ?_pinMode 0001                 ?_soWrite 0007  
               ?_ssdInit 0001                 ?_pwmInit 0001         ___lwdiv@quotient 0005  
            _lcdPosition 1D94         pwmFrequency@freq 000F          ___aldiv@divisor 0005  
        ___aldiv@counter 0009           ___wmul@product 0005             ??_delayMicro 0003  
             ?_delayMili 0001   __end_of_PulseClockData 1E84      __size_of_pushNibble 0026  
           ??_lcdCommand 000E                _ssdUpdate 11D0               ?_lcdNumber 000F  
             ?_lcdString 000F             ??_kpDebounce 000A               ?_kpReadKey 0001  
      ___wmul@multiplier 0001               ?_atraso_ms 0001          lcdCommand@value 000E  
              main@tecla 0025       __end_of_delayMicro 1F64       __end_of_lcdCommand 1F32  
             pushByte@rs 000A             lcdChar@value 000E       __end_of_kpDebounce 15DC  
               __Hrparam 0000                 __Lrparam 0000          lcdPosition@line 000F  
        ?_PulseClockData 0001               ?_ssdUpdate 0001         __size_of___aldiv 010C  
       __size_of___awdiv 00C4         __size_of___awmod 00B0  __size_of_pulseEnablePin 0042  
         lcdNumber@value 000F         __size_of___lwdiv 0074         __size_of_lcdChar 001E  
       __size_of_lcdInit 00B4         __size_of_pinMode 024E          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 __ptext10 1910                 __ptext11 1D94  
               __ptext20 1D14                 __ptext12 1A7A                 __ptext21 1F62  
               __ptext13 1EF6                 __ptext30 1E5A                 __ptext22 1E00  
               __ptext14 1860                 __ptext31 0F82                 __ptext23 198E  
               __ptext15 16E8                 __ptext32 133C                 __ptext24 1DCE  
               __ptext16 17AC                 __ptext33 1B5A                 __ptext25 1D56  
               __ptext17 1ED0                 __ptext26 0D34                 __ptext18 1F14  
               __ptext27 14A6                 __ptext19 1BBE                 __ptext28 1CC6  
               __ptext29 1E30         __size_of_soWrite 004E         __size_of_ssdInit 0056  
       __size_of_pwmInit 001A            __size_of_main 06D4              ??_delayMili 0003  
  __size_of_PulseEnClock 002A                 _ssdDigit 1C18              delayMicro@a 0001  
               isa$xinst 000000             soWrite@value 0007    __size_of_pwmFrequency 0026  
               _pushByte 1BBE              ??_lcdNumber 0011                pwmSet@val 000B  
            ??_lcdString 0011                 main@num1 0021                 main@num2 0023  
               main@temp 001F              ??_kpReadKey 0001              ??_atraso_ms 0003  
           ??_pushNibble 000C           lcdPosition@col 0011            ?_digitalWrite 0001  
           _PulseEnClock 1E30        digitalWrite@value 0003             _pwmFrequency 1EAA  
               soWrite@i 0009              ??_ssdUpdate 000A       __end_of_pushNibble 1EF6  
           ?_digitalRead 0001              kpDebounce@i 000D           ??_digitalWrite 0005  
           ___aldiv@sign 000A             ?_lcdPosition 000F          digitalWrite@pin 0001  
